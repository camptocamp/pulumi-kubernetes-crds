// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AppProject provides a logical grouping of applications, providing controls for: * where the apps may deploy to (cluster whitelist) * what may be deployed (repository whitelist, resource whitelist/blacklist) * who can access these applications (roles, OIDC group claims bindings) * and what they can do (RBAC policies) * automation access to these roles (JWT tokens)
type AppProjectType struct {
	ApiVersion *string           `pulumi:"apiVersion"`
	Kind       *string           `pulumi:"kind"`
	Metadata   metav1.ObjectMeta `pulumi:"metadata"`
	// AppProjectSpec is the specification of an AppProject
	Spec AppProjectSpec `pulumi:"spec"`
	// AppProjectStatus contains status information for AppProject CRs
	Status *AppProjectStatus `pulumi:"status"`
}

// AppProjectTypeInput is an input type that accepts AppProjectTypeArgs and AppProjectTypeOutput values.
// You can construct a concrete instance of `AppProjectTypeInput` via:
//
//          AppProjectTypeArgs{...}
type AppProjectTypeInput interface {
	pulumi.Input

	ToAppProjectTypeOutput() AppProjectTypeOutput
	ToAppProjectTypeOutputWithContext(context.Context) AppProjectTypeOutput
}

// AppProject provides a logical grouping of applications, providing controls for: * where the apps may deploy to (cluster whitelist) * what may be deployed (repository whitelist, resource whitelist/blacklist) * who can access these applications (roles, OIDC group claims bindings) * and what they can do (RBAC policies) * automation access to these roles (JWT tokens)
type AppProjectTypeArgs struct {
	ApiVersion pulumi.StringPtrInput  `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput  `pulumi:"kind"`
	Metadata   metav1.ObjectMetaInput `pulumi:"metadata"`
	// AppProjectSpec is the specification of an AppProject
	Spec AppProjectSpecInput `pulumi:"spec"`
	// AppProjectStatus contains status information for AppProject CRs
	Status AppProjectStatusPtrInput `pulumi:"status"`
}

func (AppProjectTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectType)(nil)).Elem()
}

func (i AppProjectTypeArgs) ToAppProjectTypeOutput() AppProjectTypeOutput {
	return i.ToAppProjectTypeOutputWithContext(context.Background())
}

func (i AppProjectTypeArgs) ToAppProjectTypeOutputWithContext(ctx context.Context) AppProjectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectTypeOutput)
}

// AppProject provides a logical grouping of applications, providing controls for: * where the apps may deploy to (cluster whitelist) * what may be deployed (repository whitelist, resource whitelist/blacklist) * who can access these applications (roles, OIDC group claims bindings) * and what they can do (RBAC policies) * automation access to these roles (JWT tokens)
type AppProjectTypeOutput struct{ *pulumi.OutputState }

func (AppProjectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectType)(nil)).Elem()
}

func (o AppProjectTypeOutput) ToAppProjectTypeOutput() AppProjectTypeOutput {
	return o
}

func (o AppProjectTypeOutput) ToAppProjectTypeOutputWithContext(ctx context.Context) AppProjectTypeOutput {
	return o
}

func (o AppProjectTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AppProjectTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AppProjectTypeOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v AppProjectType) metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaOutput)
}

// AppProjectSpec is the specification of an AppProject
func (o AppProjectTypeOutput) Spec() AppProjectSpecOutput {
	return o.ApplyT(func(v AppProjectType) AppProjectSpec { return v.Spec }).(AppProjectSpecOutput)
}

// AppProjectStatus contains status information for AppProject CRs
func (o AppProjectTypeOutput) Status() AppProjectStatusPtrOutput {
	return o.ApplyT(func(v AppProjectType) *AppProjectStatus { return v.Status }).(AppProjectStatusPtrOutput)
}

type AppProjectMetadata struct {
}

// AppProjectMetadataInput is an input type that accepts AppProjectMetadataArgs and AppProjectMetadataOutput values.
// You can construct a concrete instance of `AppProjectMetadataInput` via:
//
//          AppProjectMetadataArgs{...}
type AppProjectMetadataInput interface {
	pulumi.Input

	ToAppProjectMetadataOutput() AppProjectMetadataOutput
	ToAppProjectMetadataOutputWithContext(context.Context) AppProjectMetadataOutput
}

type AppProjectMetadataArgs struct {
}

func (AppProjectMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectMetadata)(nil)).Elem()
}

func (i AppProjectMetadataArgs) ToAppProjectMetadataOutput() AppProjectMetadataOutput {
	return i.ToAppProjectMetadataOutputWithContext(context.Background())
}

func (i AppProjectMetadataArgs) ToAppProjectMetadataOutputWithContext(ctx context.Context) AppProjectMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectMetadataOutput)
}

type AppProjectMetadataOutput struct{ *pulumi.OutputState }

func (AppProjectMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectMetadata)(nil)).Elem()
}

func (o AppProjectMetadataOutput) ToAppProjectMetadataOutput() AppProjectMetadataOutput {
	return o
}

func (o AppProjectMetadataOutput) ToAppProjectMetadataOutputWithContext(ctx context.Context) AppProjectMetadataOutput {
	return o
}

// AppProjectSpec is the specification of an AppProject
type AppProjectSpec struct {
	// ClusterResourceBlacklist contains list of blacklisted cluster level resources
	ClusterResourceBlacklist []AppProjectSpecClusterResourceBlacklist `pulumi:"clusterResourceBlacklist"`
	// ClusterResourceWhitelist contains list of whitelisted cluster level resources
	ClusterResourceWhitelist []AppProjectSpecClusterResourceWhitelist `pulumi:"clusterResourceWhitelist"`
	// Description contains optional project description
	Description *string `pulumi:"description"`
	// Destinations contains list of destinations available for deployment
	Destinations []AppProjectSpecDestinations `pulumi:"destinations"`
	// NamespaceResourceBlacklist contains list of blacklisted namespace level resources
	NamespaceResourceBlacklist []AppProjectSpecNamespaceResourceBlacklist `pulumi:"namespaceResourceBlacklist"`
	// NamespaceResourceWhitelist contains list of whitelisted namespace level resources
	NamespaceResourceWhitelist []AppProjectSpecNamespaceResourceWhitelist `pulumi:"namespaceResourceWhitelist"`
	// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
	OrphanedResources *AppProjectSpecOrphanedResources `pulumi:"orphanedResources"`
	// Roles are user defined RBAC roles associated with this project
	Roles []AppProjectSpecRoles `pulumi:"roles"`
	// SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
	SignatureKeys []AppProjectSpecSignatureKeys `pulumi:"signatureKeys"`
	// SourceRepos contains list of repository URLs which can be used for deployment
	SourceRepos []string `pulumi:"sourceRepos"`
	// SyncWindows controls when syncs can be run for apps in this project
	SyncWindows []AppProjectSpecSyncWindows `pulumi:"syncWindows"`
}

// AppProjectSpecInput is an input type that accepts AppProjectSpecArgs and AppProjectSpecOutput values.
// You can construct a concrete instance of `AppProjectSpecInput` via:
//
//          AppProjectSpecArgs{...}
type AppProjectSpecInput interface {
	pulumi.Input

	ToAppProjectSpecOutput() AppProjectSpecOutput
	ToAppProjectSpecOutputWithContext(context.Context) AppProjectSpecOutput
}

// AppProjectSpec is the specification of an AppProject
type AppProjectSpecArgs struct {
	// ClusterResourceBlacklist contains list of blacklisted cluster level resources
	ClusterResourceBlacklist AppProjectSpecClusterResourceBlacklistArrayInput `pulumi:"clusterResourceBlacklist"`
	// ClusterResourceWhitelist contains list of whitelisted cluster level resources
	ClusterResourceWhitelist AppProjectSpecClusterResourceWhitelistArrayInput `pulumi:"clusterResourceWhitelist"`
	// Description contains optional project description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Destinations contains list of destinations available for deployment
	Destinations AppProjectSpecDestinationsArrayInput `pulumi:"destinations"`
	// NamespaceResourceBlacklist contains list of blacklisted namespace level resources
	NamespaceResourceBlacklist AppProjectSpecNamespaceResourceBlacklistArrayInput `pulumi:"namespaceResourceBlacklist"`
	// NamespaceResourceWhitelist contains list of whitelisted namespace level resources
	NamespaceResourceWhitelist AppProjectSpecNamespaceResourceWhitelistArrayInput `pulumi:"namespaceResourceWhitelist"`
	// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
	OrphanedResources AppProjectSpecOrphanedResourcesPtrInput `pulumi:"orphanedResources"`
	// Roles are user defined RBAC roles associated with this project
	Roles AppProjectSpecRolesArrayInput `pulumi:"roles"`
	// SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
	SignatureKeys AppProjectSpecSignatureKeysArrayInput `pulumi:"signatureKeys"`
	// SourceRepos contains list of repository URLs which can be used for deployment
	SourceRepos pulumi.StringArrayInput `pulumi:"sourceRepos"`
	// SyncWindows controls when syncs can be run for apps in this project
	SyncWindows AppProjectSpecSyncWindowsArrayInput `pulumi:"syncWindows"`
}

func (AppProjectSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpec)(nil)).Elem()
}

func (i AppProjectSpecArgs) ToAppProjectSpecOutput() AppProjectSpecOutput {
	return i.ToAppProjectSpecOutputWithContext(context.Background())
}

func (i AppProjectSpecArgs) ToAppProjectSpecOutputWithContext(ctx context.Context) AppProjectSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOutput)
}

func (i AppProjectSpecArgs) ToAppProjectSpecPtrOutput() AppProjectSpecPtrOutput {
	return i.ToAppProjectSpecPtrOutputWithContext(context.Background())
}

func (i AppProjectSpecArgs) ToAppProjectSpecPtrOutputWithContext(ctx context.Context) AppProjectSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOutput).ToAppProjectSpecPtrOutputWithContext(ctx)
}

// AppProjectSpecPtrInput is an input type that accepts AppProjectSpecArgs, AppProjectSpecPtr and AppProjectSpecPtrOutput values.
// You can construct a concrete instance of `AppProjectSpecPtrInput` via:
//
//          AppProjectSpecArgs{...}
//
//  or:
//
//          nil
type AppProjectSpecPtrInput interface {
	pulumi.Input

	ToAppProjectSpecPtrOutput() AppProjectSpecPtrOutput
	ToAppProjectSpecPtrOutputWithContext(context.Context) AppProjectSpecPtrOutput
}

type appProjectSpecPtrType AppProjectSpecArgs

func AppProjectSpecPtr(v *AppProjectSpecArgs) AppProjectSpecPtrInput {
	return (*appProjectSpecPtrType)(v)
}

func (*appProjectSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProjectSpec)(nil)).Elem()
}

func (i *appProjectSpecPtrType) ToAppProjectSpecPtrOutput() AppProjectSpecPtrOutput {
	return i.ToAppProjectSpecPtrOutputWithContext(context.Background())
}

func (i *appProjectSpecPtrType) ToAppProjectSpecPtrOutputWithContext(ctx context.Context) AppProjectSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecPtrOutput)
}

// AppProjectSpec is the specification of an AppProject
type AppProjectSpecOutput struct{ *pulumi.OutputState }

func (AppProjectSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpec)(nil)).Elem()
}

func (o AppProjectSpecOutput) ToAppProjectSpecOutput() AppProjectSpecOutput {
	return o
}

func (o AppProjectSpecOutput) ToAppProjectSpecOutputWithContext(ctx context.Context) AppProjectSpecOutput {
	return o
}

func (o AppProjectSpecOutput) ToAppProjectSpecPtrOutput() AppProjectSpecPtrOutput {
	return o.ToAppProjectSpecPtrOutputWithContext(context.Background())
}

func (o AppProjectSpecOutput) ToAppProjectSpecPtrOutputWithContext(ctx context.Context) AppProjectSpecPtrOutput {
	return o.ApplyT(func(v AppProjectSpec) *AppProjectSpec {
		return &v
	}).(AppProjectSpecPtrOutput)
}

// ClusterResourceBlacklist contains list of blacklisted cluster level resources
func (o AppProjectSpecOutput) ClusterResourceBlacklist() AppProjectSpecClusterResourceBlacklistArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecClusterResourceBlacklist { return v.ClusterResourceBlacklist }).(AppProjectSpecClusterResourceBlacklistArrayOutput)
}

// ClusterResourceWhitelist contains list of whitelisted cluster level resources
func (o AppProjectSpecOutput) ClusterResourceWhitelist() AppProjectSpecClusterResourceWhitelistArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecClusterResourceWhitelist { return v.ClusterResourceWhitelist }).(AppProjectSpecClusterResourceWhitelistArrayOutput)
}

// Description contains optional project description
func (o AppProjectSpecOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpec) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Destinations contains list of destinations available for deployment
func (o AppProjectSpecOutput) Destinations() AppProjectSpecDestinationsArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecDestinations { return v.Destinations }).(AppProjectSpecDestinationsArrayOutput)
}

// NamespaceResourceBlacklist contains list of blacklisted namespace level resources
func (o AppProjectSpecOutput) NamespaceResourceBlacklist() AppProjectSpecNamespaceResourceBlacklistArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecNamespaceResourceBlacklist { return v.NamespaceResourceBlacklist }).(AppProjectSpecNamespaceResourceBlacklistArrayOutput)
}

// NamespaceResourceWhitelist contains list of whitelisted namespace level resources
func (o AppProjectSpecOutput) NamespaceResourceWhitelist() AppProjectSpecNamespaceResourceWhitelistArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecNamespaceResourceWhitelist { return v.NamespaceResourceWhitelist }).(AppProjectSpecNamespaceResourceWhitelistArrayOutput)
}

// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
func (o AppProjectSpecOutput) OrphanedResources() AppProjectSpecOrphanedResourcesPtrOutput {
	return o.ApplyT(func(v AppProjectSpec) *AppProjectSpecOrphanedResources { return v.OrphanedResources }).(AppProjectSpecOrphanedResourcesPtrOutput)
}

// Roles are user defined RBAC roles associated with this project
func (o AppProjectSpecOutput) Roles() AppProjectSpecRolesArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecRoles { return v.Roles }).(AppProjectSpecRolesArrayOutput)
}

// SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
func (o AppProjectSpecOutput) SignatureKeys() AppProjectSpecSignatureKeysArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecSignatureKeys { return v.SignatureKeys }).(AppProjectSpecSignatureKeysArrayOutput)
}

// SourceRepos contains list of repository URLs which can be used for deployment
func (o AppProjectSpecOutput) SourceRepos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []string { return v.SourceRepos }).(pulumi.StringArrayOutput)
}

// SyncWindows controls when syncs can be run for apps in this project
func (o AppProjectSpecOutput) SyncWindows() AppProjectSpecSyncWindowsArrayOutput {
	return o.ApplyT(func(v AppProjectSpec) []AppProjectSpecSyncWindows { return v.SyncWindows }).(AppProjectSpecSyncWindowsArrayOutput)
}

type AppProjectSpecPtrOutput struct{ *pulumi.OutputState }

func (AppProjectSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProjectSpec)(nil)).Elem()
}

func (o AppProjectSpecPtrOutput) ToAppProjectSpecPtrOutput() AppProjectSpecPtrOutput {
	return o
}

func (o AppProjectSpecPtrOutput) ToAppProjectSpecPtrOutputWithContext(ctx context.Context) AppProjectSpecPtrOutput {
	return o
}

func (o AppProjectSpecPtrOutput) Elem() AppProjectSpecOutput {
	return o.ApplyT(func(v *AppProjectSpec) AppProjectSpec { return *v }).(AppProjectSpecOutput)
}

// ClusterResourceBlacklist contains list of blacklisted cluster level resources
func (o AppProjectSpecPtrOutput) ClusterResourceBlacklist() AppProjectSpecClusterResourceBlacklistArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecClusterResourceBlacklist {
		if v == nil {
			return nil
		}
		return v.ClusterResourceBlacklist
	}).(AppProjectSpecClusterResourceBlacklistArrayOutput)
}

// ClusterResourceWhitelist contains list of whitelisted cluster level resources
func (o AppProjectSpecPtrOutput) ClusterResourceWhitelist() AppProjectSpecClusterResourceWhitelistArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecClusterResourceWhitelist {
		if v == nil {
			return nil
		}
		return v.ClusterResourceWhitelist
	}).(AppProjectSpecClusterResourceWhitelistArrayOutput)
}

// Description contains optional project description
func (o AppProjectSpecPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProjectSpec) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Destinations contains list of destinations available for deployment
func (o AppProjectSpecPtrOutput) Destinations() AppProjectSpecDestinationsArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecDestinations {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(AppProjectSpecDestinationsArrayOutput)
}

// NamespaceResourceBlacklist contains list of blacklisted namespace level resources
func (o AppProjectSpecPtrOutput) NamespaceResourceBlacklist() AppProjectSpecNamespaceResourceBlacklistArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecNamespaceResourceBlacklist {
		if v == nil {
			return nil
		}
		return v.NamespaceResourceBlacklist
	}).(AppProjectSpecNamespaceResourceBlacklistArrayOutput)
}

// NamespaceResourceWhitelist contains list of whitelisted namespace level resources
func (o AppProjectSpecPtrOutput) NamespaceResourceWhitelist() AppProjectSpecNamespaceResourceWhitelistArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecNamespaceResourceWhitelist {
		if v == nil {
			return nil
		}
		return v.NamespaceResourceWhitelist
	}).(AppProjectSpecNamespaceResourceWhitelistArrayOutput)
}

// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
func (o AppProjectSpecPtrOutput) OrphanedResources() AppProjectSpecOrphanedResourcesPtrOutput {
	return o.ApplyT(func(v *AppProjectSpec) *AppProjectSpecOrphanedResources {
		if v == nil {
			return nil
		}
		return v.OrphanedResources
	}).(AppProjectSpecOrphanedResourcesPtrOutput)
}

// Roles are user defined RBAC roles associated with this project
func (o AppProjectSpecPtrOutput) Roles() AppProjectSpecRolesArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecRoles {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(AppProjectSpecRolesArrayOutput)
}

// SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
func (o AppProjectSpecPtrOutput) SignatureKeys() AppProjectSpecSignatureKeysArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecSignatureKeys {
		if v == nil {
			return nil
		}
		return v.SignatureKeys
	}).(AppProjectSpecSignatureKeysArrayOutput)
}

// SourceRepos contains list of repository URLs which can be used for deployment
func (o AppProjectSpecPtrOutput) SourceRepos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []string {
		if v == nil {
			return nil
		}
		return v.SourceRepos
	}).(pulumi.StringArrayOutput)
}

// SyncWindows controls when syncs can be run for apps in this project
func (o AppProjectSpecPtrOutput) SyncWindows() AppProjectSpecSyncWindowsArrayOutput {
	return o.ApplyT(func(v *AppProjectSpec) []AppProjectSpecSyncWindows {
		if v == nil {
			return nil
		}
		return v.SyncWindows
	}).(AppProjectSpecSyncWindowsArrayOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecClusterResourceBlacklist struct {
	Group string `pulumi:"group"`
	Kind  string `pulumi:"kind"`
}

// AppProjectSpecClusterResourceBlacklistInput is an input type that accepts AppProjectSpecClusterResourceBlacklistArgs and AppProjectSpecClusterResourceBlacklistOutput values.
// You can construct a concrete instance of `AppProjectSpecClusterResourceBlacklistInput` via:
//
//          AppProjectSpecClusterResourceBlacklistArgs{...}
type AppProjectSpecClusterResourceBlacklistInput interface {
	pulumi.Input

	ToAppProjectSpecClusterResourceBlacklistOutput() AppProjectSpecClusterResourceBlacklistOutput
	ToAppProjectSpecClusterResourceBlacklistOutputWithContext(context.Context) AppProjectSpecClusterResourceBlacklistOutput
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecClusterResourceBlacklistArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
	Kind  pulumi.StringInput `pulumi:"kind"`
}

func (AppProjectSpecClusterResourceBlacklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecClusterResourceBlacklist)(nil)).Elem()
}

func (i AppProjectSpecClusterResourceBlacklistArgs) ToAppProjectSpecClusterResourceBlacklistOutput() AppProjectSpecClusterResourceBlacklistOutput {
	return i.ToAppProjectSpecClusterResourceBlacklistOutputWithContext(context.Background())
}

func (i AppProjectSpecClusterResourceBlacklistArgs) ToAppProjectSpecClusterResourceBlacklistOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceBlacklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecClusterResourceBlacklistOutput)
}

// AppProjectSpecClusterResourceBlacklistArrayInput is an input type that accepts AppProjectSpecClusterResourceBlacklistArray and AppProjectSpecClusterResourceBlacklistArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecClusterResourceBlacklistArrayInput` via:
//
//          AppProjectSpecClusterResourceBlacklistArray{ AppProjectSpecClusterResourceBlacklistArgs{...} }
type AppProjectSpecClusterResourceBlacklistArrayInput interface {
	pulumi.Input

	ToAppProjectSpecClusterResourceBlacklistArrayOutput() AppProjectSpecClusterResourceBlacklistArrayOutput
	ToAppProjectSpecClusterResourceBlacklistArrayOutputWithContext(context.Context) AppProjectSpecClusterResourceBlacklistArrayOutput
}

type AppProjectSpecClusterResourceBlacklistArray []AppProjectSpecClusterResourceBlacklistInput

func (AppProjectSpecClusterResourceBlacklistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecClusterResourceBlacklist)(nil)).Elem()
}

func (i AppProjectSpecClusterResourceBlacklistArray) ToAppProjectSpecClusterResourceBlacklistArrayOutput() AppProjectSpecClusterResourceBlacklistArrayOutput {
	return i.ToAppProjectSpecClusterResourceBlacklistArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecClusterResourceBlacklistArray) ToAppProjectSpecClusterResourceBlacklistArrayOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceBlacklistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecClusterResourceBlacklistArrayOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecClusterResourceBlacklistOutput struct{ *pulumi.OutputState }

func (AppProjectSpecClusterResourceBlacklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecClusterResourceBlacklist)(nil)).Elem()
}

func (o AppProjectSpecClusterResourceBlacklistOutput) ToAppProjectSpecClusterResourceBlacklistOutput() AppProjectSpecClusterResourceBlacklistOutput {
	return o
}

func (o AppProjectSpecClusterResourceBlacklistOutput) ToAppProjectSpecClusterResourceBlacklistOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceBlacklistOutput {
	return o
}

func (o AppProjectSpecClusterResourceBlacklistOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecClusterResourceBlacklist) string { return v.Group }).(pulumi.StringOutput)
}

func (o AppProjectSpecClusterResourceBlacklistOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecClusterResourceBlacklist) string { return v.Kind }).(pulumi.StringOutput)
}

type AppProjectSpecClusterResourceBlacklistArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecClusterResourceBlacklistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecClusterResourceBlacklist)(nil)).Elem()
}

func (o AppProjectSpecClusterResourceBlacklistArrayOutput) ToAppProjectSpecClusterResourceBlacklistArrayOutput() AppProjectSpecClusterResourceBlacklistArrayOutput {
	return o
}

func (o AppProjectSpecClusterResourceBlacklistArrayOutput) ToAppProjectSpecClusterResourceBlacklistArrayOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceBlacklistArrayOutput {
	return o
}

func (o AppProjectSpecClusterResourceBlacklistArrayOutput) Index(i pulumi.IntInput) AppProjectSpecClusterResourceBlacklistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecClusterResourceBlacklist {
		return vs[0].([]AppProjectSpecClusterResourceBlacklist)[vs[1].(int)]
	}).(AppProjectSpecClusterResourceBlacklistOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecClusterResourceWhitelist struct {
	Group string `pulumi:"group"`
	Kind  string `pulumi:"kind"`
}

// AppProjectSpecClusterResourceWhitelistInput is an input type that accepts AppProjectSpecClusterResourceWhitelistArgs and AppProjectSpecClusterResourceWhitelistOutput values.
// You can construct a concrete instance of `AppProjectSpecClusterResourceWhitelistInput` via:
//
//          AppProjectSpecClusterResourceWhitelistArgs{...}
type AppProjectSpecClusterResourceWhitelistInput interface {
	pulumi.Input

	ToAppProjectSpecClusterResourceWhitelistOutput() AppProjectSpecClusterResourceWhitelistOutput
	ToAppProjectSpecClusterResourceWhitelistOutputWithContext(context.Context) AppProjectSpecClusterResourceWhitelistOutput
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecClusterResourceWhitelistArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
	Kind  pulumi.StringInput `pulumi:"kind"`
}

func (AppProjectSpecClusterResourceWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecClusterResourceWhitelist)(nil)).Elem()
}

func (i AppProjectSpecClusterResourceWhitelistArgs) ToAppProjectSpecClusterResourceWhitelistOutput() AppProjectSpecClusterResourceWhitelistOutput {
	return i.ToAppProjectSpecClusterResourceWhitelistOutputWithContext(context.Background())
}

func (i AppProjectSpecClusterResourceWhitelistArgs) ToAppProjectSpecClusterResourceWhitelistOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecClusterResourceWhitelistOutput)
}

// AppProjectSpecClusterResourceWhitelistArrayInput is an input type that accepts AppProjectSpecClusterResourceWhitelistArray and AppProjectSpecClusterResourceWhitelistArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecClusterResourceWhitelistArrayInput` via:
//
//          AppProjectSpecClusterResourceWhitelistArray{ AppProjectSpecClusterResourceWhitelistArgs{...} }
type AppProjectSpecClusterResourceWhitelistArrayInput interface {
	pulumi.Input

	ToAppProjectSpecClusterResourceWhitelistArrayOutput() AppProjectSpecClusterResourceWhitelistArrayOutput
	ToAppProjectSpecClusterResourceWhitelistArrayOutputWithContext(context.Context) AppProjectSpecClusterResourceWhitelistArrayOutput
}

type AppProjectSpecClusterResourceWhitelistArray []AppProjectSpecClusterResourceWhitelistInput

func (AppProjectSpecClusterResourceWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecClusterResourceWhitelist)(nil)).Elem()
}

func (i AppProjectSpecClusterResourceWhitelistArray) ToAppProjectSpecClusterResourceWhitelistArrayOutput() AppProjectSpecClusterResourceWhitelistArrayOutput {
	return i.ToAppProjectSpecClusterResourceWhitelistArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecClusterResourceWhitelistArray) ToAppProjectSpecClusterResourceWhitelistArrayOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecClusterResourceWhitelistArrayOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecClusterResourceWhitelistOutput struct{ *pulumi.OutputState }

func (AppProjectSpecClusterResourceWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecClusterResourceWhitelist)(nil)).Elem()
}

func (o AppProjectSpecClusterResourceWhitelistOutput) ToAppProjectSpecClusterResourceWhitelistOutput() AppProjectSpecClusterResourceWhitelistOutput {
	return o
}

func (o AppProjectSpecClusterResourceWhitelistOutput) ToAppProjectSpecClusterResourceWhitelistOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceWhitelistOutput {
	return o
}

func (o AppProjectSpecClusterResourceWhitelistOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecClusterResourceWhitelist) string { return v.Group }).(pulumi.StringOutput)
}

func (o AppProjectSpecClusterResourceWhitelistOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecClusterResourceWhitelist) string { return v.Kind }).(pulumi.StringOutput)
}

type AppProjectSpecClusterResourceWhitelistArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecClusterResourceWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecClusterResourceWhitelist)(nil)).Elem()
}

func (o AppProjectSpecClusterResourceWhitelistArrayOutput) ToAppProjectSpecClusterResourceWhitelistArrayOutput() AppProjectSpecClusterResourceWhitelistArrayOutput {
	return o
}

func (o AppProjectSpecClusterResourceWhitelistArrayOutput) ToAppProjectSpecClusterResourceWhitelistArrayOutputWithContext(ctx context.Context) AppProjectSpecClusterResourceWhitelistArrayOutput {
	return o
}

func (o AppProjectSpecClusterResourceWhitelistArrayOutput) Index(i pulumi.IntInput) AppProjectSpecClusterResourceWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecClusterResourceWhitelist {
		return vs[0].([]AppProjectSpecClusterResourceWhitelist)[vs[1].(int)]
	}).(AppProjectSpecClusterResourceWhitelistOutput)
}

// ApplicationDestination holds information about the application's destination
type AppProjectSpecDestinations struct {
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name *string `pulumi:"name"`
	// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace *string `pulumi:"namespace"`
	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server *string `pulumi:"server"`
}

// AppProjectSpecDestinationsInput is an input type that accepts AppProjectSpecDestinationsArgs and AppProjectSpecDestinationsOutput values.
// You can construct a concrete instance of `AppProjectSpecDestinationsInput` via:
//
//          AppProjectSpecDestinationsArgs{...}
type AppProjectSpecDestinationsInput interface {
	pulumi.Input

	ToAppProjectSpecDestinationsOutput() AppProjectSpecDestinationsOutput
	ToAppProjectSpecDestinationsOutputWithContext(context.Context) AppProjectSpecDestinationsOutput
}

// ApplicationDestination holds information about the application's destination
type AppProjectSpecDestinationsArgs struct {
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (AppProjectSpecDestinationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecDestinations)(nil)).Elem()
}

func (i AppProjectSpecDestinationsArgs) ToAppProjectSpecDestinationsOutput() AppProjectSpecDestinationsOutput {
	return i.ToAppProjectSpecDestinationsOutputWithContext(context.Background())
}

func (i AppProjectSpecDestinationsArgs) ToAppProjectSpecDestinationsOutputWithContext(ctx context.Context) AppProjectSpecDestinationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecDestinationsOutput)
}

// AppProjectSpecDestinationsArrayInput is an input type that accepts AppProjectSpecDestinationsArray and AppProjectSpecDestinationsArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecDestinationsArrayInput` via:
//
//          AppProjectSpecDestinationsArray{ AppProjectSpecDestinationsArgs{...} }
type AppProjectSpecDestinationsArrayInput interface {
	pulumi.Input

	ToAppProjectSpecDestinationsArrayOutput() AppProjectSpecDestinationsArrayOutput
	ToAppProjectSpecDestinationsArrayOutputWithContext(context.Context) AppProjectSpecDestinationsArrayOutput
}

type AppProjectSpecDestinationsArray []AppProjectSpecDestinationsInput

func (AppProjectSpecDestinationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecDestinations)(nil)).Elem()
}

func (i AppProjectSpecDestinationsArray) ToAppProjectSpecDestinationsArrayOutput() AppProjectSpecDestinationsArrayOutput {
	return i.ToAppProjectSpecDestinationsArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecDestinationsArray) ToAppProjectSpecDestinationsArrayOutputWithContext(ctx context.Context) AppProjectSpecDestinationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecDestinationsArrayOutput)
}

// ApplicationDestination holds information about the application's destination
type AppProjectSpecDestinationsOutput struct{ *pulumi.OutputState }

func (AppProjectSpecDestinationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecDestinations)(nil)).Elem()
}

func (o AppProjectSpecDestinationsOutput) ToAppProjectSpecDestinationsOutput() AppProjectSpecDestinationsOutput {
	return o
}

func (o AppProjectSpecDestinationsOutput) ToAppProjectSpecDestinationsOutputWithContext(ctx context.Context) AppProjectSpecDestinationsOutput {
	return o
}

// Name is an alternate way of specifying the target cluster by its symbolic name
func (o AppProjectSpecDestinationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecDestinations) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
func (o AppProjectSpecDestinationsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecDestinations) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
func (o AppProjectSpecDestinationsOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecDestinations) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type AppProjectSpecDestinationsArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecDestinationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecDestinations)(nil)).Elem()
}

func (o AppProjectSpecDestinationsArrayOutput) ToAppProjectSpecDestinationsArrayOutput() AppProjectSpecDestinationsArrayOutput {
	return o
}

func (o AppProjectSpecDestinationsArrayOutput) ToAppProjectSpecDestinationsArrayOutputWithContext(ctx context.Context) AppProjectSpecDestinationsArrayOutput {
	return o
}

func (o AppProjectSpecDestinationsArrayOutput) Index(i pulumi.IntInput) AppProjectSpecDestinationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecDestinations {
		return vs[0].([]AppProjectSpecDestinations)[vs[1].(int)]
	}).(AppProjectSpecDestinationsOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecNamespaceResourceBlacklist struct {
	Group string `pulumi:"group"`
	Kind  string `pulumi:"kind"`
}

// AppProjectSpecNamespaceResourceBlacklistInput is an input type that accepts AppProjectSpecNamespaceResourceBlacklistArgs and AppProjectSpecNamespaceResourceBlacklistOutput values.
// You can construct a concrete instance of `AppProjectSpecNamespaceResourceBlacklistInput` via:
//
//          AppProjectSpecNamespaceResourceBlacklistArgs{...}
type AppProjectSpecNamespaceResourceBlacklistInput interface {
	pulumi.Input

	ToAppProjectSpecNamespaceResourceBlacklistOutput() AppProjectSpecNamespaceResourceBlacklistOutput
	ToAppProjectSpecNamespaceResourceBlacklistOutputWithContext(context.Context) AppProjectSpecNamespaceResourceBlacklistOutput
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecNamespaceResourceBlacklistArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
	Kind  pulumi.StringInput `pulumi:"kind"`
}

func (AppProjectSpecNamespaceResourceBlacklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecNamespaceResourceBlacklist)(nil)).Elem()
}

func (i AppProjectSpecNamespaceResourceBlacklistArgs) ToAppProjectSpecNamespaceResourceBlacklistOutput() AppProjectSpecNamespaceResourceBlacklistOutput {
	return i.ToAppProjectSpecNamespaceResourceBlacklistOutputWithContext(context.Background())
}

func (i AppProjectSpecNamespaceResourceBlacklistArgs) ToAppProjectSpecNamespaceResourceBlacklistOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceBlacklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecNamespaceResourceBlacklistOutput)
}

// AppProjectSpecNamespaceResourceBlacklistArrayInput is an input type that accepts AppProjectSpecNamespaceResourceBlacklistArray and AppProjectSpecNamespaceResourceBlacklistArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecNamespaceResourceBlacklistArrayInput` via:
//
//          AppProjectSpecNamespaceResourceBlacklistArray{ AppProjectSpecNamespaceResourceBlacklistArgs{...} }
type AppProjectSpecNamespaceResourceBlacklistArrayInput interface {
	pulumi.Input

	ToAppProjectSpecNamespaceResourceBlacklistArrayOutput() AppProjectSpecNamespaceResourceBlacklistArrayOutput
	ToAppProjectSpecNamespaceResourceBlacklistArrayOutputWithContext(context.Context) AppProjectSpecNamespaceResourceBlacklistArrayOutput
}

type AppProjectSpecNamespaceResourceBlacklistArray []AppProjectSpecNamespaceResourceBlacklistInput

func (AppProjectSpecNamespaceResourceBlacklistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecNamespaceResourceBlacklist)(nil)).Elem()
}

func (i AppProjectSpecNamespaceResourceBlacklistArray) ToAppProjectSpecNamespaceResourceBlacklistArrayOutput() AppProjectSpecNamespaceResourceBlacklistArrayOutput {
	return i.ToAppProjectSpecNamespaceResourceBlacklistArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecNamespaceResourceBlacklistArray) ToAppProjectSpecNamespaceResourceBlacklistArrayOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceBlacklistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecNamespaceResourceBlacklistArrayOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecNamespaceResourceBlacklistOutput struct{ *pulumi.OutputState }

func (AppProjectSpecNamespaceResourceBlacklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecNamespaceResourceBlacklist)(nil)).Elem()
}

func (o AppProjectSpecNamespaceResourceBlacklistOutput) ToAppProjectSpecNamespaceResourceBlacklistOutput() AppProjectSpecNamespaceResourceBlacklistOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceBlacklistOutput) ToAppProjectSpecNamespaceResourceBlacklistOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceBlacklistOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceBlacklistOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecNamespaceResourceBlacklist) string { return v.Group }).(pulumi.StringOutput)
}

func (o AppProjectSpecNamespaceResourceBlacklistOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecNamespaceResourceBlacklist) string { return v.Kind }).(pulumi.StringOutput)
}

type AppProjectSpecNamespaceResourceBlacklistArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecNamespaceResourceBlacklistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecNamespaceResourceBlacklist)(nil)).Elem()
}

func (o AppProjectSpecNamespaceResourceBlacklistArrayOutput) ToAppProjectSpecNamespaceResourceBlacklistArrayOutput() AppProjectSpecNamespaceResourceBlacklistArrayOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceBlacklistArrayOutput) ToAppProjectSpecNamespaceResourceBlacklistArrayOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceBlacklistArrayOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceBlacklistArrayOutput) Index(i pulumi.IntInput) AppProjectSpecNamespaceResourceBlacklistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecNamespaceResourceBlacklist {
		return vs[0].([]AppProjectSpecNamespaceResourceBlacklist)[vs[1].(int)]
	}).(AppProjectSpecNamespaceResourceBlacklistOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecNamespaceResourceWhitelist struct {
	Group string `pulumi:"group"`
	Kind  string `pulumi:"kind"`
}

// AppProjectSpecNamespaceResourceWhitelistInput is an input type that accepts AppProjectSpecNamespaceResourceWhitelistArgs and AppProjectSpecNamespaceResourceWhitelistOutput values.
// You can construct a concrete instance of `AppProjectSpecNamespaceResourceWhitelistInput` via:
//
//          AppProjectSpecNamespaceResourceWhitelistArgs{...}
type AppProjectSpecNamespaceResourceWhitelistInput interface {
	pulumi.Input

	ToAppProjectSpecNamespaceResourceWhitelistOutput() AppProjectSpecNamespaceResourceWhitelistOutput
	ToAppProjectSpecNamespaceResourceWhitelistOutputWithContext(context.Context) AppProjectSpecNamespaceResourceWhitelistOutput
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecNamespaceResourceWhitelistArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
	Kind  pulumi.StringInput `pulumi:"kind"`
}

func (AppProjectSpecNamespaceResourceWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecNamespaceResourceWhitelist)(nil)).Elem()
}

func (i AppProjectSpecNamespaceResourceWhitelistArgs) ToAppProjectSpecNamespaceResourceWhitelistOutput() AppProjectSpecNamespaceResourceWhitelistOutput {
	return i.ToAppProjectSpecNamespaceResourceWhitelistOutputWithContext(context.Background())
}

func (i AppProjectSpecNamespaceResourceWhitelistArgs) ToAppProjectSpecNamespaceResourceWhitelistOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecNamespaceResourceWhitelistOutput)
}

// AppProjectSpecNamespaceResourceWhitelistArrayInput is an input type that accepts AppProjectSpecNamespaceResourceWhitelistArray and AppProjectSpecNamespaceResourceWhitelistArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecNamespaceResourceWhitelistArrayInput` via:
//
//          AppProjectSpecNamespaceResourceWhitelistArray{ AppProjectSpecNamespaceResourceWhitelistArgs{...} }
type AppProjectSpecNamespaceResourceWhitelistArrayInput interface {
	pulumi.Input

	ToAppProjectSpecNamespaceResourceWhitelistArrayOutput() AppProjectSpecNamespaceResourceWhitelistArrayOutput
	ToAppProjectSpecNamespaceResourceWhitelistArrayOutputWithContext(context.Context) AppProjectSpecNamespaceResourceWhitelistArrayOutput
}

type AppProjectSpecNamespaceResourceWhitelistArray []AppProjectSpecNamespaceResourceWhitelistInput

func (AppProjectSpecNamespaceResourceWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecNamespaceResourceWhitelist)(nil)).Elem()
}

func (i AppProjectSpecNamespaceResourceWhitelistArray) ToAppProjectSpecNamespaceResourceWhitelistArrayOutput() AppProjectSpecNamespaceResourceWhitelistArrayOutput {
	return i.ToAppProjectSpecNamespaceResourceWhitelistArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecNamespaceResourceWhitelistArray) ToAppProjectSpecNamespaceResourceWhitelistArrayOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecNamespaceResourceWhitelistArrayOutput)
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
type AppProjectSpecNamespaceResourceWhitelistOutput struct{ *pulumi.OutputState }

func (AppProjectSpecNamespaceResourceWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecNamespaceResourceWhitelist)(nil)).Elem()
}

func (o AppProjectSpecNamespaceResourceWhitelistOutput) ToAppProjectSpecNamespaceResourceWhitelistOutput() AppProjectSpecNamespaceResourceWhitelistOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceWhitelistOutput) ToAppProjectSpecNamespaceResourceWhitelistOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceWhitelistOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceWhitelistOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecNamespaceResourceWhitelist) string { return v.Group }).(pulumi.StringOutput)
}

func (o AppProjectSpecNamespaceResourceWhitelistOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecNamespaceResourceWhitelist) string { return v.Kind }).(pulumi.StringOutput)
}

type AppProjectSpecNamespaceResourceWhitelistArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecNamespaceResourceWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecNamespaceResourceWhitelist)(nil)).Elem()
}

func (o AppProjectSpecNamespaceResourceWhitelistArrayOutput) ToAppProjectSpecNamespaceResourceWhitelistArrayOutput() AppProjectSpecNamespaceResourceWhitelistArrayOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceWhitelistArrayOutput) ToAppProjectSpecNamespaceResourceWhitelistArrayOutputWithContext(ctx context.Context) AppProjectSpecNamespaceResourceWhitelistArrayOutput {
	return o
}

func (o AppProjectSpecNamespaceResourceWhitelistArrayOutput) Index(i pulumi.IntInput) AppProjectSpecNamespaceResourceWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecNamespaceResourceWhitelist {
		return vs[0].([]AppProjectSpecNamespaceResourceWhitelist)[vs[1].(int)]
	}).(AppProjectSpecNamespaceResourceWhitelistOutput)
}

// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
type AppProjectSpecOrphanedResources struct {
	// Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
	Ignore []AppProjectSpecOrphanedResourcesIgnore `pulumi:"ignore"`
	// Warn indicates if warning condition should be created for apps which have orphaned resources
	Warn *bool `pulumi:"warn"`
}

// AppProjectSpecOrphanedResourcesInput is an input type that accepts AppProjectSpecOrphanedResourcesArgs and AppProjectSpecOrphanedResourcesOutput values.
// You can construct a concrete instance of `AppProjectSpecOrphanedResourcesInput` via:
//
//          AppProjectSpecOrphanedResourcesArgs{...}
type AppProjectSpecOrphanedResourcesInput interface {
	pulumi.Input

	ToAppProjectSpecOrphanedResourcesOutput() AppProjectSpecOrphanedResourcesOutput
	ToAppProjectSpecOrphanedResourcesOutputWithContext(context.Context) AppProjectSpecOrphanedResourcesOutput
}

// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
type AppProjectSpecOrphanedResourcesArgs struct {
	// Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
	Ignore AppProjectSpecOrphanedResourcesIgnoreArrayInput `pulumi:"ignore"`
	// Warn indicates if warning condition should be created for apps which have orphaned resources
	Warn pulumi.BoolPtrInput `pulumi:"warn"`
}

func (AppProjectSpecOrphanedResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecOrphanedResources)(nil)).Elem()
}

func (i AppProjectSpecOrphanedResourcesArgs) ToAppProjectSpecOrphanedResourcesOutput() AppProjectSpecOrphanedResourcesOutput {
	return i.ToAppProjectSpecOrphanedResourcesOutputWithContext(context.Background())
}

func (i AppProjectSpecOrphanedResourcesArgs) ToAppProjectSpecOrphanedResourcesOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOrphanedResourcesOutput)
}

func (i AppProjectSpecOrphanedResourcesArgs) ToAppProjectSpecOrphanedResourcesPtrOutput() AppProjectSpecOrphanedResourcesPtrOutput {
	return i.ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(context.Background())
}

func (i AppProjectSpecOrphanedResourcesArgs) ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOrphanedResourcesOutput).ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(ctx)
}

// AppProjectSpecOrphanedResourcesPtrInput is an input type that accepts AppProjectSpecOrphanedResourcesArgs, AppProjectSpecOrphanedResourcesPtr and AppProjectSpecOrphanedResourcesPtrOutput values.
// You can construct a concrete instance of `AppProjectSpecOrphanedResourcesPtrInput` via:
//
//          AppProjectSpecOrphanedResourcesArgs{...}
//
//  or:
//
//          nil
type AppProjectSpecOrphanedResourcesPtrInput interface {
	pulumi.Input

	ToAppProjectSpecOrphanedResourcesPtrOutput() AppProjectSpecOrphanedResourcesPtrOutput
	ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(context.Context) AppProjectSpecOrphanedResourcesPtrOutput
}

type appProjectSpecOrphanedResourcesPtrType AppProjectSpecOrphanedResourcesArgs

func AppProjectSpecOrphanedResourcesPtr(v *AppProjectSpecOrphanedResourcesArgs) AppProjectSpecOrphanedResourcesPtrInput {
	return (*appProjectSpecOrphanedResourcesPtrType)(v)
}

func (*appProjectSpecOrphanedResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProjectSpecOrphanedResources)(nil)).Elem()
}

func (i *appProjectSpecOrphanedResourcesPtrType) ToAppProjectSpecOrphanedResourcesPtrOutput() AppProjectSpecOrphanedResourcesPtrOutput {
	return i.ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(context.Background())
}

func (i *appProjectSpecOrphanedResourcesPtrType) ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOrphanedResourcesPtrOutput)
}

// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
type AppProjectSpecOrphanedResourcesOutput struct{ *pulumi.OutputState }

func (AppProjectSpecOrphanedResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecOrphanedResources)(nil)).Elem()
}

func (o AppProjectSpecOrphanedResourcesOutput) ToAppProjectSpecOrphanedResourcesOutput() AppProjectSpecOrphanedResourcesOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesOutput) ToAppProjectSpecOrphanedResourcesOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesOutput) ToAppProjectSpecOrphanedResourcesPtrOutput() AppProjectSpecOrphanedResourcesPtrOutput {
	return o.ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(context.Background())
}

func (o AppProjectSpecOrphanedResourcesOutput) ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesPtrOutput {
	return o.ApplyT(func(v AppProjectSpecOrphanedResources) *AppProjectSpecOrphanedResources {
		return &v
	}).(AppProjectSpecOrphanedResourcesPtrOutput)
}

// Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
func (o AppProjectSpecOrphanedResourcesOutput) Ignore() AppProjectSpecOrphanedResourcesIgnoreArrayOutput {
	return o.ApplyT(func(v AppProjectSpecOrphanedResources) []AppProjectSpecOrphanedResourcesIgnore { return v.Ignore }).(AppProjectSpecOrphanedResourcesIgnoreArrayOutput)
}

// Warn indicates if warning condition should be created for apps which have orphaned resources
func (o AppProjectSpecOrphanedResourcesOutput) Warn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppProjectSpecOrphanedResources) *bool { return v.Warn }).(pulumi.BoolPtrOutput)
}

type AppProjectSpecOrphanedResourcesPtrOutput struct{ *pulumi.OutputState }

func (AppProjectSpecOrphanedResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProjectSpecOrphanedResources)(nil)).Elem()
}

func (o AppProjectSpecOrphanedResourcesPtrOutput) ToAppProjectSpecOrphanedResourcesPtrOutput() AppProjectSpecOrphanedResourcesPtrOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesPtrOutput) ToAppProjectSpecOrphanedResourcesPtrOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesPtrOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesPtrOutput) Elem() AppProjectSpecOrphanedResourcesOutput {
	return o.ApplyT(func(v *AppProjectSpecOrphanedResources) AppProjectSpecOrphanedResources { return *v }).(AppProjectSpecOrphanedResourcesOutput)
}

// Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
func (o AppProjectSpecOrphanedResourcesPtrOutput) Ignore() AppProjectSpecOrphanedResourcesIgnoreArrayOutput {
	return o.ApplyT(func(v *AppProjectSpecOrphanedResources) []AppProjectSpecOrphanedResourcesIgnore {
		if v == nil {
			return nil
		}
		return v.Ignore
	}).(AppProjectSpecOrphanedResourcesIgnoreArrayOutput)
}

// Warn indicates if warning condition should be created for apps which have orphaned resources
func (o AppProjectSpecOrphanedResourcesPtrOutput) Warn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppProjectSpecOrphanedResources) *bool {
		if v == nil {
			return nil
		}
		return v.Warn
	}).(pulumi.BoolPtrOutput)
}

// OrphanedResourceKey is a reference to a resource to be ignored from
type AppProjectSpecOrphanedResourcesIgnore struct {
	Group *string `pulumi:"group"`
	Kind  *string `pulumi:"kind"`
	Name  *string `pulumi:"name"`
}

// AppProjectSpecOrphanedResourcesIgnoreInput is an input type that accepts AppProjectSpecOrphanedResourcesIgnoreArgs and AppProjectSpecOrphanedResourcesIgnoreOutput values.
// You can construct a concrete instance of `AppProjectSpecOrphanedResourcesIgnoreInput` via:
//
//          AppProjectSpecOrphanedResourcesIgnoreArgs{...}
type AppProjectSpecOrphanedResourcesIgnoreInput interface {
	pulumi.Input

	ToAppProjectSpecOrphanedResourcesIgnoreOutput() AppProjectSpecOrphanedResourcesIgnoreOutput
	ToAppProjectSpecOrphanedResourcesIgnoreOutputWithContext(context.Context) AppProjectSpecOrphanedResourcesIgnoreOutput
}

// OrphanedResourceKey is a reference to a resource to be ignored from
type AppProjectSpecOrphanedResourcesIgnoreArgs struct {
	Group pulumi.StringPtrInput `pulumi:"group"`
	Kind  pulumi.StringPtrInput `pulumi:"kind"`
	Name  pulumi.StringPtrInput `pulumi:"name"`
}

func (AppProjectSpecOrphanedResourcesIgnoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecOrphanedResourcesIgnore)(nil)).Elem()
}

func (i AppProjectSpecOrphanedResourcesIgnoreArgs) ToAppProjectSpecOrphanedResourcesIgnoreOutput() AppProjectSpecOrphanedResourcesIgnoreOutput {
	return i.ToAppProjectSpecOrphanedResourcesIgnoreOutputWithContext(context.Background())
}

func (i AppProjectSpecOrphanedResourcesIgnoreArgs) ToAppProjectSpecOrphanedResourcesIgnoreOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesIgnoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOrphanedResourcesIgnoreOutput)
}

// AppProjectSpecOrphanedResourcesIgnoreArrayInput is an input type that accepts AppProjectSpecOrphanedResourcesIgnoreArray and AppProjectSpecOrphanedResourcesIgnoreArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecOrphanedResourcesIgnoreArrayInput` via:
//
//          AppProjectSpecOrphanedResourcesIgnoreArray{ AppProjectSpecOrphanedResourcesIgnoreArgs{...} }
type AppProjectSpecOrphanedResourcesIgnoreArrayInput interface {
	pulumi.Input

	ToAppProjectSpecOrphanedResourcesIgnoreArrayOutput() AppProjectSpecOrphanedResourcesIgnoreArrayOutput
	ToAppProjectSpecOrphanedResourcesIgnoreArrayOutputWithContext(context.Context) AppProjectSpecOrphanedResourcesIgnoreArrayOutput
}

type AppProjectSpecOrphanedResourcesIgnoreArray []AppProjectSpecOrphanedResourcesIgnoreInput

func (AppProjectSpecOrphanedResourcesIgnoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecOrphanedResourcesIgnore)(nil)).Elem()
}

func (i AppProjectSpecOrphanedResourcesIgnoreArray) ToAppProjectSpecOrphanedResourcesIgnoreArrayOutput() AppProjectSpecOrphanedResourcesIgnoreArrayOutput {
	return i.ToAppProjectSpecOrphanedResourcesIgnoreArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecOrphanedResourcesIgnoreArray) ToAppProjectSpecOrphanedResourcesIgnoreArrayOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesIgnoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecOrphanedResourcesIgnoreArrayOutput)
}

// OrphanedResourceKey is a reference to a resource to be ignored from
type AppProjectSpecOrphanedResourcesIgnoreOutput struct{ *pulumi.OutputState }

func (AppProjectSpecOrphanedResourcesIgnoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecOrphanedResourcesIgnore)(nil)).Elem()
}

func (o AppProjectSpecOrphanedResourcesIgnoreOutput) ToAppProjectSpecOrphanedResourcesIgnoreOutput() AppProjectSpecOrphanedResourcesIgnoreOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesIgnoreOutput) ToAppProjectSpecOrphanedResourcesIgnoreOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesIgnoreOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesIgnoreOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecOrphanedResourcesIgnore) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o AppProjectSpecOrphanedResourcesIgnoreOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecOrphanedResourcesIgnore) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AppProjectSpecOrphanedResourcesIgnoreOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecOrphanedResourcesIgnore) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AppProjectSpecOrphanedResourcesIgnoreArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecOrphanedResourcesIgnoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecOrphanedResourcesIgnore)(nil)).Elem()
}

func (o AppProjectSpecOrphanedResourcesIgnoreArrayOutput) ToAppProjectSpecOrphanedResourcesIgnoreArrayOutput() AppProjectSpecOrphanedResourcesIgnoreArrayOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesIgnoreArrayOutput) ToAppProjectSpecOrphanedResourcesIgnoreArrayOutputWithContext(ctx context.Context) AppProjectSpecOrphanedResourcesIgnoreArrayOutput {
	return o
}

func (o AppProjectSpecOrphanedResourcesIgnoreArrayOutput) Index(i pulumi.IntInput) AppProjectSpecOrphanedResourcesIgnoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecOrphanedResourcesIgnore {
		return vs[0].([]AppProjectSpecOrphanedResourcesIgnore)[vs[1].(int)]
	}).(AppProjectSpecOrphanedResourcesIgnoreOutput)
}

// ProjectRole represents a role that has access to a project
type AppProjectSpecRoles struct {
	// Description is a description of the role
	Description *string `pulumi:"description"`
	// Groups are a list of OIDC group claims bound to this role
	Groups []string `pulumi:"groups"`
	// JWTTokens are a list of generated JWT tokens bound to this role
	JwtTokens []AppProjectSpecRolesJwtTokens `pulumi:"jwtTokens"`
	// Name is a name for this role
	Name string `pulumi:"name"`
	// Policies Stores a list of casbin formated strings that define access policies for the role in the project
	Policies []string `pulumi:"policies"`
}

// AppProjectSpecRolesInput is an input type that accepts AppProjectSpecRolesArgs and AppProjectSpecRolesOutput values.
// You can construct a concrete instance of `AppProjectSpecRolesInput` via:
//
//          AppProjectSpecRolesArgs{...}
type AppProjectSpecRolesInput interface {
	pulumi.Input

	ToAppProjectSpecRolesOutput() AppProjectSpecRolesOutput
	ToAppProjectSpecRolesOutputWithContext(context.Context) AppProjectSpecRolesOutput
}

// ProjectRole represents a role that has access to a project
type AppProjectSpecRolesArgs struct {
	// Description is a description of the role
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Groups are a list of OIDC group claims bound to this role
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// JWTTokens are a list of generated JWT tokens bound to this role
	JwtTokens AppProjectSpecRolesJwtTokensArrayInput `pulumi:"jwtTokens"`
	// Name is a name for this role
	Name pulumi.StringInput `pulumi:"name"`
	// Policies Stores a list of casbin formated strings that define access policies for the role in the project
	Policies pulumi.StringArrayInput `pulumi:"policies"`
}

func (AppProjectSpecRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecRoles)(nil)).Elem()
}

func (i AppProjectSpecRolesArgs) ToAppProjectSpecRolesOutput() AppProjectSpecRolesOutput {
	return i.ToAppProjectSpecRolesOutputWithContext(context.Background())
}

func (i AppProjectSpecRolesArgs) ToAppProjectSpecRolesOutputWithContext(ctx context.Context) AppProjectSpecRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecRolesOutput)
}

// AppProjectSpecRolesArrayInput is an input type that accepts AppProjectSpecRolesArray and AppProjectSpecRolesArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecRolesArrayInput` via:
//
//          AppProjectSpecRolesArray{ AppProjectSpecRolesArgs{...} }
type AppProjectSpecRolesArrayInput interface {
	pulumi.Input

	ToAppProjectSpecRolesArrayOutput() AppProjectSpecRolesArrayOutput
	ToAppProjectSpecRolesArrayOutputWithContext(context.Context) AppProjectSpecRolesArrayOutput
}

type AppProjectSpecRolesArray []AppProjectSpecRolesInput

func (AppProjectSpecRolesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecRoles)(nil)).Elem()
}

func (i AppProjectSpecRolesArray) ToAppProjectSpecRolesArrayOutput() AppProjectSpecRolesArrayOutput {
	return i.ToAppProjectSpecRolesArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecRolesArray) ToAppProjectSpecRolesArrayOutputWithContext(ctx context.Context) AppProjectSpecRolesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecRolesArrayOutput)
}

// ProjectRole represents a role that has access to a project
type AppProjectSpecRolesOutput struct{ *pulumi.OutputState }

func (AppProjectSpecRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecRoles)(nil)).Elem()
}

func (o AppProjectSpecRolesOutput) ToAppProjectSpecRolesOutput() AppProjectSpecRolesOutput {
	return o
}

func (o AppProjectSpecRolesOutput) ToAppProjectSpecRolesOutputWithContext(ctx context.Context) AppProjectSpecRolesOutput {
	return o
}

// Description is a description of the role
func (o AppProjectSpecRolesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecRoles) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Groups are a list of OIDC group claims bound to this role
func (o AppProjectSpecRolesOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppProjectSpecRoles) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// JWTTokens are a list of generated JWT tokens bound to this role
func (o AppProjectSpecRolesOutput) JwtTokens() AppProjectSpecRolesJwtTokensArrayOutput {
	return o.ApplyT(func(v AppProjectSpecRoles) []AppProjectSpecRolesJwtTokens { return v.JwtTokens }).(AppProjectSpecRolesJwtTokensArrayOutput)
}

// Name is a name for this role
func (o AppProjectSpecRolesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecRoles) string { return v.Name }).(pulumi.StringOutput)
}

// Policies Stores a list of casbin formated strings that define access policies for the role in the project
func (o AppProjectSpecRolesOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppProjectSpecRoles) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type AppProjectSpecRolesArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecRolesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecRoles)(nil)).Elem()
}

func (o AppProjectSpecRolesArrayOutput) ToAppProjectSpecRolesArrayOutput() AppProjectSpecRolesArrayOutput {
	return o
}

func (o AppProjectSpecRolesArrayOutput) ToAppProjectSpecRolesArrayOutputWithContext(ctx context.Context) AppProjectSpecRolesArrayOutput {
	return o
}

func (o AppProjectSpecRolesArrayOutput) Index(i pulumi.IntInput) AppProjectSpecRolesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecRoles {
		return vs[0].([]AppProjectSpecRoles)[vs[1].(int)]
	}).(AppProjectSpecRolesOutput)
}

// JWTToken holds the issuedAt and expiresAt values of a token
type AppProjectSpecRolesJwtTokens struct {
	Exp *int    `pulumi:"exp"`
	Iat int     `pulumi:"iat"`
	Id  *string `pulumi:"id"`
}

// AppProjectSpecRolesJwtTokensInput is an input type that accepts AppProjectSpecRolesJwtTokensArgs and AppProjectSpecRolesJwtTokensOutput values.
// You can construct a concrete instance of `AppProjectSpecRolesJwtTokensInput` via:
//
//          AppProjectSpecRolesJwtTokensArgs{...}
type AppProjectSpecRolesJwtTokensInput interface {
	pulumi.Input

	ToAppProjectSpecRolesJwtTokensOutput() AppProjectSpecRolesJwtTokensOutput
	ToAppProjectSpecRolesJwtTokensOutputWithContext(context.Context) AppProjectSpecRolesJwtTokensOutput
}

// JWTToken holds the issuedAt and expiresAt values of a token
type AppProjectSpecRolesJwtTokensArgs struct {
	Exp pulumi.IntPtrInput    `pulumi:"exp"`
	Iat pulumi.IntInput       `pulumi:"iat"`
	Id  pulumi.StringPtrInput `pulumi:"id"`
}

func (AppProjectSpecRolesJwtTokensArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecRolesJwtTokens)(nil)).Elem()
}

func (i AppProjectSpecRolesJwtTokensArgs) ToAppProjectSpecRolesJwtTokensOutput() AppProjectSpecRolesJwtTokensOutput {
	return i.ToAppProjectSpecRolesJwtTokensOutputWithContext(context.Background())
}

func (i AppProjectSpecRolesJwtTokensArgs) ToAppProjectSpecRolesJwtTokensOutputWithContext(ctx context.Context) AppProjectSpecRolesJwtTokensOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecRolesJwtTokensOutput)
}

// AppProjectSpecRolesJwtTokensArrayInput is an input type that accepts AppProjectSpecRolesJwtTokensArray and AppProjectSpecRolesJwtTokensArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecRolesJwtTokensArrayInput` via:
//
//          AppProjectSpecRolesJwtTokensArray{ AppProjectSpecRolesJwtTokensArgs{...} }
type AppProjectSpecRolesJwtTokensArrayInput interface {
	pulumi.Input

	ToAppProjectSpecRolesJwtTokensArrayOutput() AppProjectSpecRolesJwtTokensArrayOutput
	ToAppProjectSpecRolesJwtTokensArrayOutputWithContext(context.Context) AppProjectSpecRolesJwtTokensArrayOutput
}

type AppProjectSpecRolesJwtTokensArray []AppProjectSpecRolesJwtTokensInput

func (AppProjectSpecRolesJwtTokensArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecRolesJwtTokens)(nil)).Elem()
}

func (i AppProjectSpecRolesJwtTokensArray) ToAppProjectSpecRolesJwtTokensArrayOutput() AppProjectSpecRolesJwtTokensArrayOutput {
	return i.ToAppProjectSpecRolesJwtTokensArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecRolesJwtTokensArray) ToAppProjectSpecRolesJwtTokensArrayOutputWithContext(ctx context.Context) AppProjectSpecRolesJwtTokensArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecRolesJwtTokensArrayOutput)
}

// JWTToken holds the issuedAt and expiresAt values of a token
type AppProjectSpecRolesJwtTokensOutput struct{ *pulumi.OutputState }

func (AppProjectSpecRolesJwtTokensOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecRolesJwtTokens)(nil)).Elem()
}

func (o AppProjectSpecRolesJwtTokensOutput) ToAppProjectSpecRolesJwtTokensOutput() AppProjectSpecRolesJwtTokensOutput {
	return o
}

func (o AppProjectSpecRolesJwtTokensOutput) ToAppProjectSpecRolesJwtTokensOutputWithContext(ctx context.Context) AppProjectSpecRolesJwtTokensOutput {
	return o
}

func (o AppProjectSpecRolesJwtTokensOutput) Exp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppProjectSpecRolesJwtTokens) *int { return v.Exp }).(pulumi.IntPtrOutput)
}

func (o AppProjectSpecRolesJwtTokensOutput) Iat() pulumi.IntOutput {
	return o.ApplyT(func(v AppProjectSpecRolesJwtTokens) int { return v.Iat }).(pulumi.IntOutput)
}

func (o AppProjectSpecRolesJwtTokensOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecRolesJwtTokens) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type AppProjectSpecRolesJwtTokensArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecRolesJwtTokensArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecRolesJwtTokens)(nil)).Elem()
}

func (o AppProjectSpecRolesJwtTokensArrayOutput) ToAppProjectSpecRolesJwtTokensArrayOutput() AppProjectSpecRolesJwtTokensArrayOutput {
	return o
}

func (o AppProjectSpecRolesJwtTokensArrayOutput) ToAppProjectSpecRolesJwtTokensArrayOutputWithContext(ctx context.Context) AppProjectSpecRolesJwtTokensArrayOutput {
	return o
}

func (o AppProjectSpecRolesJwtTokensArrayOutput) Index(i pulumi.IntInput) AppProjectSpecRolesJwtTokensOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecRolesJwtTokens {
		return vs[0].([]AppProjectSpecRolesJwtTokens)[vs[1].(int)]
	}).(AppProjectSpecRolesJwtTokensOutput)
}

// SignatureKey is the specification of a key required to verify commit signatures with
type AppProjectSpecSignatureKeys struct {
	// The ID of the key in hexadecimal notation
	KeyID string `pulumi:"keyID"`
}

// AppProjectSpecSignatureKeysInput is an input type that accepts AppProjectSpecSignatureKeysArgs and AppProjectSpecSignatureKeysOutput values.
// You can construct a concrete instance of `AppProjectSpecSignatureKeysInput` via:
//
//          AppProjectSpecSignatureKeysArgs{...}
type AppProjectSpecSignatureKeysInput interface {
	pulumi.Input

	ToAppProjectSpecSignatureKeysOutput() AppProjectSpecSignatureKeysOutput
	ToAppProjectSpecSignatureKeysOutputWithContext(context.Context) AppProjectSpecSignatureKeysOutput
}

// SignatureKey is the specification of a key required to verify commit signatures with
type AppProjectSpecSignatureKeysArgs struct {
	// The ID of the key in hexadecimal notation
	KeyID pulumi.StringInput `pulumi:"keyID"`
}

func (AppProjectSpecSignatureKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecSignatureKeys)(nil)).Elem()
}

func (i AppProjectSpecSignatureKeysArgs) ToAppProjectSpecSignatureKeysOutput() AppProjectSpecSignatureKeysOutput {
	return i.ToAppProjectSpecSignatureKeysOutputWithContext(context.Background())
}

func (i AppProjectSpecSignatureKeysArgs) ToAppProjectSpecSignatureKeysOutputWithContext(ctx context.Context) AppProjectSpecSignatureKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecSignatureKeysOutput)
}

// AppProjectSpecSignatureKeysArrayInput is an input type that accepts AppProjectSpecSignatureKeysArray and AppProjectSpecSignatureKeysArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecSignatureKeysArrayInput` via:
//
//          AppProjectSpecSignatureKeysArray{ AppProjectSpecSignatureKeysArgs{...} }
type AppProjectSpecSignatureKeysArrayInput interface {
	pulumi.Input

	ToAppProjectSpecSignatureKeysArrayOutput() AppProjectSpecSignatureKeysArrayOutput
	ToAppProjectSpecSignatureKeysArrayOutputWithContext(context.Context) AppProjectSpecSignatureKeysArrayOutput
}

type AppProjectSpecSignatureKeysArray []AppProjectSpecSignatureKeysInput

func (AppProjectSpecSignatureKeysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecSignatureKeys)(nil)).Elem()
}

func (i AppProjectSpecSignatureKeysArray) ToAppProjectSpecSignatureKeysArrayOutput() AppProjectSpecSignatureKeysArrayOutput {
	return i.ToAppProjectSpecSignatureKeysArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecSignatureKeysArray) ToAppProjectSpecSignatureKeysArrayOutputWithContext(ctx context.Context) AppProjectSpecSignatureKeysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecSignatureKeysArrayOutput)
}

// SignatureKey is the specification of a key required to verify commit signatures with
type AppProjectSpecSignatureKeysOutput struct{ *pulumi.OutputState }

func (AppProjectSpecSignatureKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecSignatureKeys)(nil)).Elem()
}

func (o AppProjectSpecSignatureKeysOutput) ToAppProjectSpecSignatureKeysOutput() AppProjectSpecSignatureKeysOutput {
	return o
}

func (o AppProjectSpecSignatureKeysOutput) ToAppProjectSpecSignatureKeysOutputWithContext(ctx context.Context) AppProjectSpecSignatureKeysOutput {
	return o
}

// The ID of the key in hexadecimal notation
func (o AppProjectSpecSignatureKeysOutput) KeyID() pulumi.StringOutput {
	return o.ApplyT(func(v AppProjectSpecSignatureKeys) string { return v.KeyID }).(pulumi.StringOutput)
}

type AppProjectSpecSignatureKeysArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecSignatureKeysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecSignatureKeys)(nil)).Elem()
}

func (o AppProjectSpecSignatureKeysArrayOutput) ToAppProjectSpecSignatureKeysArrayOutput() AppProjectSpecSignatureKeysArrayOutput {
	return o
}

func (o AppProjectSpecSignatureKeysArrayOutput) ToAppProjectSpecSignatureKeysArrayOutputWithContext(ctx context.Context) AppProjectSpecSignatureKeysArrayOutput {
	return o
}

func (o AppProjectSpecSignatureKeysArrayOutput) Index(i pulumi.IntInput) AppProjectSpecSignatureKeysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecSignatureKeys {
		return vs[0].([]AppProjectSpecSignatureKeys)[vs[1].(int)]
	}).(AppProjectSpecSignatureKeysOutput)
}

// SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
type AppProjectSpecSyncWindows struct {
	// Applications contains a list of applications that the window will apply to
	Applications []string `pulumi:"applications"`
	// Clusters contains a list of clusters that the window will apply to
	Clusters []string `pulumi:"clusters"`
	// Duration is the amount of time the sync window will be open
	Duration *string `pulumi:"duration"`
	// Kind defines if the window allows or blocks syncs
	Kind *string `pulumi:"kind"`
	// ManualSync enables manual syncs when they would otherwise be blocked
	ManualSync *bool `pulumi:"manualSync"`
	// Namespaces contains a list of namespaces that the window will apply to
	Namespaces []string `pulumi:"namespaces"`
	// Schedule is the time the window will begin, specified in cron format
	Schedule *string `pulumi:"schedule"`
}

// AppProjectSpecSyncWindowsInput is an input type that accepts AppProjectSpecSyncWindowsArgs and AppProjectSpecSyncWindowsOutput values.
// You can construct a concrete instance of `AppProjectSpecSyncWindowsInput` via:
//
//          AppProjectSpecSyncWindowsArgs{...}
type AppProjectSpecSyncWindowsInput interface {
	pulumi.Input

	ToAppProjectSpecSyncWindowsOutput() AppProjectSpecSyncWindowsOutput
	ToAppProjectSpecSyncWindowsOutputWithContext(context.Context) AppProjectSpecSyncWindowsOutput
}

// SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
type AppProjectSpecSyncWindowsArgs struct {
	// Applications contains a list of applications that the window will apply to
	Applications pulumi.StringArrayInput `pulumi:"applications"`
	// Clusters contains a list of clusters that the window will apply to
	Clusters pulumi.StringArrayInput `pulumi:"clusters"`
	// Duration is the amount of time the sync window will be open
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Kind defines if the window allows or blocks syncs
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// ManualSync enables manual syncs when they would otherwise be blocked
	ManualSync pulumi.BoolPtrInput `pulumi:"manualSync"`
	// Namespaces contains a list of namespaces that the window will apply to
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// Schedule is the time the window will begin, specified in cron format
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
}

func (AppProjectSpecSyncWindowsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecSyncWindows)(nil)).Elem()
}

func (i AppProjectSpecSyncWindowsArgs) ToAppProjectSpecSyncWindowsOutput() AppProjectSpecSyncWindowsOutput {
	return i.ToAppProjectSpecSyncWindowsOutputWithContext(context.Background())
}

func (i AppProjectSpecSyncWindowsArgs) ToAppProjectSpecSyncWindowsOutputWithContext(ctx context.Context) AppProjectSpecSyncWindowsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecSyncWindowsOutput)
}

// AppProjectSpecSyncWindowsArrayInput is an input type that accepts AppProjectSpecSyncWindowsArray and AppProjectSpecSyncWindowsArrayOutput values.
// You can construct a concrete instance of `AppProjectSpecSyncWindowsArrayInput` via:
//
//          AppProjectSpecSyncWindowsArray{ AppProjectSpecSyncWindowsArgs{...} }
type AppProjectSpecSyncWindowsArrayInput interface {
	pulumi.Input

	ToAppProjectSpecSyncWindowsArrayOutput() AppProjectSpecSyncWindowsArrayOutput
	ToAppProjectSpecSyncWindowsArrayOutputWithContext(context.Context) AppProjectSpecSyncWindowsArrayOutput
}

type AppProjectSpecSyncWindowsArray []AppProjectSpecSyncWindowsInput

func (AppProjectSpecSyncWindowsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecSyncWindows)(nil)).Elem()
}

func (i AppProjectSpecSyncWindowsArray) ToAppProjectSpecSyncWindowsArrayOutput() AppProjectSpecSyncWindowsArrayOutput {
	return i.ToAppProjectSpecSyncWindowsArrayOutputWithContext(context.Background())
}

func (i AppProjectSpecSyncWindowsArray) ToAppProjectSpecSyncWindowsArrayOutputWithContext(ctx context.Context) AppProjectSpecSyncWindowsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectSpecSyncWindowsArrayOutput)
}

// SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
type AppProjectSpecSyncWindowsOutput struct{ *pulumi.OutputState }

func (AppProjectSpecSyncWindowsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectSpecSyncWindows)(nil)).Elem()
}

func (o AppProjectSpecSyncWindowsOutput) ToAppProjectSpecSyncWindowsOutput() AppProjectSpecSyncWindowsOutput {
	return o
}

func (o AppProjectSpecSyncWindowsOutput) ToAppProjectSpecSyncWindowsOutputWithContext(ctx context.Context) AppProjectSpecSyncWindowsOutput {
	return o
}

// Applications contains a list of applications that the window will apply to
func (o AppProjectSpecSyncWindowsOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) []string { return v.Applications }).(pulumi.StringArrayOutput)
}

// Clusters contains a list of clusters that the window will apply to
func (o AppProjectSpecSyncWindowsOutput) Clusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) []string { return v.Clusters }).(pulumi.StringArrayOutput)
}

// Duration is the amount of time the sync window will be open
func (o AppProjectSpecSyncWindowsOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Kind defines if the window allows or blocks syncs
func (o AppProjectSpecSyncWindowsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// ManualSync enables manual syncs when they would otherwise be blocked
func (o AppProjectSpecSyncWindowsOutput) ManualSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) *bool { return v.ManualSync }).(pulumi.BoolPtrOutput)
}

// Namespaces contains a list of namespaces that the window will apply to
func (o AppProjectSpecSyncWindowsOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// Schedule is the time the window will begin, specified in cron format
func (o AppProjectSpecSyncWindowsOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectSpecSyncWindows) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type AppProjectSpecSyncWindowsArrayOutput struct{ *pulumi.OutputState }

func (AppProjectSpecSyncWindowsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectSpecSyncWindows)(nil)).Elem()
}

func (o AppProjectSpecSyncWindowsArrayOutput) ToAppProjectSpecSyncWindowsArrayOutput() AppProjectSpecSyncWindowsArrayOutput {
	return o
}

func (o AppProjectSpecSyncWindowsArrayOutput) ToAppProjectSpecSyncWindowsArrayOutputWithContext(ctx context.Context) AppProjectSpecSyncWindowsArrayOutput {
	return o
}

func (o AppProjectSpecSyncWindowsArrayOutput) Index(i pulumi.IntInput) AppProjectSpecSyncWindowsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectSpecSyncWindows {
		return vs[0].([]AppProjectSpecSyncWindows)[vs[1].(int)]
	}).(AppProjectSpecSyncWindowsOutput)
}

// AppProjectStatus contains status information for AppProject CRs
type AppProjectStatus struct {
	// JWTTokensByRole contains a list of JWT tokens issued for a given role
	JwtTokensByRole map[string]AppProjectStatusJwtTokensByRole `pulumi:"jwtTokensByRole"`
}

// AppProjectStatusInput is an input type that accepts AppProjectStatusArgs and AppProjectStatusOutput values.
// You can construct a concrete instance of `AppProjectStatusInput` via:
//
//          AppProjectStatusArgs{...}
type AppProjectStatusInput interface {
	pulumi.Input

	ToAppProjectStatusOutput() AppProjectStatusOutput
	ToAppProjectStatusOutputWithContext(context.Context) AppProjectStatusOutput
}

// AppProjectStatus contains status information for AppProject CRs
type AppProjectStatusArgs struct {
	// JWTTokensByRole contains a list of JWT tokens issued for a given role
	JwtTokensByRole AppProjectStatusJwtTokensByRoleMapInput `pulumi:"jwtTokensByRole"`
}

func (AppProjectStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectStatus)(nil)).Elem()
}

func (i AppProjectStatusArgs) ToAppProjectStatusOutput() AppProjectStatusOutput {
	return i.ToAppProjectStatusOutputWithContext(context.Background())
}

func (i AppProjectStatusArgs) ToAppProjectStatusOutputWithContext(ctx context.Context) AppProjectStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusOutput)
}

func (i AppProjectStatusArgs) ToAppProjectStatusPtrOutput() AppProjectStatusPtrOutput {
	return i.ToAppProjectStatusPtrOutputWithContext(context.Background())
}

func (i AppProjectStatusArgs) ToAppProjectStatusPtrOutputWithContext(ctx context.Context) AppProjectStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusOutput).ToAppProjectStatusPtrOutputWithContext(ctx)
}

// AppProjectStatusPtrInput is an input type that accepts AppProjectStatusArgs, AppProjectStatusPtr and AppProjectStatusPtrOutput values.
// You can construct a concrete instance of `AppProjectStatusPtrInput` via:
//
//          AppProjectStatusArgs{...}
//
//  or:
//
//          nil
type AppProjectStatusPtrInput interface {
	pulumi.Input

	ToAppProjectStatusPtrOutput() AppProjectStatusPtrOutput
	ToAppProjectStatusPtrOutputWithContext(context.Context) AppProjectStatusPtrOutput
}

type appProjectStatusPtrType AppProjectStatusArgs

func AppProjectStatusPtr(v *AppProjectStatusArgs) AppProjectStatusPtrInput {
	return (*appProjectStatusPtrType)(v)
}

func (*appProjectStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProjectStatus)(nil)).Elem()
}

func (i *appProjectStatusPtrType) ToAppProjectStatusPtrOutput() AppProjectStatusPtrOutput {
	return i.ToAppProjectStatusPtrOutputWithContext(context.Background())
}

func (i *appProjectStatusPtrType) ToAppProjectStatusPtrOutputWithContext(ctx context.Context) AppProjectStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusPtrOutput)
}

// AppProjectStatus contains status information for AppProject CRs
type AppProjectStatusOutput struct{ *pulumi.OutputState }

func (AppProjectStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectStatus)(nil)).Elem()
}

func (o AppProjectStatusOutput) ToAppProjectStatusOutput() AppProjectStatusOutput {
	return o
}

func (o AppProjectStatusOutput) ToAppProjectStatusOutputWithContext(ctx context.Context) AppProjectStatusOutput {
	return o
}

func (o AppProjectStatusOutput) ToAppProjectStatusPtrOutput() AppProjectStatusPtrOutput {
	return o.ToAppProjectStatusPtrOutputWithContext(context.Background())
}

func (o AppProjectStatusOutput) ToAppProjectStatusPtrOutputWithContext(ctx context.Context) AppProjectStatusPtrOutput {
	return o.ApplyT(func(v AppProjectStatus) *AppProjectStatus {
		return &v
	}).(AppProjectStatusPtrOutput)
}

// JWTTokensByRole contains a list of JWT tokens issued for a given role
func (o AppProjectStatusOutput) JwtTokensByRole() AppProjectStatusJwtTokensByRoleMapOutput {
	return o.ApplyT(func(v AppProjectStatus) map[string]AppProjectStatusJwtTokensByRole { return v.JwtTokensByRole }).(AppProjectStatusJwtTokensByRoleMapOutput)
}

type AppProjectStatusPtrOutput struct{ *pulumi.OutputState }

func (AppProjectStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProjectStatus)(nil)).Elem()
}

func (o AppProjectStatusPtrOutput) ToAppProjectStatusPtrOutput() AppProjectStatusPtrOutput {
	return o
}

func (o AppProjectStatusPtrOutput) ToAppProjectStatusPtrOutputWithContext(ctx context.Context) AppProjectStatusPtrOutput {
	return o
}

func (o AppProjectStatusPtrOutput) Elem() AppProjectStatusOutput {
	return o.ApplyT(func(v *AppProjectStatus) AppProjectStatus { return *v }).(AppProjectStatusOutput)
}

// JWTTokensByRole contains a list of JWT tokens issued for a given role
func (o AppProjectStatusPtrOutput) JwtTokensByRole() AppProjectStatusJwtTokensByRoleMapOutput {
	return o.ApplyT(func(v *AppProjectStatus) map[string]AppProjectStatusJwtTokensByRole {
		if v == nil {
			return nil
		}
		return v.JwtTokensByRole
	}).(AppProjectStatusJwtTokensByRoleMapOutput)
}

// JWTTokens represents a list of JWT tokens
type AppProjectStatusJwtTokensByRole struct {
	Items []AppProjectStatusJwtTokensByRoleItems `pulumi:"items"`
}

// AppProjectStatusJwtTokensByRoleInput is an input type that accepts AppProjectStatusJwtTokensByRoleArgs and AppProjectStatusJwtTokensByRoleOutput values.
// You can construct a concrete instance of `AppProjectStatusJwtTokensByRoleInput` via:
//
//          AppProjectStatusJwtTokensByRoleArgs{...}
type AppProjectStatusJwtTokensByRoleInput interface {
	pulumi.Input

	ToAppProjectStatusJwtTokensByRoleOutput() AppProjectStatusJwtTokensByRoleOutput
	ToAppProjectStatusJwtTokensByRoleOutputWithContext(context.Context) AppProjectStatusJwtTokensByRoleOutput
}

// JWTTokens represents a list of JWT tokens
type AppProjectStatusJwtTokensByRoleArgs struct {
	Items AppProjectStatusJwtTokensByRoleItemsArrayInput `pulumi:"items"`
}

func (AppProjectStatusJwtTokensByRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectStatusJwtTokensByRole)(nil)).Elem()
}

func (i AppProjectStatusJwtTokensByRoleArgs) ToAppProjectStatusJwtTokensByRoleOutput() AppProjectStatusJwtTokensByRoleOutput {
	return i.ToAppProjectStatusJwtTokensByRoleOutputWithContext(context.Background())
}

func (i AppProjectStatusJwtTokensByRoleArgs) ToAppProjectStatusJwtTokensByRoleOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusJwtTokensByRoleOutput)
}

// AppProjectStatusJwtTokensByRoleMapInput is an input type that accepts AppProjectStatusJwtTokensByRoleMap and AppProjectStatusJwtTokensByRoleMapOutput values.
// You can construct a concrete instance of `AppProjectStatusJwtTokensByRoleMapInput` via:
//
//          AppProjectStatusJwtTokensByRoleMap{ "key": AppProjectStatusJwtTokensByRoleArgs{...} }
type AppProjectStatusJwtTokensByRoleMapInput interface {
	pulumi.Input

	ToAppProjectStatusJwtTokensByRoleMapOutput() AppProjectStatusJwtTokensByRoleMapOutput
	ToAppProjectStatusJwtTokensByRoleMapOutputWithContext(context.Context) AppProjectStatusJwtTokensByRoleMapOutput
}

type AppProjectStatusJwtTokensByRoleMap map[string]AppProjectStatusJwtTokensByRoleInput

func (AppProjectStatusJwtTokensByRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppProjectStatusJwtTokensByRole)(nil)).Elem()
}

func (i AppProjectStatusJwtTokensByRoleMap) ToAppProjectStatusJwtTokensByRoleMapOutput() AppProjectStatusJwtTokensByRoleMapOutput {
	return i.ToAppProjectStatusJwtTokensByRoleMapOutputWithContext(context.Background())
}

func (i AppProjectStatusJwtTokensByRoleMap) ToAppProjectStatusJwtTokensByRoleMapOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusJwtTokensByRoleMapOutput)
}

// JWTTokens represents a list of JWT tokens
type AppProjectStatusJwtTokensByRoleOutput struct{ *pulumi.OutputState }

func (AppProjectStatusJwtTokensByRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectStatusJwtTokensByRole)(nil)).Elem()
}

func (o AppProjectStatusJwtTokensByRoleOutput) ToAppProjectStatusJwtTokensByRoleOutput() AppProjectStatusJwtTokensByRoleOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleOutput) ToAppProjectStatusJwtTokensByRoleOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleOutput) Items() AppProjectStatusJwtTokensByRoleItemsArrayOutput {
	return o.ApplyT(func(v AppProjectStatusJwtTokensByRole) []AppProjectStatusJwtTokensByRoleItems { return v.Items }).(AppProjectStatusJwtTokensByRoleItemsArrayOutput)
}

type AppProjectStatusJwtTokensByRoleMapOutput struct{ *pulumi.OutputState }

func (AppProjectStatusJwtTokensByRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppProjectStatusJwtTokensByRole)(nil)).Elem()
}

func (o AppProjectStatusJwtTokensByRoleMapOutput) ToAppProjectStatusJwtTokensByRoleMapOutput() AppProjectStatusJwtTokensByRoleMapOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleMapOutput) ToAppProjectStatusJwtTokensByRoleMapOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleMapOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleMapOutput) MapIndex(k pulumi.StringInput) AppProjectStatusJwtTokensByRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppProjectStatusJwtTokensByRole {
		return vs[0].(map[string]AppProjectStatusJwtTokensByRole)[vs[1].(string)]
	}).(AppProjectStatusJwtTokensByRoleOutput)
}

// JWTToken holds the issuedAt and expiresAt values of a token
type AppProjectStatusJwtTokensByRoleItems struct {
	Exp *int    `pulumi:"exp"`
	Iat int     `pulumi:"iat"`
	Id  *string `pulumi:"id"`
}

// AppProjectStatusJwtTokensByRoleItemsInput is an input type that accepts AppProjectStatusJwtTokensByRoleItemsArgs and AppProjectStatusJwtTokensByRoleItemsOutput values.
// You can construct a concrete instance of `AppProjectStatusJwtTokensByRoleItemsInput` via:
//
//          AppProjectStatusJwtTokensByRoleItemsArgs{...}
type AppProjectStatusJwtTokensByRoleItemsInput interface {
	pulumi.Input

	ToAppProjectStatusJwtTokensByRoleItemsOutput() AppProjectStatusJwtTokensByRoleItemsOutput
	ToAppProjectStatusJwtTokensByRoleItemsOutputWithContext(context.Context) AppProjectStatusJwtTokensByRoleItemsOutput
}

// JWTToken holds the issuedAt and expiresAt values of a token
type AppProjectStatusJwtTokensByRoleItemsArgs struct {
	Exp pulumi.IntPtrInput    `pulumi:"exp"`
	Iat pulumi.IntInput       `pulumi:"iat"`
	Id  pulumi.StringPtrInput `pulumi:"id"`
}

func (AppProjectStatusJwtTokensByRoleItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectStatusJwtTokensByRoleItems)(nil)).Elem()
}

func (i AppProjectStatusJwtTokensByRoleItemsArgs) ToAppProjectStatusJwtTokensByRoleItemsOutput() AppProjectStatusJwtTokensByRoleItemsOutput {
	return i.ToAppProjectStatusJwtTokensByRoleItemsOutputWithContext(context.Background())
}

func (i AppProjectStatusJwtTokensByRoleItemsArgs) ToAppProjectStatusJwtTokensByRoleItemsOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusJwtTokensByRoleItemsOutput)
}

// AppProjectStatusJwtTokensByRoleItemsArrayInput is an input type that accepts AppProjectStatusJwtTokensByRoleItemsArray and AppProjectStatusJwtTokensByRoleItemsArrayOutput values.
// You can construct a concrete instance of `AppProjectStatusJwtTokensByRoleItemsArrayInput` via:
//
//          AppProjectStatusJwtTokensByRoleItemsArray{ AppProjectStatusJwtTokensByRoleItemsArgs{...} }
type AppProjectStatusJwtTokensByRoleItemsArrayInput interface {
	pulumi.Input

	ToAppProjectStatusJwtTokensByRoleItemsArrayOutput() AppProjectStatusJwtTokensByRoleItemsArrayOutput
	ToAppProjectStatusJwtTokensByRoleItemsArrayOutputWithContext(context.Context) AppProjectStatusJwtTokensByRoleItemsArrayOutput
}

type AppProjectStatusJwtTokensByRoleItemsArray []AppProjectStatusJwtTokensByRoleItemsInput

func (AppProjectStatusJwtTokensByRoleItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectStatusJwtTokensByRoleItems)(nil)).Elem()
}

func (i AppProjectStatusJwtTokensByRoleItemsArray) ToAppProjectStatusJwtTokensByRoleItemsArrayOutput() AppProjectStatusJwtTokensByRoleItemsArrayOutput {
	return i.ToAppProjectStatusJwtTokensByRoleItemsArrayOutputWithContext(context.Background())
}

func (i AppProjectStatusJwtTokensByRoleItemsArray) ToAppProjectStatusJwtTokensByRoleItemsArrayOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProjectStatusJwtTokensByRoleItemsArrayOutput)
}

// JWTToken holds the issuedAt and expiresAt values of a token
type AppProjectStatusJwtTokensByRoleItemsOutput struct{ *pulumi.OutputState }

func (AppProjectStatusJwtTokensByRoleItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProjectStatusJwtTokensByRoleItems)(nil)).Elem()
}

func (o AppProjectStatusJwtTokensByRoleItemsOutput) ToAppProjectStatusJwtTokensByRoleItemsOutput() AppProjectStatusJwtTokensByRoleItemsOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleItemsOutput) ToAppProjectStatusJwtTokensByRoleItemsOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleItemsOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleItemsOutput) Exp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppProjectStatusJwtTokensByRoleItems) *int { return v.Exp }).(pulumi.IntPtrOutput)
}

func (o AppProjectStatusJwtTokensByRoleItemsOutput) Iat() pulumi.IntOutput {
	return o.ApplyT(func(v AppProjectStatusJwtTokensByRoleItems) int { return v.Iat }).(pulumi.IntOutput)
}

func (o AppProjectStatusJwtTokensByRoleItemsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProjectStatusJwtTokensByRoleItems) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type AppProjectStatusJwtTokensByRoleItemsArrayOutput struct{ *pulumi.OutputState }

func (AppProjectStatusJwtTokensByRoleItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppProjectStatusJwtTokensByRoleItems)(nil)).Elem()
}

func (o AppProjectStatusJwtTokensByRoleItemsArrayOutput) ToAppProjectStatusJwtTokensByRoleItemsArrayOutput() AppProjectStatusJwtTokensByRoleItemsArrayOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleItemsArrayOutput) ToAppProjectStatusJwtTokensByRoleItemsArrayOutputWithContext(ctx context.Context) AppProjectStatusJwtTokensByRoleItemsArrayOutput {
	return o
}

func (o AppProjectStatusJwtTokensByRoleItemsArrayOutput) Index(i pulumi.IntInput) AppProjectStatusJwtTokensByRoleItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppProjectStatusJwtTokensByRoleItems {
		return vs[0].([]AppProjectStatusJwtTokensByRoleItems)[vs[1].(int)]
	}).(AppProjectStatusJwtTokensByRoleItemsOutput)
}

// Application is a definition of Application resource.
type ApplicationType struct {
	ApiVersion *string           `pulumi:"apiVersion"`
	Kind       *string           `pulumi:"kind"`
	Metadata   metav1.ObjectMeta `pulumi:"metadata"`
	// Operation contains information about a requested or running operation
	Operation *ApplicationOperation `pulumi:"operation"`
	// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
	Spec ApplicationSpec `pulumi:"spec"`
	// ApplicationStatus contains status information for the application
	Status *ApplicationStatus `pulumi:"status"`
}

// ApplicationTypeInput is an input type that accepts ApplicationTypeArgs and ApplicationTypeOutput values.
// You can construct a concrete instance of `ApplicationTypeInput` via:
//
//          ApplicationTypeArgs{...}
type ApplicationTypeInput interface {
	pulumi.Input

	ToApplicationTypeOutput() ApplicationTypeOutput
	ToApplicationTypeOutputWithContext(context.Context) ApplicationTypeOutput
}

// Application is a definition of Application resource.
type ApplicationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput  `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput  `pulumi:"kind"`
	Metadata   metav1.ObjectMetaInput `pulumi:"metadata"`
	// Operation contains information about a requested or running operation
	Operation ApplicationOperationPtrInput `pulumi:"operation"`
	// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
	Spec ApplicationSpecInput `pulumi:"spec"`
	// ApplicationStatus contains status information for the application
	Status ApplicationStatusPtrInput `pulumi:"status"`
}

func (ApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (i ApplicationTypeArgs) ToApplicationTypeOutput() ApplicationTypeOutput {
	return i.ToApplicationTypeOutputWithContext(context.Background())
}

func (i ApplicationTypeArgs) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTypeOutput)
}

// Application is a definition of Application resource.
type ApplicationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (o ApplicationTypeOutput) ToApplicationTypeOutput() ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ApplicationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ApplicationTypeOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v ApplicationType) metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaOutput)
}

// Operation contains information about a requested or running operation
func (o ApplicationTypeOutput) Operation() ApplicationOperationPtrOutput {
	return o.ApplyT(func(v ApplicationType) *ApplicationOperation { return v.Operation }).(ApplicationOperationPtrOutput)
}

// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
func (o ApplicationTypeOutput) Spec() ApplicationSpecOutput {
	return o.ApplyT(func(v ApplicationType) ApplicationSpec { return v.Spec }).(ApplicationSpecOutput)
}

// ApplicationStatus contains status information for the application
func (o ApplicationTypeOutput) Status() ApplicationStatusPtrOutput {
	return o.ApplyT(func(v ApplicationType) *ApplicationStatus { return v.Status }).(ApplicationStatusPtrOutput)
}

type ApplicationMetadata struct {
}

// ApplicationMetadataInput is an input type that accepts ApplicationMetadataArgs and ApplicationMetadataOutput values.
// You can construct a concrete instance of `ApplicationMetadataInput` via:
//
//          ApplicationMetadataArgs{...}
type ApplicationMetadataInput interface {
	pulumi.Input

	ToApplicationMetadataOutput() ApplicationMetadataOutput
	ToApplicationMetadataOutputWithContext(context.Context) ApplicationMetadataOutput
}

type ApplicationMetadataArgs struct {
}

func (ApplicationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMetadata)(nil)).Elem()
}

func (i ApplicationMetadataArgs) ToApplicationMetadataOutput() ApplicationMetadataOutput {
	return i.ToApplicationMetadataOutputWithContext(context.Background())
}

func (i ApplicationMetadataArgs) ToApplicationMetadataOutputWithContext(ctx context.Context) ApplicationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMetadataOutput)
}

type ApplicationMetadataOutput struct{ *pulumi.OutputState }

func (ApplicationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMetadata)(nil)).Elem()
}

func (o ApplicationMetadataOutput) ToApplicationMetadataOutput() ApplicationMetadataOutput {
	return o
}

func (o ApplicationMetadataOutput) ToApplicationMetadataOutputWithContext(ctx context.Context) ApplicationMetadataOutput {
	return o
}

// Operation contains information about a requested or running operation
type ApplicationOperation struct {
	// Info is a list of informational items for this operation
	Info []ApplicationOperationInfo `pulumi:"info"`
	// InitiatedBy contains information about who initiated the operations
	InitiatedBy *ApplicationOperationInitiatedBy `pulumi:"initiatedBy"`
	// Retry controls the strategy to apply if a sync fails
	Retry *ApplicationOperationRetry `pulumi:"retry"`
	// Sync contains parameters for the operation
	Sync *ApplicationOperationSync `pulumi:"sync"`
}

// ApplicationOperationInput is an input type that accepts ApplicationOperationArgs and ApplicationOperationOutput values.
// You can construct a concrete instance of `ApplicationOperationInput` via:
//
//          ApplicationOperationArgs{...}
type ApplicationOperationInput interface {
	pulumi.Input

	ToApplicationOperationOutput() ApplicationOperationOutput
	ToApplicationOperationOutputWithContext(context.Context) ApplicationOperationOutput
}

// Operation contains information about a requested or running operation
type ApplicationOperationArgs struct {
	// Info is a list of informational items for this operation
	Info ApplicationOperationInfoArrayInput `pulumi:"info"`
	// InitiatedBy contains information about who initiated the operations
	InitiatedBy ApplicationOperationInitiatedByPtrInput `pulumi:"initiatedBy"`
	// Retry controls the strategy to apply if a sync fails
	Retry ApplicationOperationRetryPtrInput `pulumi:"retry"`
	// Sync contains parameters for the operation
	Sync ApplicationOperationSyncPtrInput `pulumi:"sync"`
}

func (ApplicationOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperation)(nil)).Elem()
}

func (i ApplicationOperationArgs) ToApplicationOperationOutput() ApplicationOperationOutput {
	return i.ToApplicationOperationOutputWithContext(context.Background())
}

func (i ApplicationOperationArgs) ToApplicationOperationOutputWithContext(ctx context.Context) ApplicationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationOutput)
}

func (i ApplicationOperationArgs) ToApplicationOperationPtrOutput() ApplicationOperationPtrOutput {
	return i.ToApplicationOperationPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationArgs) ToApplicationOperationPtrOutputWithContext(ctx context.Context) ApplicationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationOutput).ToApplicationOperationPtrOutputWithContext(ctx)
}

// ApplicationOperationPtrInput is an input type that accepts ApplicationOperationArgs, ApplicationOperationPtr and ApplicationOperationPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationPtrInput` via:
//
//          ApplicationOperationArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationPtrInput interface {
	pulumi.Input

	ToApplicationOperationPtrOutput() ApplicationOperationPtrOutput
	ToApplicationOperationPtrOutputWithContext(context.Context) ApplicationOperationPtrOutput
}

type applicationOperationPtrType ApplicationOperationArgs

func ApplicationOperationPtr(v *ApplicationOperationArgs) ApplicationOperationPtrInput {
	return (*applicationOperationPtrType)(v)
}

func (*applicationOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperation)(nil)).Elem()
}

func (i *applicationOperationPtrType) ToApplicationOperationPtrOutput() ApplicationOperationPtrOutput {
	return i.ToApplicationOperationPtrOutputWithContext(context.Background())
}

func (i *applicationOperationPtrType) ToApplicationOperationPtrOutputWithContext(ctx context.Context) ApplicationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationPtrOutput)
}

// Operation contains information about a requested or running operation
type ApplicationOperationOutput struct{ *pulumi.OutputState }

func (ApplicationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperation)(nil)).Elem()
}

func (o ApplicationOperationOutput) ToApplicationOperationOutput() ApplicationOperationOutput {
	return o
}

func (o ApplicationOperationOutput) ToApplicationOperationOutputWithContext(ctx context.Context) ApplicationOperationOutput {
	return o
}

func (o ApplicationOperationOutput) ToApplicationOperationPtrOutput() ApplicationOperationPtrOutput {
	return o.ToApplicationOperationPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationOutput) ToApplicationOperationPtrOutputWithContext(ctx context.Context) ApplicationOperationPtrOutput {
	return o.ApplyT(func(v ApplicationOperation) *ApplicationOperation {
		return &v
	}).(ApplicationOperationPtrOutput)
}

// Info is a list of informational items for this operation
func (o ApplicationOperationOutput) Info() ApplicationOperationInfoArrayOutput {
	return o.ApplyT(func(v ApplicationOperation) []ApplicationOperationInfo { return v.Info }).(ApplicationOperationInfoArrayOutput)
}

// InitiatedBy contains information about who initiated the operations
func (o ApplicationOperationOutput) InitiatedBy() ApplicationOperationInitiatedByPtrOutput {
	return o.ApplyT(func(v ApplicationOperation) *ApplicationOperationInitiatedBy { return v.InitiatedBy }).(ApplicationOperationInitiatedByPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
func (o ApplicationOperationOutput) Retry() ApplicationOperationRetryPtrOutput {
	return o.ApplyT(func(v ApplicationOperation) *ApplicationOperationRetry { return v.Retry }).(ApplicationOperationRetryPtrOutput)
}

// Sync contains parameters for the operation
func (o ApplicationOperationOutput) Sync() ApplicationOperationSyncPtrOutput {
	return o.ApplyT(func(v ApplicationOperation) *ApplicationOperationSync { return v.Sync }).(ApplicationOperationSyncPtrOutput)
}

type ApplicationOperationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperation)(nil)).Elem()
}

func (o ApplicationOperationPtrOutput) ToApplicationOperationPtrOutput() ApplicationOperationPtrOutput {
	return o
}

func (o ApplicationOperationPtrOutput) ToApplicationOperationPtrOutputWithContext(ctx context.Context) ApplicationOperationPtrOutput {
	return o
}

func (o ApplicationOperationPtrOutput) Elem() ApplicationOperationOutput {
	return o.ApplyT(func(v *ApplicationOperation) ApplicationOperation { return *v }).(ApplicationOperationOutput)
}

// Info is a list of informational items for this operation
func (o ApplicationOperationPtrOutput) Info() ApplicationOperationInfoArrayOutput {
	return o.ApplyT(func(v *ApplicationOperation) []ApplicationOperationInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(ApplicationOperationInfoArrayOutput)
}

// InitiatedBy contains information about who initiated the operations
func (o ApplicationOperationPtrOutput) InitiatedBy() ApplicationOperationInitiatedByPtrOutput {
	return o.ApplyT(func(v *ApplicationOperation) *ApplicationOperationInitiatedBy {
		if v == nil {
			return nil
		}
		return v.InitiatedBy
	}).(ApplicationOperationInitiatedByPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
func (o ApplicationOperationPtrOutput) Retry() ApplicationOperationRetryPtrOutput {
	return o.ApplyT(func(v *ApplicationOperation) *ApplicationOperationRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(ApplicationOperationRetryPtrOutput)
}

// Sync contains parameters for the operation
func (o ApplicationOperationPtrOutput) Sync() ApplicationOperationSyncPtrOutput {
	return o.ApplyT(func(v *ApplicationOperation) *ApplicationOperationSync {
		if v == nil {
			return nil
		}
		return v.Sync
	}).(ApplicationOperationSyncPtrOutput)
}

type ApplicationOperationInfo struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationOperationInfoInput is an input type that accepts ApplicationOperationInfoArgs and ApplicationOperationInfoOutput values.
// You can construct a concrete instance of `ApplicationOperationInfoInput` via:
//
//          ApplicationOperationInfoArgs{...}
type ApplicationOperationInfoInput interface {
	pulumi.Input

	ToApplicationOperationInfoOutput() ApplicationOperationInfoOutput
	ToApplicationOperationInfoOutputWithContext(context.Context) ApplicationOperationInfoOutput
}

type ApplicationOperationInfoArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationOperationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationInfo)(nil)).Elem()
}

func (i ApplicationOperationInfoArgs) ToApplicationOperationInfoOutput() ApplicationOperationInfoOutput {
	return i.ToApplicationOperationInfoOutputWithContext(context.Background())
}

func (i ApplicationOperationInfoArgs) ToApplicationOperationInfoOutputWithContext(ctx context.Context) ApplicationOperationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationInfoOutput)
}

// ApplicationOperationInfoArrayInput is an input type that accepts ApplicationOperationInfoArray and ApplicationOperationInfoArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationInfoArrayInput` via:
//
//          ApplicationOperationInfoArray{ ApplicationOperationInfoArgs{...} }
type ApplicationOperationInfoArrayInput interface {
	pulumi.Input

	ToApplicationOperationInfoArrayOutput() ApplicationOperationInfoArrayOutput
	ToApplicationOperationInfoArrayOutputWithContext(context.Context) ApplicationOperationInfoArrayOutput
}

type ApplicationOperationInfoArray []ApplicationOperationInfoInput

func (ApplicationOperationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationInfo)(nil)).Elem()
}

func (i ApplicationOperationInfoArray) ToApplicationOperationInfoArrayOutput() ApplicationOperationInfoArrayOutput {
	return i.ToApplicationOperationInfoArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationInfoArray) ToApplicationOperationInfoArrayOutputWithContext(ctx context.Context) ApplicationOperationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationInfoArrayOutput)
}

type ApplicationOperationInfoOutput struct{ *pulumi.OutputState }

func (ApplicationOperationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationInfo)(nil)).Elem()
}

func (o ApplicationOperationInfoOutput) ToApplicationOperationInfoOutput() ApplicationOperationInfoOutput {
	return o
}

func (o ApplicationOperationInfoOutput) ToApplicationOperationInfoOutputWithContext(ctx context.Context) ApplicationOperationInfoOutput {
	return o
}

func (o ApplicationOperationInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationOperationInfoOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationInfo) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationOperationInfoArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationInfo)(nil)).Elem()
}

func (o ApplicationOperationInfoArrayOutput) ToApplicationOperationInfoArrayOutput() ApplicationOperationInfoArrayOutput {
	return o
}

func (o ApplicationOperationInfoArrayOutput) ToApplicationOperationInfoArrayOutputWithContext(ctx context.Context) ApplicationOperationInfoArrayOutput {
	return o
}

func (o ApplicationOperationInfoArrayOutput) Index(i pulumi.IntInput) ApplicationOperationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationInfo {
		return vs[0].([]ApplicationOperationInfo)[vs[1].(int)]
	}).(ApplicationOperationInfoOutput)
}

// InitiatedBy contains information about who initiated the operations
type ApplicationOperationInitiatedBy struct {
	// Automated is set to true if operation was initiated automatically by the application controller.
	Automated *bool `pulumi:"automated"`
	// Username contains the name of a user who started operation
	Username *string `pulumi:"username"`
}

// ApplicationOperationInitiatedByInput is an input type that accepts ApplicationOperationInitiatedByArgs and ApplicationOperationInitiatedByOutput values.
// You can construct a concrete instance of `ApplicationOperationInitiatedByInput` via:
//
//          ApplicationOperationInitiatedByArgs{...}
type ApplicationOperationInitiatedByInput interface {
	pulumi.Input

	ToApplicationOperationInitiatedByOutput() ApplicationOperationInitiatedByOutput
	ToApplicationOperationInitiatedByOutputWithContext(context.Context) ApplicationOperationInitiatedByOutput
}

// InitiatedBy contains information about who initiated the operations
type ApplicationOperationInitiatedByArgs struct {
	// Automated is set to true if operation was initiated automatically by the application controller.
	Automated pulumi.BoolPtrInput `pulumi:"automated"`
	// Username contains the name of a user who started operation
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplicationOperationInitiatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationInitiatedBy)(nil)).Elem()
}

func (i ApplicationOperationInitiatedByArgs) ToApplicationOperationInitiatedByOutput() ApplicationOperationInitiatedByOutput {
	return i.ToApplicationOperationInitiatedByOutputWithContext(context.Background())
}

func (i ApplicationOperationInitiatedByArgs) ToApplicationOperationInitiatedByOutputWithContext(ctx context.Context) ApplicationOperationInitiatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationInitiatedByOutput)
}

func (i ApplicationOperationInitiatedByArgs) ToApplicationOperationInitiatedByPtrOutput() ApplicationOperationInitiatedByPtrOutput {
	return i.ToApplicationOperationInitiatedByPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationInitiatedByArgs) ToApplicationOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationOperationInitiatedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationInitiatedByOutput).ToApplicationOperationInitiatedByPtrOutputWithContext(ctx)
}

// ApplicationOperationInitiatedByPtrInput is an input type that accepts ApplicationOperationInitiatedByArgs, ApplicationOperationInitiatedByPtr and ApplicationOperationInitiatedByPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationInitiatedByPtrInput` via:
//
//          ApplicationOperationInitiatedByArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationInitiatedByPtrInput interface {
	pulumi.Input

	ToApplicationOperationInitiatedByPtrOutput() ApplicationOperationInitiatedByPtrOutput
	ToApplicationOperationInitiatedByPtrOutputWithContext(context.Context) ApplicationOperationInitiatedByPtrOutput
}

type applicationOperationInitiatedByPtrType ApplicationOperationInitiatedByArgs

func ApplicationOperationInitiatedByPtr(v *ApplicationOperationInitiatedByArgs) ApplicationOperationInitiatedByPtrInput {
	return (*applicationOperationInitiatedByPtrType)(v)
}

func (*applicationOperationInitiatedByPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationInitiatedBy)(nil)).Elem()
}

func (i *applicationOperationInitiatedByPtrType) ToApplicationOperationInitiatedByPtrOutput() ApplicationOperationInitiatedByPtrOutput {
	return i.ToApplicationOperationInitiatedByPtrOutputWithContext(context.Background())
}

func (i *applicationOperationInitiatedByPtrType) ToApplicationOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationOperationInitiatedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationInitiatedByPtrOutput)
}

// InitiatedBy contains information about who initiated the operations
type ApplicationOperationInitiatedByOutput struct{ *pulumi.OutputState }

func (ApplicationOperationInitiatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationInitiatedBy)(nil)).Elem()
}

func (o ApplicationOperationInitiatedByOutput) ToApplicationOperationInitiatedByOutput() ApplicationOperationInitiatedByOutput {
	return o
}

func (o ApplicationOperationInitiatedByOutput) ToApplicationOperationInitiatedByOutputWithContext(ctx context.Context) ApplicationOperationInitiatedByOutput {
	return o
}

func (o ApplicationOperationInitiatedByOutput) ToApplicationOperationInitiatedByPtrOutput() ApplicationOperationInitiatedByPtrOutput {
	return o.ToApplicationOperationInitiatedByPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationInitiatedByOutput) ToApplicationOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationOperationInitiatedByPtrOutput {
	return o.ApplyT(func(v ApplicationOperationInitiatedBy) *ApplicationOperationInitiatedBy {
		return &v
	}).(ApplicationOperationInitiatedByPtrOutput)
}

// Automated is set to true if operation was initiated automatically by the application controller.
func (o ApplicationOperationInitiatedByOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationInitiatedBy) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

// Username contains the name of a user who started operation
func (o ApplicationOperationInitiatedByOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationInitiatedBy) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplicationOperationInitiatedByPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationInitiatedByPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationInitiatedBy)(nil)).Elem()
}

func (o ApplicationOperationInitiatedByPtrOutput) ToApplicationOperationInitiatedByPtrOutput() ApplicationOperationInitiatedByPtrOutput {
	return o
}

func (o ApplicationOperationInitiatedByPtrOutput) ToApplicationOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationOperationInitiatedByPtrOutput {
	return o
}

func (o ApplicationOperationInitiatedByPtrOutput) Elem() ApplicationOperationInitiatedByOutput {
	return o.ApplyT(func(v *ApplicationOperationInitiatedBy) ApplicationOperationInitiatedBy { return *v }).(ApplicationOperationInitiatedByOutput)
}

// Automated is set to true if operation was initiated automatically by the application controller.
func (o ApplicationOperationInitiatedByPtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationInitiatedBy) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

// Username contains the name of a user who started operation
func (o ApplicationOperationInitiatedByPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationInitiatedBy) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
type ApplicationOperationRetry struct {
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff *ApplicationOperationRetryBackoff `pulumi:"backoff"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit *int `pulumi:"limit"`
}

// ApplicationOperationRetryInput is an input type that accepts ApplicationOperationRetryArgs and ApplicationOperationRetryOutput values.
// You can construct a concrete instance of `ApplicationOperationRetryInput` via:
//
//          ApplicationOperationRetryArgs{...}
type ApplicationOperationRetryInput interface {
	pulumi.Input

	ToApplicationOperationRetryOutput() ApplicationOperationRetryOutput
	ToApplicationOperationRetryOutputWithContext(context.Context) ApplicationOperationRetryOutput
}

// Retry controls the strategy to apply if a sync fails
type ApplicationOperationRetryArgs struct {
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff ApplicationOperationRetryBackoffPtrInput `pulumi:"backoff"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (ApplicationOperationRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationRetry)(nil)).Elem()
}

func (i ApplicationOperationRetryArgs) ToApplicationOperationRetryOutput() ApplicationOperationRetryOutput {
	return i.ToApplicationOperationRetryOutputWithContext(context.Background())
}

func (i ApplicationOperationRetryArgs) ToApplicationOperationRetryOutputWithContext(ctx context.Context) ApplicationOperationRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationRetryOutput)
}

func (i ApplicationOperationRetryArgs) ToApplicationOperationRetryPtrOutput() ApplicationOperationRetryPtrOutput {
	return i.ToApplicationOperationRetryPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationRetryArgs) ToApplicationOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationRetryOutput).ToApplicationOperationRetryPtrOutputWithContext(ctx)
}

// ApplicationOperationRetryPtrInput is an input type that accepts ApplicationOperationRetryArgs, ApplicationOperationRetryPtr and ApplicationOperationRetryPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationRetryPtrInput` via:
//
//          ApplicationOperationRetryArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationRetryPtrInput interface {
	pulumi.Input

	ToApplicationOperationRetryPtrOutput() ApplicationOperationRetryPtrOutput
	ToApplicationOperationRetryPtrOutputWithContext(context.Context) ApplicationOperationRetryPtrOutput
}

type applicationOperationRetryPtrType ApplicationOperationRetryArgs

func ApplicationOperationRetryPtr(v *ApplicationOperationRetryArgs) ApplicationOperationRetryPtrInput {
	return (*applicationOperationRetryPtrType)(v)
}

func (*applicationOperationRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationRetry)(nil)).Elem()
}

func (i *applicationOperationRetryPtrType) ToApplicationOperationRetryPtrOutput() ApplicationOperationRetryPtrOutput {
	return i.ToApplicationOperationRetryPtrOutputWithContext(context.Background())
}

func (i *applicationOperationRetryPtrType) ToApplicationOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationRetryPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
type ApplicationOperationRetryOutput struct{ *pulumi.OutputState }

func (ApplicationOperationRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationRetry)(nil)).Elem()
}

func (o ApplicationOperationRetryOutput) ToApplicationOperationRetryOutput() ApplicationOperationRetryOutput {
	return o
}

func (o ApplicationOperationRetryOutput) ToApplicationOperationRetryOutputWithContext(ctx context.Context) ApplicationOperationRetryOutput {
	return o
}

func (o ApplicationOperationRetryOutput) ToApplicationOperationRetryPtrOutput() ApplicationOperationRetryPtrOutput {
	return o.ToApplicationOperationRetryPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationRetryOutput) ToApplicationOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetry) *ApplicationOperationRetry {
		return &v
	}).(ApplicationOperationRetryPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
func (o ApplicationOperationRetryOutput) Backoff() ApplicationOperationRetryBackoffPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetry) *ApplicationOperationRetryBackoff { return v.Backoff }).(ApplicationOperationRetryBackoffPtrOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o ApplicationOperationRetryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetry) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type ApplicationOperationRetryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationRetry)(nil)).Elem()
}

func (o ApplicationOperationRetryPtrOutput) ToApplicationOperationRetryPtrOutput() ApplicationOperationRetryPtrOutput {
	return o
}

func (o ApplicationOperationRetryPtrOutput) ToApplicationOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryPtrOutput {
	return o
}

func (o ApplicationOperationRetryPtrOutput) Elem() ApplicationOperationRetryOutput {
	return o.ApplyT(func(v *ApplicationOperationRetry) ApplicationOperationRetry { return *v }).(ApplicationOperationRetryOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
func (o ApplicationOperationRetryPtrOutput) Backoff() ApplicationOperationRetryBackoffPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationRetry) *ApplicationOperationRetryBackoff {
		if v == nil {
			return nil
		}
		return v.Backoff
	}).(ApplicationOperationRetryBackoffPtrOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o ApplicationOperationRetryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationRetry) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationOperationRetryBackoff struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration *string `pulumi:"duration"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor *int `pulumi:"factor"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration *string `pulumi:"maxDuration"`
}

// ApplicationOperationRetryBackoffInput is an input type that accepts ApplicationOperationRetryBackoffArgs and ApplicationOperationRetryBackoffOutput values.
// You can construct a concrete instance of `ApplicationOperationRetryBackoffInput` via:
//
//          ApplicationOperationRetryBackoffArgs{...}
type ApplicationOperationRetryBackoffInput interface {
	pulumi.Input

	ToApplicationOperationRetryBackoffOutput() ApplicationOperationRetryBackoffOutput
	ToApplicationOperationRetryBackoffOutputWithContext(context.Context) ApplicationOperationRetryBackoffOutput
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationOperationRetryBackoffArgs struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor pulumi.IntPtrInput `pulumi:"factor"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration pulumi.StringPtrInput `pulumi:"maxDuration"`
}

func (ApplicationOperationRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationRetryBackoff)(nil)).Elem()
}

func (i ApplicationOperationRetryBackoffArgs) ToApplicationOperationRetryBackoffOutput() ApplicationOperationRetryBackoffOutput {
	return i.ToApplicationOperationRetryBackoffOutputWithContext(context.Background())
}

func (i ApplicationOperationRetryBackoffArgs) ToApplicationOperationRetryBackoffOutputWithContext(ctx context.Context) ApplicationOperationRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationRetryBackoffOutput)
}

func (i ApplicationOperationRetryBackoffArgs) ToApplicationOperationRetryBackoffPtrOutput() ApplicationOperationRetryBackoffPtrOutput {
	return i.ToApplicationOperationRetryBackoffPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationRetryBackoffArgs) ToApplicationOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationRetryBackoffOutput).ToApplicationOperationRetryBackoffPtrOutputWithContext(ctx)
}

// ApplicationOperationRetryBackoffPtrInput is an input type that accepts ApplicationOperationRetryBackoffArgs, ApplicationOperationRetryBackoffPtr and ApplicationOperationRetryBackoffPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationRetryBackoffPtrInput` via:
//
//          ApplicationOperationRetryBackoffArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationRetryBackoffPtrInput interface {
	pulumi.Input

	ToApplicationOperationRetryBackoffPtrOutput() ApplicationOperationRetryBackoffPtrOutput
	ToApplicationOperationRetryBackoffPtrOutputWithContext(context.Context) ApplicationOperationRetryBackoffPtrOutput
}

type applicationOperationRetryBackoffPtrType ApplicationOperationRetryBackoffArgs

func ApplicationOperationRetryBackoffPtr(v *ApplicationOperationRetryBackoffArgs) ApplicationOperationRetryBackoffPtrInput {
	return (*applicationOperationRetryBackoffPtrType)(v)
}

func (*applicationOperationRetryBackoffPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationRetryBackoff)(nil)).Elem()
}

func (i *applicationOperationRetryBackoffPtrType) ToApplicationOperationRetryBackoffPtrOutput() ApplicationOperationRetryBackoffPtrOutput {
	return i.ToApplicationOperationRetryBackoffPtrOutputWithContext(context.Background())
}

func (i *applicationOperationRetryBackoffPtrType) ToApplicationOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationRetryBackoffPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationOperationRetryBackoffOutput struct{ *pulumi.OutputState }

func (ApplicationOperationRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationRetryBackoff)(nil)).Elem()
}

func (o ApplicationOperationRetryBackoffOutput) ToApplicationOperationRetryBackoffOutput() ApplicationOperationRetryBackoffOutput {
	return o
}

func (o ApplicationOperationRetryBackoffOutput) ToApplicationOperationRetryBackoffOutputWithContext(ctx context.Context) ApplicationOperationRetryBackoffOutput {
	return o
}

func (o ApplicationOperationRetryBackoffOutput) ToApplicationOperationRetryBackoffPtrOutput() ApplicationOperationRetryBackoffPtrOutput {
	return o.ToApplicationOperationRetryBackoffPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationRetryBackoffOutput) ToApplicationOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryBackoffPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetryBackoff) *ApplicationOperationRetryBackoff {
		return &v
	}).(ApplicationOperationRetryBackoffPtrOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
func (o ApplicationOperationRetryBackoffOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetryBackoff) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Factor is a factor to multiply the base duration after each failed retry
func (o ApplicationOperationRetryBackoffOutput) Factor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetryBackoff) *int { return v.Factor }).(pulumi.IntPtrOutput)
}

// MaxDuration is the maximum amount of time allowed for the backoff strategy
func (o ApplicationOperationRetryBackoffOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationRetryBackoff) *string { return v.MaxDuration }).(pulumi.StringPtrOutput)
}

type ApplicationOperationRetryBackoffPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationRetryBackoffPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationRetryBackoff)(nil)).Elem()
}

func (o ApplicationOperationRetryBackoffPtrOutput) ToApplicationOperationRetryBackoffPtrOutput() ApplicationOperationRetryBackoffPtrOutput {
	return o
}

func (o ApplicationOperationRetryBackoffPtrOutput) ToApplicationOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationOperationRetryBackoffPtrOutput {
	return o
}

func (o ApplicationOperationRetryBackoffPtrOutput) Elem() ApplicationOperationRetryBackoffOutput {
	return o.ApplyT(func(v *ApplicationOperationRetryBackoff) ApplicationOperationRetryBackoff { return *v }).(ApplicationOperationRetryBackoffOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
func (o ApplicationOperationRetryBackoffPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Factor is a factor to multiply the base duration after each failed retry
func (o ApplicationOperationRetryBackoffPtrOutput) Factor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationRetryBackoff) *int {
		if v == nil {
			return nil
		}
		return v.Factor
	}).(pulumi.IntPtrOutput)
}

// MaxDuration is the maximum amount of time allowed for the backoff strategy
func (o ApplicationOperationRetryBackoffPtrOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.MaxDuration
	}).(pulumi.StringPtrOutput)
}

// Sync contains parameters for the operation
type ApplicationOperationSync struct {
	// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
	DryRun *bool `pulumi:"dryRun"`
	// Manifests is an optional field that overrides sync source with a local directory for development
	Manifests []string `pulumi:"manifests"`
	// Prune specifies to delete resources from the cluster that are no longer tracked in git
	Prune *bool `pulumi:"prune"`
	// Resources describes which resources shall be part of the sync
	Resources []ApplicationOperationSyncResources `pulumi:"resources"`
	// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
	Revision *string `pulumi:"revision"`
	// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
	Source *ApplicationOperationSyncSource `pulumi:"source"`
	// SyncOptions provide per-sync sync-options, e.g. Validate=false
	SyncOptions []string `pulumi:"syncOptions"`
	// SyncStrategy describes how to perform the sync
	SyncStrategy *ApplicationOperationSyncSyncStrategy `pulumi:"syncStrategy"`
}

// ApplicationOperationSyncInput is an input type that accepts ApplicationOperationSyncArgs and ApplicationOperationSyncOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncInput` via:
//
//          ApplicationOperationSyncArgs{...}
type ApplicationOperationSyncInput interface {
	pulumi.Input

	ToApplicationOperationSyncOutput() ApplicationOperationSyncOutput
	ToApplicationOperationSyncOutputWithContext(context.Context) ApplicationOperationSyncOutput
}

// Sync contains parameters for the operation
type ApplicationOperationSyncArgs struct {
	// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
	DryRun pulumi.BoolPtrInput `pulumi:"dryRun"`
	// Manifests is an optional field that overrides sync source with a local directory for development
	Manifests pulumi.StringArrayInput `pulumi:"manifests"`
	// Prune specifies to delete resources from the cluster that are no longer tracked in git
	Prune pulumi.BoolPtrInput `pulumi:"prune"`
	// Resources describes which resources shall be part of the sync
	Resources ApplicationOperationSyncResourcesArrayInput `pulumi:"resources"`
	// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
	Source ApplicationOperationSyncSourcePtrInput `pulumi:"source"`
	// SyncOptions provide per-sync sync-options, e.g. Validate=false
	SyncOptions pulumi.StringArrayInput `pulumi:"syncOptions"`
	// SyncStrategy describes how to perform the sync
	SyncStrategy ApplicationOperationSyncSyncStrategyPtrInput `pulumi:"syncStrategy"`
}

func (ApplicationOperationSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSync)(nil)).Elem()
}

func (i ApplicationOperationSyncArgs) ToApplicationOperationSyncOutput() ApplicationOperationSyncOutput {
	return i.ToApplicationOperationSyncOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncArgs) ToApplicationOperationSyncOutputWithContext(ctx context.Context) ApplicationOperationSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncOutput)
}

func (i ApplicationOperationSyncArgs) ToApplicationOperationSyncPtrOutput() ApplicationOperationSyncPtrOutput {
	return i.ToApplicationOperationSyncPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncArgs) ToApplicationOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncOutput).ToApplicationOperationSyncPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncPtrInput is an input type that accepts ApplicationOperationSyncArgs, ApplicationOperationSyncPtr and ApplicationOperationSyncPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncPtrInput` via:
//
//          ApplicationOperationSyncArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncPtrOutput() ApplicationOperationSyncPtrOutput
	ToApplicationOperationSyncPtrOutputWithContext(context.Context) ApplicationOperationSyncPtrOutput
}

type applicationOperationSyncPtrType ApplicationOperationSyncArgs

func ApplicationOperationSyncPtr(v *ApplicationOperationSyncArgs) ApplicationOperationSyncPtrInput {
	return (*applicationOperationSyncPtrType)(v)
}

func (*applicationOperationSyncPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSync)(nil)).Elem()
}

func (i *applicationOperationSyncPtrType) ToApplicationOperationSyncPtrOutput() ApplicationOperationSyncPtrOutput {
	return i.ToApplicationOperationSyncPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncPtrType) ToApplicationOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncPtrOutput)
}

// Sync contains parameters for the operation
type ApplicationOperationSyncOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSync)(nil)).Elem()
}

func (o ApplicationOperationSyncOutput) ToApplicationOperationSyncOutput() ApplicationOperationSyncOutput {
	return o
}

func (o ApplicationOperationSyncOutput) ToApplicationOperationSyncOutputWithContext(ctx context.Context) ApplicationOperationSyncOutput {
	return o
}

func (o ApplicationOperationSyncOutput) ToApplicationOperationSyncPtrOutput() ApplicationOperationSyncPtrOutput {
	return o.ToApplicationOperationSyncPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncOutput) ToApplicationOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSync) *ApplicationOperationSync {
		return &v
	}).(ApplicationOperationSyncPtrOutput)
}

// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
func (o ApplicationOperationSyncOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSync) *bool { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// Manifests is an optional field that overrides sync source with a local directory for development
func (o ApplicationOperationSyncOutput) Manifests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSync) []string { return v.Manifests }).(pulumi.StringArrayOutput)
}

// Prune specifies to delete resources from the cluster that are no longer tracked in git
func (o ApplicationOperationSyncOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSync) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

// Resources describes which resources shall be part of the sync
func (o ApplicationOperationSyncOutput) Resources() ApplicationOperationSyncResourcesArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSync) []ApplicationOperationSyncResources { return v.Resources }).(ApplicationOperationSyncResourcesArrayOutput)
}

// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
func (o ApplicationOperationSyncOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSync) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
func (o ApplicationOperationSyncOutput) Source() ApplicationOperationSyncSourcePtrOutput {
	return o.ApplyT(func(v ApplicationOperationSync) *ApplicationOperationSyncSource { return v.Source }).(ApplicationOperationSyncSourcePtrOutput)
}

// SyncOptions provide per-sync sync-options, e.g. Validate=false
func (o ApplicationOperationSyncOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSync) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

// SyncStrategy describes how to perform the sync
func (o ApplicationOperationSyncOutput) SyncStrategy() ApplicationOperationSyncSyncStrategyPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSync) *ApplicationOperationSyncSyncStrategy { return v.SyncStrategy }).(ApplicationOperationSyncSyncStrategyPtrOutput)
}

type ApplicationOperationSyncPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSync)(nil)).Elem()
}

func (o ApplicationOperationSyncPtrOutput) ToApplicationOperationSyncPtrOutput() ApplicationOperationSyncPtrOutput {
	return o
}

func (o ApplicationOperationSyncPtrOutput) ToApplicationOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncPtrOutput {
	return o
}

func (o ApplicationOperationSyncPtrOutput) Elem() ApplicationOperationSyncOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) ApplicationOperationSync { return *v }).(ApplicationOperationSyncOutput)
}

// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
func (o ApplicationOperationSyncPtrOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) *bool {
		if v == nil {
			return nil
		}
		return v.DryRun
	}).(pulumi.BoolPtrOutput)
}

// Manifests is an optional field that overrides sync source with a local directory for development
func (o ApplicationOperationSyncPtrOutput) Manifests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) []string {
		if v == nil {
			return nil
		}
		return v.Manifests
	}).(pulumi.StringArrayOutput)
}

// Prune specifies to delete resources from the cluster that are no longer tracked in git
func (o ApplicationOperationSyncPtrOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) *bool {
		if v == nil {
			return nil
		}
		return v.Prune
	}).(pulumi.BoolPtrOutput)
}

// Resources describes which resources shall be part of the sync
func (o ApplicationOperationSyncPtrOutput) Resources() ApplicationOperationSyncResourcesArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) []ApplicationOperationSyncResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ApplicationOperationSyncResourcesArrayOutput)
}

// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
func (o ApplicationOperationSyncPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
func (o ApplicationOperationSyncPtrOutput) Source() ApplicationOperationSyncSourcePtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) *ApplicationOperationSyncSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(ApplicationOperationSyncSourcePtrOutput)
}

// SyncOptions provide per-sync sync-options, e.g. Validate=false
func (o ApplicationOperationSyncPtrOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) []string {
		if v == nil {
			return nil
		}
		return v.SyncOptions
	}).(pulumi.StringArrayOutput)
}

// SyncStrategy describes how to perform the sync
func (o ApplicationOperationSyncPtrOutput) SyncStrategy() ApplicationOperationSyncSyncStrategyPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSync) *ApplicationOperationSyncSyncStrategy {
		if v == nil {
			return nil
		}
		return v.SyncStrategy
	}).(ApplicationOperationSyncSyncStrategyPtrOutput)
}

// SyncOperationResource contains resources to sync.
type ApplicationOperationSyncResources struct {
	Group     *string `pulumi:"group"`
	Kind      string  `pulumi:"kind"`
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
}

// ApplicationOperationSyncResourcesInput is an input type that accepts ApplicationOperationSyncResourcesArgs and ApplicationOperationSyncResourcesOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncResourcesInput` via:
//
//          ApplicationOperationSyncResourcesArgs{...}
type ApplicationOperationSyncResourcesInput interface {
	pulumi.Input

	ToApplicationOperationSyncResourcesOutput() ApplicationOperationSyncResourcesOutput
	ToApplicationOperationSyncResourcesOutputWithContext(context.Context) ApplicationOperationSyncResourcesOutput
}

// SyncOperationResource contains resources to sync.
type ApplicationOperationSyncResourcesArgs struct {
	Group     pulumi.StringPtrInput `pulumi:"group"`
	Kind      pulumi.StringInput    `pulumi:"kind"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ApplicationOperationSyncResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncResources)(nil)).Elem()
}

func (i ApplicationOperationSyncResourcesArgs) ToApplicationOperationSyncResourcesOutput() ApplicationOperationSyncResourcesOutput {
	return i.ToApplicationOperationSyncResourcesOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncResourcesArgs) ToApplicationOperationSyncResourcesOutputWithContext(ctx context.Context) ApplicationOperationSyncResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncResourcesOutput)
}

// ApplicationOperationSyncResourcesArrayInput is an input type that accepts ApplicationOperationSyncResourcesArray and ApplicationOperationSyncResourcesArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncResourcesArrayInput` via:
//
//          ApplicationOperationSyncResourcesArray{ ApplicationOperationSyncResourcesArgs{...} }
type ApplicationOperationSyncResourcesArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncResourcesArrayOutput() ApplicationOperationSyncResourcesArrayOutput
	ToApplicationOperationSyncResourcesArrayOutputWithContext(context.Context) ApplicationOperationSyncResourcesArrayOutput
}

type ApplicationOperationSyncResourcesArray []ApplicationOperationSyncResourcesInput

func (ApplicationOperationSyncResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncResources)(nil)).Elem()
}

func (i ApplicationOperationSyncResourcesArray) ToApplicationOperationSyncResourcesArrayOutput() ApplicationOperationSyncResourcesArrayOutput {
	return i.ToApplicationOperationSyncResourcesArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncResourcesArray) ToApplicationOperationSyncResourcesArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncResourcesArrayOutput)
}

// SyncOperationResource contains resources to sync.
type ApplicationOperationSyncResourcesOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncResources)(nil)).Elem()
}

func (o ApplicationOperationSyncResourcesOutput) ToApplicationOperationSyncResourcesOutput() ApplicationOperationSyncResourcesOutput {
	return o
}

func (o ApplicationOperationSyncResourcesOutput) ToApplicationOperationSyncResourcesOutputWithContext(ctx context.Context) ApplicationOperationSyncResourcesOutput {
	return o
}

func (o ApplicationOperationSyncResourcesOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncResources) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ApplicationOperationSyncResourcesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncResources) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ApplicationOperationSyncResourcesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncResources) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationOperationSyncResourcesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncResources) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncResourcesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncResources)(nil)).Elem()
}

func (o ApplicationOperationSyncResourcesArrayOutput) ToApplicationOperationSyncResourcesArrayOutput() ApplicationOperationSyncResourcesArrayOutput {
	return o
}

func (o ApplicationOperationSyncResourcesArrayOutput) ToApplicationOperationSyncResourcesArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncResourcesArrayOutput {
	return o
}

func (o ApplicationOperationSyncResourcesArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncResources {
		return vs[0].([]ApplicationOperationSyncResources)[vs[1].(int)]
	}).(ApplicationOperationSyncResourcesOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
type ApplicationOperationSyncSource struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory *ApplicationOperationSyncSourceDirectory `pulumi:"directory"`
	// Helm holds helm specific options
	Helm *ApplicationOperationSyncSourceHelm `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet *ApplicationOperationSyncSourceKsonnet `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationOperationSyncSourceKustomize `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationOperationSyncSourcePlugin `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL string `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// ApplicationOperationSyncSourceInput is an input type that accepts ApplicationOperationSyncSourceArgs and ApplicationOperationSyncSourceOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceInput` via:
//
//          ApplicationOperationSyncSourceArgs{...}
type ApplicationOperationSyncSourceInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceOutput() ApplicationOperationSyncSourceOutput
	ToApplicationOperationSyncSourceOutputWithContext(context.Context) ApplicationOperationSyncSourceOutput
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
type ApplicationOperationSyncSourceArgs struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory ApplicationOperationSyncSourceDirectoryPtrInput `pulumi:"directory"`
	// Helm holds helm specific options
	Helm ApplicationOperationSyncSourceHelmPtrInput `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet ApplicationOperationSyncSourceKsonnetPtrInput `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize ApplicationOperationSyncSourceKustomizePtrInput `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin ApplicationOperationSyncSourcePluginPtrInput `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL pulumi.StringInput `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (ApplicationOperationSyncSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSource)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceArgs) ToApplicationOperationSyncSourceOutput() ApplicationOperationSyncSourceOutput {
	return i.ToApplicationOperationSyncSourceOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceArgs) ToApplicationOperationSyncSourceOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceOutput)
}

func (i ApplicationOperationSyncSourceArgs) ToApplicationOperationSyncSourcePtrOutput() ApplicationOperationSyncSourcePtrOutput {
	return i.ToApplicationOperationSyncSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceArgs) ToApplicationOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceOutput).ToApplicationOperationSyncSourcePtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourcePtrInput is an input type that accepts ApplicationOperationSyncSourceArgs, ApplicationOperationSyncSourcePtr and ApplicationOperationSyncSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourcePtrInput` via:
//
//          ApplicationOperationSyncSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourcePtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourcePtrOutput() ApplicationOperationSyncSourcePtrOutput
	ToApplicationOperationSyncSourcePtrOutputWithContext(context.Context) ApplicationOperationSyncSourcePtrOutput
}

type applicationOperationSyncSourcePtrType ApplicationOperationSyncSourceArgs

func ApplicationOperationSyncSourcePtr(v *ApplicationOperationSyncSourceArgs) ApplicationOperationSyncSourcePtrInput {
	return (*applicationOperationSyncSourcePtrType)(v)
}

func (*applicationOperationSyncSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSource)(nil)).Elem()
}

func (i *applicationOperationSyncSourcePtrType) ToApplicationOperationSyncSourcePtrOutput() ApplicationOperationSyncSourcePtrOutput {
	return i.ToApplicationOperationSyncSourcePtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourcePtrType) ToApplicationOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourcePtrOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
type ApplicationOperationSyncSourceOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSource)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceOutput) ToApplicationOperationSyncSourceOutput() ApplicationOperationSyncSourceOutput {
	return o
}

func (o ApplicationOperationSyncSourceOutput) ToApplicationOperationSyncSourceOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceOutput {
	return o
}

func (o ApplicationOperationSyncSourceOutput) ToApplicationOperationSyncSourcePtrOutput() ApplicationOperationSyncSourcePtrOutput {
	return o.ToApplicationOperationSyncSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourceOutput) ToApplicationOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *ApplicationOperationSyncSource {
		return &v
	}).(ApplicationOperationSyncSourcePtrOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationOperationSyncSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationOperationSyncSourceOutput) Directory() ApplicationOperationSyncSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *ApplicationOperationSyncSourceDirectory { return v.Directory }).(ApplicationOperationSyncSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationOperationSyncSourceOutput) Helm() ApplicationOperationSyncSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *ApplicationOperationSyncSourceHelm { return v.Helm }).(ApplicationOperationSyncSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationOperationSyncSourceOutput) Ksonnet() ApplicationOperationSyncSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *ApplicationOperationSyncSourceKsonnet { return v.Ksonnet }).(ApplicationOperationSyncSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationOperationSyncSourceOutput) Kustomize() ApplicationOperationSyncSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *ApplicationOperationSyncSourceKustomize { return v.Kustomize }).(ApplicationOperationSyncSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationOperationSyncSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationOperationSyncSourceOutput) Plugin() ApplicationOperationSyncSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *ApplicationOperationSyncSourcePlugin { return v.Plugin }).(ApplicationOperationSyncSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationOperationSyncSourceOutput) RepoURL() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) string { return v.RepoURL }).(pulumi.StringOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationOperationSyncSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSource)(nil)).Elem()
}

func (o ApplicationOperationSyncSourcePtrOutput) ToApplicationOperationSyncSourcePtrOutput() ApplicationOperationSyncSourcePtrOutput {
	return o
}

func (o ApplicationOperationSyncSourcePtrOutput) ToApplicationOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePtrOutput {
	return o
}

func (o ApplicationOperationSyncSourcePtrOutput) Elem() ApplicationOperationSyncSourceOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) ApplicationOperationSyncSource { return *v }).(ApplicationOperationSyncSourceOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationOperationSyncSourcePtrOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return v.Chart
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationOperationSyncSourcePtrOutput) Directory() ApplicationOperationSyncSourceDirectoryPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *ApplicationOperationSyncSourceDirectory {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(ApplicationOperationSyncSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationOperationSyncSourcePtrOutput) Helm() ApplicationOperationSyncSourceHelmPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *ApplicationOperationSyncSourceHelm {
		if v == nil {
			return nil
		}
		return v.Helm
	}).(ApplicationOperationSyncSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationOperationSyncSourcePtrOutput) Ksonnet() ApplicationOperationSyncSourceKsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *ApplicationOperationSyncSourceKsonnet {
		if v == nil {
			return nil
		}
		return v.Ksonnet
	}).(ApplicationOperationSyncSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationOperationSyncSourcePtrOutput) Kustomize() ApplicationOperationSyncSourceKustomizePtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *ApplicationOperationSyncSourceKustomize {
		if v == nil {
			return nil
		}
		return v.Kustomize
	}).(ApplicationOperationSyncSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationOperationSyncSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationOperationSyncSourcePtrOutput) Plugin() ApplicationOperationSyncSourcePluginPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *ApplicationOperationSyncSourcePlugin {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(ApplicationOperationSyncSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationOperationSyncSourcePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationOperationSyncSourcePtrOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return v.TargetRevision
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationOperationSyncSourceDirectory struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationOperationSyncSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `pulumi:"recurse"`
}

// ApplicationOperationSyncSourceDirectoryInput is an input type that accepts ApplicationOperationSyncSourceDirectoryArgs and ApplicationOperationSyncSourceDirectoryOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryInput` via:
//
//          ApplicationOperationSyncSourceDirectoryArgs{...}
type ApplicationOperationSyncSourceDirectoryInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryOutput() ApplicationOperationSyncSourceDirectoryOutput
	ToApplicationOperationSyncSourceDirectoryOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryOutput
}

// Directory holds path/directory specific options
type ApplicationOperationSyncSourceDirectoryArgs struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet ApplicationOperationSyncSourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (ApplicationOperationSyncSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectory)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceDirectoryArgs) ToApplicationOperationSyncSourceDirectoryOutput() ApplicationOperationSyncSourceDirectoryOutput {
	return i.ToApplicationOperationSyncSourceDirectoryOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryArgs) ToApplicationOperationSyncSourceDirectoryOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryOutput)
}

func (i ApplicationOperationSyncSourceDirectoryArgs) ToApplicationOperationSyncSourceDirectoryPtrOutput() ApplicationOperationSyncSourceDirectoryPtrOutput {
	return i.ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryArgs) ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryOutput).ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourceDirectoryPtrInput is an input type that accepts ApplicationOperationSyncSourceDirectoryArgs, ApplicationOperationSyncSourceDirectoryPtr and ApplicationOperationSyncSourceDirectoryPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryPtrInput` via:
//
//          ApplicationOperationSyncSourceDirectoryArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourceDirectoryPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryPtrOutput() ApplicationOperationSyncSourceDirectoryPtrOutput
	ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryPtrOutput
}

type applicationOperationSyncSourceDirectoryPtrType ApplicationOperationSyncSourceDirectoryArgs

func ApplicationOperationSyncSourceDirectoryPtr(v *ApplicationOperationSyncSourceDirectoryArgs) ApplicationOperationSyncSourceDirectoryPtrInput {
	return (*applicationOperationSyncSourceDirectoryPtrType)(v)
}

func (*applicationOperationSyncSourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceDirectory)(nil)).Elem()
}

func (i *applicationOperationSyncSourceDirectoryPtrType) ToApplicationOperationSyncSourceDirectoryPtrOutput() ApplicationOperationSyncSourceDirectoryPtrOutput {
	return i.ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourceDirectoryPtrType) ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationOperationSyncSourceDirectoryOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectory)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryOutput) ToApplicationOperationSyncSourceDirectoryOutput() ApplicationOperationSyncSourceDirectoryOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryOutput) ToApplicationOperationSyncSourceDirectoryOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryOutput) ToApplicationOperationSyncSourceDirectoryPtrOutput() ApplicationOperationSyncSourceDirectoryPtrOutput {
	return o.ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourceDirectoryOutput) ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectory) *ApplicationOperationSyncSourceDirectory {
		return &v
	}).(ApplicationOperationSyncSourceDirectoryPtrOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationOperationSyncSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationOperationSyncSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationOperationSyncSourceDirectoryOutput) Jsonnet() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectory) *ApplicationOperationSyncSourceDirectoryJsonnet {
		return v.Jsonnet
	}).(ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationOperationSyncSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type ApplicationOperationSyncSourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceDirectory)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryPtrOutput) ToApplicationOperationSyncSourceDirectoryPtrOutput() ApplicationOperationSyncSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryPtrOutput) ToApplicationOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryPtrOutput) Elem() ApplicationOperationSyncSourceDirectoryOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectory) ApplicationOperationSyncSourceDirectory { return *v }).(ApplicationOperationSyncSourceDirectoryOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationOperationSyncSourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationOperationSyncSourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationOperationSyncSourceDirectoryPtrOutput) Jsonnet() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectory) *ApplicationOperationSyncSourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationOperationSyncSourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationOperationSyncSourceDirectoryJsonnet struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars []ApplicationOperationSyncSourceDirectoryJsonnetExtVars `pulumi:"extVars"`
	// Additional library search dirs
	Libs []string `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []ApplicationOperationSyncSourceDirectoryJsonnetTlas `pulumi:"tlas"`
}

// ApplicationOperationSyncSourceDirectoryJsonnetInput is an input type that accepts ApplicationOperationSyncSourceDirectoryJsonnetArgs and ApplicationOperationSyncSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryJsonnetInput` via:
//
//          ApplicationOperationSyncSourceDirectoryJsonnetArgs{...}
type ApplicationOperationSyncSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryJsonnetOutput() ApplicationOperationSyncSourceDirectoryJsonnetOutput
	ToApplicationOperationSyncSourceDirectoryJsonnetOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryJsonnetOutput
}

// Jsonnet holds options specific to Jsonnet
type ApplicationOperationSyncSourceDirectoryJsonnetArgs struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayInput `pulumi:"extVars"`
	// Additional library search dirs
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayInput `pulumi:"tlas"`
}

func (ApplicationOperationSyncSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetArgs) ToApplicationOperationSyncSourceDirectoryJsonnetOutput() ApplicationOperationSyncSourceDirectoryJsonnetOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetArgs) ToApplicationOperationSyncSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetOutput)
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetArgs) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetArgs) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetOutput).ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourceDirectoryJsonnetPtrInput is an input type that accepts ApplicationOperationSyncSourceDirectoryJsonnetArgs, ApplicationOperationSyncSourceDirectoryJsonnetPtr and ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryJsonnetPtrInput` via:
//
//          ApplicationOperationSyncSourceDirectoryJsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput
	ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput
}

type applicationOperationSyncSourceDirectoryJsonnetPtrType ApplicationOperationSyncSourceDirectoryJsonnetArgs

func ApplicationOperationSyncSourceDirectoryJsonnetPtr(v *ApplicationOperationSyncSourceDirectoryJsonnetArgs) ApplicationOperationSyncSourceDirectoryJsonnetPtrInput {
	return (*applicationOperationSyncSourceDirectoryJsonnetPtrType)(v)
}

func (*applicationOperationSyncSourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (i *applicationOperationSyncSourceDirectoryJsonnetPtrType) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourceDirectoryJsonnetPtrType) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationOperationSyncSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) ToApplicationOperationSyncSourceDirectoryJsonnetOutput() ApplicationOperationSyncSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) ToApplicationOperationSyncSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnet) *ApplicationOperationSyncSourceDirectoryJsonnet {
		return &v
	}).(ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) ExtVars() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnet) []ApplicationOperationSyncSourceDirectoryJsonnetExtVars {
		return v.ExtVars
	}).(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationOperationSyncSourceDirectoryJsonnetOutput) Tlas() ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnet) []ApplicationOperationSyncSourceDirectoryJsonnetTlas {
		return v.Tlas
	}).(ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput)
}

type ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) ToApplicationOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) Elem() ApplicationOperationSyncSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectoryJsonnet) ApplicationOperationSyncSourceDirectoryJsonnet {
		return *v
	}).(ApplicationOperationSyncSourceDirectoryJsonnetOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) ExtVars() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectoryJsonnet) []ApplicationOperationSyncSourceDirectoryJsonnetExtVars {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput) Tlas() ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceDirectoryJsonnet) []ApplicationOperationSyncSourceDirectoryJsonnetTlas {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationOperationSyncSourceDirectoryJsonnetExtVars struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationOperationSyncSourceDirectoryJsonnetExtVarsInput is an input type that accepts ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs and ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryJsonnetExtVarsInput` via:
//
//          ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs{...}
type ApplicationOperationSyncSourceDirectoryJsonnetExtVarsInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput
	ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput)
}

// ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayInput is an input type that accepts ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArray and ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayInput` via:
//
//          ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArray{ ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArgs{...} }
type ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput
	ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput
}

type ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArray []ApplicationOperationSyncSourceDirectoryJsonnetExtVarsInput

func (ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArray) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArray) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnetExtVars) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnetExtVars) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnetExtVars) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncSourceDirectoryJsonnetExtVars {
		return vs[0].([]ApplicationOperationSyncSourceDirectoryJsonnetExtVars)[vs[1].(int)]
	}).(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationOperationSyncSourceDirectoryJsonnetTlas struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationOperationSyncSourceDirectoryJsonnetTlasInput is an input type that accepts ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs and ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryJsonnetTlasInput` via:
//
//          ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs{...}
type ApplicationOperationSyncSourceDirectoryJsonnetTlasInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutput() ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput
	ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs) ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutput() ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs) ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput)
}

// ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayInput is an input type that accepts ApplicationOperationSyncSourceDirectoryJsonnetTlasArray and ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayInput` via:
//
//          ApplicationOperationSyncSourceDirectoryJsonnetTlasArray{ ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs{...} }
type ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput() ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput
	ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Context) ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput
}

type ApplicationOperationSyncSourceDirectoryJsonnetTlasArray []ApplicationOperationSyncSourceDirectoryJsonnetTlasInput

func (ApplicationOperationSyncSourceDirectoryJsonnetTlasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetTlasArray) ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput() ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return i.ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceDirectoryJsonnetTlasArray) ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput) ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutput() ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput) ToApplicationOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnetTlas) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnetTlas) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceDirectoryJsonnetTlas) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput) ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput() ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput) ToApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncSourceDirectoryJsonnetTlas {
		return vs[0].([]ApplicationOperationSyncSourceDirectoryJsonnetTlas)[vs[1].(int)]
	}).(ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput)
}

// Helm holds helm specific options
type ApplicationOperationSyncSourceHelm struct {
	// FileParameters are file parameters to the helm template
	FileParameters []ApplicationOperationSyncSourceHelmFileParameters `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []ApplicationOperationSyncSourceHelmParameters `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// ApplicationOperationSyncSourceHelmInput is an input type that accepts ApplicationOperationSyncSourceHelmArgs and ApplicationOperationSyncSourceHelmOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceHelmInput` via:
//
//          ApplicationOperationSyncSourceHelmArgs{...}
type ApplicationOperationSyncSourceHelmInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceHelmOutput() ApplicationOperationSyncSourceHelmOutput
	ToApplicationOperationSyncSourceHelmOutputWithContext(context.Context) ApplicationOperationSyncSourceHelmOutput
}

// Helm holds helm specific options
type ApplicationOperationSyncSourceHelmArgs struct {
	// FileParameters are file parameters to the helm template
	FileParameters ApplicationOperationSyncSourceHelmFileParametersArrayInput `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters ApplicationOperationSyncSourceHelmParametersArrayInput `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationOperationSyncSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceHelm)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceHelmArgs) ToApplicationOperationSyncSourceHelmOutput() ApplicationOperationSyncSourceHelmOutput {
	return i.ToApplicationOperationSyncSourceHelmOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceHelmArgs) ToApplicationOperationSyncSourceHelmOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmOutput)
}

func (i ApplicationOperationSyncSourceHelmArgs) ToApplicationOperationSyncSourceHelmPtrOutput() ApplicationOperationSyncSourceHelmPtrOutput {
	return i.ToApplicationOperationSyncSourceHelmPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceHelmArgs) ToApplicationOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmOutput).ToApplicationOperationSyncSourceHelmPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourceHelmPtrInput is an input type that accepts ApplicationOperationSyncSourceHelmArgs, ApplicationOperationSyncSourceHelmPtr and ApplicationOperationSyncSourceHelmPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceHelmPtrInput` via:
//
//          ApplicationOperationSyncSourceHelmArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourceHelmPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceHelmPtrOutput() ApplicationOperationSyncSourceHelmPtrOutput
	ToApplicationOperationSyncSourceHelmPtrOutputWithContext(context.Context) ApplicationOperationSyncSourceHelmPtrOutput
}

type applicationOperationSyncSourceHelmPtrType ApplicationOperationSyncSourceHelmArgs

func ApplicationOperationSyncSourceHelmPtr(v *ApplicationOperationSyncSourceHelmArgs) ApplicationOperationSyncSourceHelmPtrInput {
	return (*applicationOperationSyncSourceHelmPtrType)(v)
}

func (*applicationOperationSyncSourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceHelm)(nil)).Elem()
}

func (i *applicationOperationSyncSourceHelmPtrType) ToApplicationOperationSyncSourceHelmPtrOutput() ApplicationOperationSyncSourceHelmPtrOutput {
	return i.ToApplicationOperationSyncSourceHelmPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourceHelmPtrType) ToApplicationOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmPtrOutput)
}

// Helm holds helm specific options
type ApplicationOperationSyncSourceHelmOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceHelm)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceHelmOutput) ToApplicationOperationSyncSourceHelmOutput() ApplicationOperationSyncSourceHelmOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmOutput) ToApplicationOperationSyncSourceHelmOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmOutput) ToApplicationOperationSyncSourceHelmPtrOutput() ApplicationOperationSyncSourceHelmPtrOutput {
	return o.ToApplicationOperationSyncSourceHelmPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourceHelmOutput) ToApplicationOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) *ApplicationOperationSyncSourceHelm {
		return &v
	}).(ApplicationOperationSyncSourceHelmPtrOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationOperationSyncSourceHelmOutput) FileParameters() ApplicationOperationSyncSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) []ApplicationOperationSyncSourceHelmFileParameters {
		return v.FileParameters
	}).(ApplicationOperationSyncSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationOperationSyncSourceHelmOutput) Parameters() ApplicationOperationSyncSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) []ApplicationOperationSyncSourceHelmParameters {
		return v.Parameters
	}).(ApplicationOperationSyncSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationOperationSyncSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationOperationSyncSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationOperationSyncSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationOperationSyncSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncSourceHelmPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceHelm)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceHelmPtrOutput) ToApplicationOperationSyncSourceHelmPtrOutput() ApplicationOperationSyncSourceHelmPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmPtrOutput) ToApplicationOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmPtrOutput) Elem() ApplicationOperationSyncSourceHelmOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) ApplicationOperationSyncSourceHelm { return *v }).(ApplicationOperationSyncSourceHelmOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationOperationSyncSourceHelmPtrOutput) FileParameters() ApplicationOperationSyncSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) []ApplicationOperationSyncSourceHelmFileParameters {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(ApplicationOperationSyncSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationOperationSyncSourceHelmPtrOutput) Parameters() ApplicationOperationSyncSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) []ApplicationOperationSyncSourceHelmParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationOperationSyncSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationOperationSyncSourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationOperationSyncSourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationOperationSyncSourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationOperationSyncSourceHelmPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationOperationSyncSourceHelmFileParameters struct {
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `pulumi:"path"`
}

// ApplicationOperationSyncSourceHelmFileParametersInput is an input type that accepts ApplicationOperationSyncSourceHelmFileParametersArgs and ApplicationOperationSyncSourceHelmFileParametersOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceHelmFileParametersInput` via:
//
//          ApplicationOperationSyncSourceHelmFileParametersArgs{...}
type ApplicationOperationSyncSourceHelmFileParametersInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceHelmFileParametersOutput() ApplicationOperationSyncSourceHelmFileParametersOutput
	ToApplicationOperationSyncSourceHelmFileParametersOutputWithContext(context.Context) ApplicationOperationSyncSourceHelmFileParametersOutput
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationOperationSyncSourceHelmFileParametersArgs struct {
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApplicationOperationSyncSourceHelmFileParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceHelmFileParametersArgs) ToApplicationOperationSyncSourceHelmFileParametersOutput() ApplicationOperationSyncSourceHelmFileParametersOutput {
	return i.ToApplicationOperationSyncSourceHelmFileParametersOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceHelmFileParametersArgs) ToApplicationOperationSyncSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmFileParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmFileParametersOutput)
}

// ApplicationOperationSyncSourceHelmFileParametersArrayInput is an input type that accepts ApplicationOperationSyncSourceHelmFileParametersArray and ApplicationOperationSyncSourceHelmFileParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceHelmFileParametersArrayInput` via:
//
//          ApplicationOperationSyncSourceHelmFileParametersArray{ ApplicationOperationSyncSourceHelmFileParametersArgs{...} }
type ApplicationOperationSyncSourceHelmFileParametersArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceHelmFileParametersArrayOutput() ApplicationOperationSyncSourceHelmFileParametersArrayOutput
	ToApplicationOperationSyncSourceHelmFileParametersArrayOutputWithContext(context.Context) ApplicationOperationSyncSourceHelmFileParametersArrayOutput
}

type ApplicationOperationSyncSourceHelmFileParametersArray []ApplicationOperationSyncSourceHelmFileParametersInput

func (ApplicationOperationSyncSourceHelmFileParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceHelmFileParametersArray) ToApplicationOperationSyncSourceHelmFileParametersArrayOutput() ApplicationOperationSyncSourceHelmFileParametersArrayOutput {
	return i.ToApplicationOperationSyncSourceHelmFileParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceHelmFileParametersArray) ToApplicationOperationSyncSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmFileParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmFileParametersArrayOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationOperationSyncSourceHelmFileParametersOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceHelmFileParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceHelmFileParametersOutput) ToApplicationOperationSyncSourceHelmFileParametersOutput() ApplicationOperationSyncSourceHelmFileParametersOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmFileParametersOutput) ToApplicationOperationSyncSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmFileParametersOutput {
	return o
}

// Name is the name of the Helm parameter
func (o ApplicationOperationSyncSourceHelmFileParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelmFileParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the file containing the values for the Helm parameter
func (o ApplicationOperationSyncSourceHelmFileParametersOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelmFileParameters) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncSourceHelmFileParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceHelmFileParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceHelmFileParametersArrayOutput) ToApplicationOperationSyncSourceHelmFileParametersArrayOutput() ApplicationOperationSyncSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmFileParametersArrayOutput) ToApplicationOperationSyncSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmFileParametersArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncSourceHelmFileParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncSourceHelmFileParameters {
		return vs[0].([]ApplicationOperationSyncSourceHelmFileParameters)[vs[1].(int)]
	}).(ApplicationOperationSyncSourceHelmFileParametersOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationOperationSyncSourceHelmParameters struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value *string `pulumi:"value"`
}

// ApplicationOperationSyncSourceHelmParametersInput is an input type that accepts ApplicationOperationSyncSourceHelmParametersArgs and ApplicationOperationSyncSourceHelmParametersOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceHelmParametersInput` via:
//
//          ApplicationOperationSyncSourceHelmParametersArgs{...}
type ApplicationOperationSyncSourceHelmParametersInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceHelmParametersOutput() ApplicationOperationSyncSourceHelmParametersOutput
	ToApplicationOperationSyncSourceHelmParametersOutputWithContext(context.Context) ApplicationOperationSyncSourceHelmParametersOutput
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationOperationSyncSourceHelmParametersArgs struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationOperationSyncSourceHelmParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceHelmParametersArgs) ToApplicationOperationSyncSourceHelmParametersOutput() ApplicationOperationSyncSourceHelmParametersOutput {
	return i.ToApplicationOperationSyncSourceHelmParametersOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceHelmParametersArgs) ToApplicationOperationSyncSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmParametersOutput)
}

// ApplicationOperationSyncSourceHelmParametersArrayInput is an input type that accepts ApplicationOperationSyncSourceHelmParametersArray and ApplicationOperationSyncSourceHelmParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceHelmParametersArrayInput` via:
//
//          ApplicationOperationSyncSourceHelmParametersArray{ ApplicationOperationSyncSourceHelmParametersArgs{...} }
type ApplicationOperationSyncSourceHelmParametersArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceHelmParametersArrayOutput() ApplicationOperationSyncSourceHelmParametersArrayOutput
	ToApplicationOperationSyncSourceHelmParametersArrayOutputWithContext(context.Context) ApplicationOperationSyncSourceHelmParametersArrayOutput
}

type ApplicationOperationSyncSourceHelmParametersArray []ApplicationOperationSyncSourceHelmParametersInput

func (ApplicationOperationSyncSourceHelmParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceHelmParametersArray) ToApplicationOperationSyncSourceHelmParametersArrayOutput() ApplicationOperationSyncSourceHelmParametersArrayOutput {
	return i.ToApplicationOperationSyncSourceHelmParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceHelmParametersArray) ToApplicationOperationSyncSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceHelmParametersArrayOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationOperationSyncSourceHelmParametersOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceHelmParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceHelmParametersOutput) ToApplicationOperationSyncSourceHelmParametersOutput() ApplicationOperationSyncSourceHelmParametersOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmParametersOutput) ToApplicationOperationSyncSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmParametersOutput {
	return o
}

// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
func (o ApplicationOperationSyncSourceHelmParametersOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelmParameters) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name is the name of the Helm parameter
func (o ApplicationOperationSyncSourceHelmParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelmParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value for the Helm parameter
func (o ApplicationOperationSyncSourceHelmParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceHelmParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncSourceHelmParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceHelmParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceHelmParametersArrayOutput) ToApplicationOperationSyncSourceHelmParametersArrayOutput() ApplicationOperationSyncSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmParametersArrayOutput) ToApplicationOperationSyncSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceHelmParametersArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncSourceHelmParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncSourceHelmParameters {
		return vs[0].([]ApplicationOperationSyncSourceHelmParameters)[vs[1].(int)]
	}).(ApplicationOperationSyncSourceHelmParametersOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationOperationSyncSourceKsonnet struct {
	// Environment is a ksonnet application environment name
	Environment *string `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters []ApplicationOperationSyncSourceKsonnetParameters `pulumi:"parameters"`
}

// ApplicationOperationSyncSourceKsonnetInput is an input type that accepts ApplicationOperationSyncSourceKsonnetArgs and ApplicationOperationSyncSourceKsonnetOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKsonnetInput` via:
//
//          ApplicationOperationSyncSourceKsonnetArgs{...}
type ApplicationOperationSyncSourceKsonnetInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKsonnetOutput() ApplicationOperationSyncSourceKsonnetOutput
	ToApplicationOperationSyncSourceKsonnetOutputWithContext(context.Context) ApplicationOperationSyncSourceKsonnetOutput
}

// Ksonnet holds ksonnet specific options
type ApplicationOperationSyncSourceKsonnetArgs struct {
	// Environment is a ksonnet application environment name
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters ApplicationOperationSyncSourceKsonnetParametersArrayInput `pulumi:"parameters"`
}

func (ApplicationOperationSyncSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKsonnet)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceKsonnetArgs) ToApplicationOperationSyncSourceKsonnetOutput() ApplicationOperationSyncSourceKsonnetOutput {
	return i.ToApplicationOperationSyncSourceKsonnetOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKsonnetArgs) ToApplicationOperationSyncSourceKsonnetOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKsonnetOutput)
}

func (i ApplicationOperationSyncSourceKsonnetArgs) ToApplicationOperationSyncSourceKsonnetPtrOutput() ApplicationOperationSyncSourceKsonnetPtrOutput {
	return i.ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKsonnetArgs) ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKsonnetOutput).ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourceKsonnetPtrInput is an input type that accepts ApplicationOperationSyncSourceKsonnetArgs, ApplicationOperationSyncSourceKsonnetPtr and ApplicationOperationSyncSourceKsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKsonnetPtrInput` via:
//
//          ApplicationOperationSyncSourceKsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourceKsonnetPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKsonnetPtrOutput() ApplicationOperationSyncSourceKsonnetPtrOutput
	ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(context.Context) ApplicationOperationSyncSourceKsonnetPtrOutput
}

type applicationOperationSyncSourceKsonnetPtrType ApplicationOperationSyncSourceKsonnetArgs

func ApplicationOperationSyncSourceKsonnetPtr(v *ApplicationOperationSyncSourceKsonnetArgs) ApplicationOperationSyncSourceKsonnetPtrInput {
	return (*applicationOperationSyncSourceKsonnetPtrType)(v)
}

func (*applicationOperationSyncSourceKsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceKsonnet)(nil)).Elem()
}

func (i *applicationOperationSyncSourceKsonnetPtrType) ToApplicationOperationSyncSourceKsonnetPtrOutput() ApplicationOperationSyncSourceKsonnetPtrOutput {
	return i.ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourceKsonnetPtrType) ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKsonnetPtrOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationOperationSyncSourceKsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKsonnet)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKsonnetOutput) ToApplicationOperationSyncSourceKsonnetOutput() ApplicationOperationSyncSourceKsonnetOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetOutput) ToApplicationOperationSyncSourceKsonnetOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetOutput) ToApplicationOperationSyncSourceKsonnetPtrOutput() ApplicationOperationSyncSourceKsonnetPtrOutput {
	return o.ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourceKsonnetOutput) ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKsonnet) *ApplicationOperationSyncSourceKsonnet {
		return &v
	}).(ApplicationOperationSyncSourceKsonnetPtrOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationOperationSyncSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationOperationSyncSourceKsonnetOutput) Parameters() ApplicationOperationSyncSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKsonnet) []ApplicationOperationSyncSourceKsonnetParameters {
		return v.Parameters
	}).(ApplicationOperationSyncSourceKsonnetParametersArrayOutput)
}

type ApplicationOperationSyncSourceKsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceKsonnet)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKsonnetPtrOutput) ToApplicationOperationSyncSourceKsonnetPtrOutput() ApplicationOperationSyncSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetPtrOutput) ToApplicationOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetPtrOutput) Elem() ApplicationOperationSyncSourceKsonnetOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKsonnet) ApplicationOperationSyncSourceKsonnet { return *v }).(ApplicationOperationSyncSourceKsonnetOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationOperationSyncSourceKsonnetPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKsonnet) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationOperationSyncSourceKsonnetPtrOutput) Parameters() ApplicationOperationSyncSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKsonnet) []ApplicationOperationSyncSourceKsonnetParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationOperationSyncSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationOperationSyncSourceKsonnetParameters struct {
	Component *string `pulumi:"component"`
	Name      string  `pulumi:"name"`
	Value     string  `pulumi:"value"`
}

// ApplicationOperationSyncSourceKsonnetParametersInput is an input type that accepts ApplicationOperationSyncSourceKsonnetParametersArgs and ApplicationOperationSyncSourceKsonnetParametersOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKsonnetParametersInput` via:
//
//          ApplicationOperationSyncSourceKsonnetParametersArgs{...}
type ApplicationOperationSyncSourceKsonnetParametersInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKsonnetParametersOutput() ApplicationOperationSyncSourceKsonnetParametersOutput
	ToApplicationOperationSyncSourceKsonnetParametersOutputWithContext(context.Context) ApplicationOperationSyncSourceKsonnetParametersOutput
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationOperationSyncSourceKsonnetParametersArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Value     pulumi.StringInput    `pulumi:"value"`
}

func (ApplicationOperationSyncSourceKsonnetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceKsonnetParametersArgs) ToApplicationOperationSyncSourceKsonnetParametersOutput() ApplicationOperationSyncSourceKsonnetParametersOutput {
	return i.ToApplicationOperationSyncSourceKsonnetParametersOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKsonnetParametersArgs) ToApplicationOperationSyncSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKsonnetParametersOutput)
}

// ApplicationOperationSyncSourceKsonnetParametersArrayInput is an input type that accepts ApplicationOperationSyncSourceKsonnetParametersArray and ApplicationOperationSyncSourceKsonnetParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKsonnetParametersArrayInput` via:
//
//          ApplicationOperationSyncSourceKsonnetParametersArray{ ApplicationOperationSyncSourceKsonnetParametersArgs{...} }
type ApplicationOperationSyncSourceKsonnetParametersArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKsonnetParametersArrayOutput() ApplicationOperationSyncSourceKsonnetParametersArrayOutput
	ToApplicationOperationSyncSourceKsonnetParametersArrayOutputWithContext(context.Context) ApplicationOperationSyncSourceKsonnetParametersArrayOutput
}

type ApplicationOperationSyncSourceKsonnetParametersArray []ApplicationOperationSyncSourceKsonnetParametersInput

func (ApplicationOperationSyncSourceKsonnetParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceKsonnetParametersArray) ToApplicationOperationSyncSourceKsonnetParametersArrayOutput() ApplicationOperationSyncSourceKsonnetParametersArrayOutput {
	return i.ToApplicationOperationSyncSourceKsonnetParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKsonnetParametersArray) ToApplicationOperationSyncSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationOperationSyncSourceKsonnetParametersOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKsonnetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKsonnetParametersOutput) ToApplicationOperationSyncSourceKsonnetParametersOutput() ApplicationOperationSyncSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetParametersOutput) ToApplicationOperationSyncSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetParametersOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKsonnetParameters) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ApplicationOperationSyncSourceKsonnetParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKsonnetParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationOperationSyncSourceKsonnetParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKsonnetParameters) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationOperationSyncSourceKsonnetParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKsonnetParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKsonnetParametersArrayOutput) ToApplicationOperationSyncSourceKsonnetParametersArrayOutput() ApplicationOperationSyncSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetParametersArrayOutput) ToApplicationOperationSyncSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourceKsonnetParametersArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncSourceKsonnetParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncSourceKsonnetParameters {
		return vs[0].([]ApplicationOperationSyncSourceKsonnetParameters)[vs[1].(int)]
	}).(ApplicationOperationSyncSourceKsonnetParametersOutput)
}

// Kustomize holds kustomize specific options
type ApplicationOperationSyncSourceKustomize struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images []string `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `pulumi:"version"`
}

// ApplicationOperationSyncSourceKustomizeInput is an input type that accepts ApplicationOperationSyncSourceKustomizeArgs and ApplicationOperationSyncSourceKustomizeOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKustomizeInput` via:
//
//          ApplicationOperationSyncSourceKustomizeArgs{...}
type ApplicationOperationSyncSourceKustomizeInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKustomizeOutput() ApplicationOperationSyncSourceKustomizeOutput
	ToApplicationOperationSyncSourceKustomizeOutputWithContext(context.Context) ApplicationOperationSyncSourceKustomizeOutput
}

// Kustomize holds kustomize specific options
type ApplicationOperationSyncSourceKustomizeArgs struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images pulumi.StringArrayInput `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationOperationSyncSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKustomize)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceKustomizeArgs) ToApplicationOperationSyncSourceKustomizeOutput() ApplicationOperationSyncSourceKustomizeOutput {
	return i.ToApplicationOperationSyncSourceKustomizeOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKustomizeArgs) ToApplicationOperationSyncSourceKustomizeOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKustomizeOutput)
}

func (i ApplicationOperationSyncSourceKustomizeArgs) ToApplicationOperationSyncSourceKustomizePtrOutput() ApplicationOperationSyncSourceKustomizePtrOutput {
	return i.ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKustomizeArgs) ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKustomizeOutput).ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourceKustomizePtrInput is an input type that accepts ApplicationOperationSyncSourceKustomizeArgs, ApplicationOperationSyncSourceKustomizePtr and ApplicationOperationSyncSourceKustomizePtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKustomizePtrInput` via:
//
//          ApplicationOperationSyncSourceKustomizeArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourceKustomizePtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKustomizePtrOutput() ApplicationOperationSyncSourceKustomizePtrOutput
	ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(context.Context) ApplicationOperationSyncSourceKustomizePtrOutput
}

type applicationOperationSyncSourceKustomizePtrType ApplicationOperationSyncSourceKustomizeArgs

func ApplicationOperationSyncSourceKustomizePtr(v *ApplicationOperationSyncSourceKustomizeArgs) ApplicationOperationSyncSourceKustomizePtrInput {
	return (*applicationOperationSyncSourceKustomizePtrType)(v)
}

func (*applicationOperationSyncSourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceKustomize)(nil)).Elem()
}

func (i *applicationOperationSyncSourceKustomizePtrType) ToApplicationOperationSyncSourceKustomizePtrOutput() ApplicationOperationSyncSourceKustomizePtrOutput {
	return i.ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourceKustomizePtrType) ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKustomizePtrOutput)
}

// Kustomize holds kustomize specific options
type ApplicationOperationSyncSourceKustomizeOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKustomize)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKustomizeOutput) ToApplicationOperationSyncSourceKustomizeOutput() ApplicationOperationSyncSourceKustomizeOutput {
	return o
}

func (o ApplicationOperationSyncSourceKustomizeOutput) ToApplicationOperationSyncSourceKustomizeOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizeOutput {
	return o
}

func (o ApplicationOperationSyncSourceKustomizeOutput) ToApplicationOperationSyncSourceKustomizePtrOutput() ApplicationOperationSyncSourceKustomizePtrOutput {
	return o.ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourceKustomizeOutput) ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) *ApplicationOperationSyncSourceKustomize {
		return &v
	}).(ApplicationOperationSyncSourceKustomizePtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationOperationSyncSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) map[string]string { return v.CommonAnnotations }).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationOperationSyncSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationOperationSyncSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationOperationSyncSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationOperationSyncSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationOperationSyncSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncSourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourceKustomize)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKustomizePtrOutput) ToApplicationOperationSyncSourceKustomizePtrOutput() ApplicationOperationSyncSourceKustomizePtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceKustomizePtrOutput) ToApplicationOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizePtrOutput {
	return o
}

func (o ApplicationOperationSyncSourceKustomizePtrOutput) Elem() ApplicationOperationSyncSourceKustomizeOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) ApplicationOperationSyncSourceKustomize { return *v }).(ApplicationOperationSyncSourceKustomizeOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationOperationSyncSourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationOperationSyncSourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationOperationSyncSourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationOperationSyncSourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationOperationSyncSourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationOperationSyncSourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationOperationSyncSourceKustomizeCommonAnnotations struct {
}

// ApplicationOperationSyncSourceKustomizeCommonAnnotationsInput is an input type that accepts ApplicationOperationSyncSourceKustomizeCommonAnnotationsArgs and ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKustomizeCommonAnnotationsInput` via:
//
//          ApplicationOperationSyncSourceKustomizeCommonAnnotationsArgs{...}
type ApplicationOperationSyncSourceKustomizeCommonAnnotationsInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput() ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput
	ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(context.Context) ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationOperationSyncSourceKustomizeCommonAnnotationsArgs struct {
}

func (ApplicationOperationSyncSourceKustomizeCommonAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceKustomizeCommonAnnotationsArgs) ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput() ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return i.ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKustomizeCommonAnnotationsArgs) ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput) ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput() ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return o
}

func (o ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput) ToApplicationOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return o
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationOperationSyncSourceKustomizeCommonLabels struct {
}

// ApplicationOperationSyncSourceKustomizeCommonLabelsInput is an input type that accepts ApplicationOperationSyncSourceKustomizeCommonLabelsArgs and ApplicationOperationSyncSourceKustomizeCommonLabelsOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourceKustomizeCommonLabelsInput` via:
//
//          ApplicationOperationSyncSourceKustomizeCommonLabelsArgs{...}
type ApplicationOperationSyncSourceKustomizeCommonLabelsInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourceKustomizeCommonLabelsOutput() ApplicationOperationSyncSourceKustomizeCommonLabelsOutput
	ToApplicationOperationSyncSourceKustomizeCommonLabelsOutputWithContext(context.Context) ApplicationOperationSyncSourceKustomizeCommonLabelsOutput
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationOperationSyncSourceKustomizeCommonLabelsArgs struct {
}

func (ApplicationOperationSyncSourceKustomizeCommonLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKustomizeCommonLabels)(nil)).Elem()
}

func (i ApplicationOperationSyncSourceKustomizeCommonLabelsArgs) ToApplicationOperationSyncSourceKustomizeCommonLabelsOutput() ApplicationOperationSyncSourceKustomizeCommonLabelsOutput {
	return i.ToApplicationOperationSyncSourceKustomizeCommonLabelsOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourceKustomizeCommonLabelsArgs) ToApplicationOperationSyncSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizeCommonLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourceKustomizeCommonLabelsOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationOperationSyncSourceKustomizeCommonLabelsOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourceKustomizeCommonLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourceKustomizeCommonLabels)(nil)).Elem()
}

func (o ApplicationOperationSyncSourceKustomizeCommonLabelsOutput) ToApplicationOperationSyncSourceKustomizeCommonLabelsOutput() ApplicationOperationSyncSourceKustomizeCommonLabelsOutput {
	return o
}

func (o ApplicationOperationSyncSourceKustomizeCommonLabelsOutput) ToApplicationOperationSyncSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationOperationSyncSourceKustomizeCommonLabelsOutput {
	return o
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationOperationSyncSourcePlugin struct {
	// Env is a list of environment variable entries
	Env  []ApplicationOperationSyncSourcePluginEnv `pulumi:"env"`
	Name *string                                   `pulumi:"name"`
}

// ApplicationOperationSyncSourcePluginInput is an input type that accepts ApplicationOperationSyncSourcePluginArgs and ApplicationOperationSyncSourcePluginOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourcePluginInput` via:
//
//          ApplicationOperationSyncSourcePluginArgs{...}
type ApplicationOperationSyncSourcePluginInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourcePluginOutput() ApplicationOperationSyncSourcePluginOutput
	ToApplicationOperationSyncSourcePluginOutputWithContext(context.Context) ApplicationOperationSyncSourcePluginOutput
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationOperationSyncSourcePluginArgs struct {
	// Env is a list of environment variable entries
	Env  ApplicationOperationSyncSourcePluginEnvArrayInput `pulumi:"env"`
	Name pulumi.StringPtrInput                             `pulumi:"name"`
}

func (ApplicationOperationSyncSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourcePlugin)(nil)).Elem()
}

func (i ApplicationOperationSyncSourcePluginArgs) ToApplicationOperationSyncSourcePluginOutput() ApplicationOperationSyncSourcePluginOutput {
	return i.ToApplicationOperationSyncSourcePluginOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourcePluginArgs) ToApplicationOperationSyncSourcePluginOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourcePluginOutput)
}

func (i ApplicationOperationSyncSourcePluginArgs) ToApplicationOperationSyncSourcePluginPtrOutput() ApplicationOperationSyncSourcePluginPtrOutput {
	return i.ToApplicationOperationSyncSourcePluginPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourcePluginArgs) ToApplicationOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourcePluginOutput).ToApplicationOperationSyncSourcePluginPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSourcePluginPtrInput is an input type that accepts ApplicationOperationSyncSourcePluginArgs, ApplicationOperationSyncSourcePluginPtr and ApplicationOperationSyncSourcePluginPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourcePluginPtrInput` via:
//
//          ApplicationOperationSyncSourcePluginArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSourcePluginPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourcePluginPtrOutput() ApplicationOperationSyncSourcePluginPtrOutput
	ToApplicationOperationSyncSourcePluginPtrOutputWithContext(context.Context) ApplicationOperationSyncSourcePluginPtrOutput
}

type applicationOperationSyncSourcePluginPtrType ApplicationOperationSyncSourcePluginArgs

func ApplicationOperationSyncSourcePluginPtr(v *ApplicationOperationSyncSourcePluginArgs) ApplicationOperationSyncSourcePluginPtrInput {
	return (*applicationOperationSyncSourcePluginPtrType)(v)
}

func (*applicationOperationSyncSourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourcePlugin)(nil)).Elem()
}

func (i *applicationOperationSyncSourcePluginPtrType) ToApplicationOperationSyncSourcePluginPtrOutput() ApplicationOperationSyncSourcePluginPtrOutput {
	return i.ToApplicationOperationSyncSourcePluginPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSourcePluginPtrType) ToApplicationOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourcePluginPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationOperationSyncSourcePluginOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourcePlugin)(nil)).Elem()
}

func (o ApplicationOperationSyncSourcePluginOutput) ToApplicationOperationSyncSourcePluginOutput() ApplicationOperationSyncSourcePluginOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginOutput) ToApplicationOperationSyncSourcePluginOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginOutput) ToApplicationOperationSyncSourcePluginPtrOutput() ApplicationOperationSyncSourcePluginPtrOutput {
	return o.ToApplicationOperationSyncSourcePluginPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSourcePluginOutput) ToApplicationOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourcePlugin) *ApplicationOperationSyncSourcePlugin {
		return &v
	}).(ApplicationOperationSyncSourcePluginPtrOutput)
}

// Env is a list of environment variable entries
func (o ApplicationOperationSyncSourcePluginOutput) Env() ApplicationOperationSyncSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourcePlugin) []ApplicationOperationSyncSourcePluginEnv { return v.Env }).(ApplicationOperationSyncSourcePluginEnvArrayOutput)
}

func (o ApplicationOperationSyncSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationOperationSyncSourcePluginPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSourcePlugin)(nil)).Elem()
}

func (o ApplicationOperationSyncSourcePluginPtrOutput) ToApplicationOperationSyncSourcePluginPtrOutput() ApplicationOperationSyncSourcePluginPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginPtrOutput) ToApplicationOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginPtrOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginPtrOutput) Elem() ApplicationOperationSyncSourcePluginOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourcePlugin) ApplicationOperationSyncSourcePlugin { return *v }).(ApplicationOperationSyncSourcePluginOutput)
}

// Env is a list of environment variable entries
func (o ApplicationOperationSyncSourcePluginPtrOutput) Env() ApplicationOperationSyncSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourcePlugin) []ApplicationOperationSyncSourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(ApplicationOperationSyncSourcePluginEnvArrayOutput)
}

func (o ApplicationOperationSyncSourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationOperationSyncSourcePluginEnv struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name string `pulumi:"name"`
	// Value is the value of the variable
	Value string `pulumi:"value"`
}

// ApplicationOperationSyncSourcePluginEnvInput is an input type that accepts ApplicationOperationSyncSourcePluginEnvArgs and ApplicationOperationSyncSourcePluginEnvOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourcePluginEnvInput` via:
//
//          ApplicationOperationSyncSourcePluginEnvArgs{...}
type ApplicationOperationSyncSourcePluginEnvInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourcePluginEnvOutput() ApplicationOperationSyncSourcePluginEnvOutput
	ToApplicationOperationSyncSourcePluginEnvOutputWithContext(context.Context) ApplicationOperationSyncSourcePluginEnvOutput
}

// EnvEntry represents an entry in the application's environment
type ApplicationOperationSyncSourcePluginEnvArgs struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name pulumi.StringInput `pulumi:"name"`
	// Value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationOperationSyncSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationOperationSyncSourcePluginEnvArgs) ToApplicationOperationSyncSourcePluginEnvOutput() ApplicationOperationSyncSourcePluginEnvOutput {
	return i.ToApplicationOperationSyncSourcePluginEnvOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourcePluginEnvArgs) ToApplicationOperationSyncSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourcePluginEnvOutput)
}

// ApplicationOperationSyncSourcePluginEnvArrayInput is an input type that accepts ApplicationOperationSyncSourcePluginEnvArray and ApplicationOperationSyncSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSourcePluginEnvArrayInput` via:
//
//          ApplicationOperationSyncSourcePluginEnvArray{ ApplicationOperationSyncSourcePluginEnvArgs{...} }
type ApplicationOperationSyncSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToApplicationOperationSyncSourcePluginEnvArrayOutput() ApplicationOperationSyncSourcePluginEnvArrayOutput
	ToApplicationOperationSyncSourcePluginEnvArrayOutputWithContext(context.Context) ApplicationOperationSyncSourcePluginEnvArrayOutput
}

type ApplicationOperationSyncSourcePluginEnvArray []ApplicationOperationSyncSourcePluginEnvInput

func (ApplicationOperationSyncSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationOperationSyncSourcePluginEnvArray) ToApplicationOperationSyncSourcePluginEnvArrayOutput() ApplicationOperationSyncSourcePluginEnvArrayOutput {
	return i.ToApplicationOperationSyncSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSourcePluginEnvArray) ToApplicationOperationSyncSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSourcePluginEnvArrayOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationOperationSyncSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationOperationSyncSourcePluginEnvOutput) ToApplicationOperationSyncSourcePluginEnvOutput() ApplicationOperationSyncSourcePluginEnvOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginEnvOutput) ToApplicationOperationSyncSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginEnvOutput {
	return o
}

// Name is the name of the variable, usually expressed in uppercase
func (o ApplicationOperationSyncSourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value is the value of the variable
func (o ApplicationOperationSyncSourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationOperationSyncSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationOperationSyncSourcePluginEnvArrayOutput) ToApplicationOperationSyncSourcePluginEnvArrayOutput() ApplicationOperationSyncSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginEnvArrayOutput) ToApplicationOperationSyncSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationOperationSyncSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationOperationSyncSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) ApplicationOperationSyncSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOperationSyncSourcePluginEnv {
		return vs[0].([]ApplicationOperationSyncSourcePluginEnv)[vs[1].(int)]
	}).(ApplicationOperationSyncSourcePluginEnvOutput)
}

// SyncStrategy describes how to perform the sync
type ApplicationOperationSyncSyncStrategy struct {
	// Apply will perform a `kubectl apply` to perform the sync.
	Apply *ApplicationOperationSyncSyncStrategyApply `pulumi:"apply"`
	// Hook will submit any referenced resources to perform the sync. This is the default strategy
	Hook *ApplicationOperationSyncSyncStrategyHook `pulumi:"hook"`
}

// ApplicationOperationSyncSyncStrategyInput is an input type that accepts ApplicationOperationSyncSyncStrategyArgs and ApplicationOperationSyncSyncStrategyOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSyncStrategyInput` via:
//
//          ApplicationOperationSyncSyncStrategyArgs{...}
type ApplicationOperationSyncSyncStrategyInput interface {
	pulumi.Input

	ToApplicationOperationSyncSyncStrategyOutput() ApplicationOperationSyncSyncStrategyOutput
	ToApplicationOperationSyncSyncStrategyOutputWithContext(context.Context) ApplicationOperationSyncSyncStrategyOutput
}

// SyncStrategy describes how to perform the sync
type ApplicationOperationSyncSyncStrategyArgs struct {
	// Apply will perform a `kubectl apply` to perform the sync.
	Apply ApplicationOperationSyncSyncStrategyApplyPtrInput `pulumi:"apply"`
	// Hook will submit any referenced resources to perform the sync. This is the default strategy
	Hook ApplicationOperationSyncSyncStrategyHookPtrInput `pulumi:"hook"`
}

func (ApplicationOperationSyncSyncStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSyncStrategy)(nil)).Elem()
}

func (i ApplicationOperationSyncSyncStrategyArgs) ToApplicationOperationSyncSyncStrategyOutput() ApplicationOperationSyncSyncStrategyOutput {
	return i.ToApplicationOperationSyncSyncStrategyOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSyncStrategyArgs) ToApplicationOperationSyncSyncStrategyOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyOutput)
}

func (i ApplicationOperationSyncSyncStrategyArgs) ToApplicationOperationSyncSyncStrategyPtrOutput() ApplicationOperationSyncSyncStrategyPtrOutput {
	return i.ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSyncStrategyArgs) ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyOutput).ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSyncStrategyPtrInput is an input type that accepts ApplicationOperationSyncSyncStrategyArgs, ApplicationOperationSyncSyncStrategyPtr and ApplicationOperationSyncSyncStrategyPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSyncStrategyPtrInput` via:
//
//          ApplicationOperationSyncSyncStrategyArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSyncStrategyPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSyncStrategyPtrOutput() ApplicationOperationSyncSyncStrategyPtrOutput
	ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(context.Context) ApplicationOperationSyncSyncStrategyPtrOutput
}

type applicationOperationSyncSyncStrategyPtrType ApplicationOperationSyncSyncStrategyArgs

func ApplicationOperationSyncSyncStrategyPtr(v *ApplicationOperationSyncSyncStrategyArgs) ApplicationOperationSyncSyncStrategyPtrInput {
	return (*applicationOperationSyncSyncStrategyPtrType)(v)
}

func (*applicationOperationSyncSyncStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSyncStrategy)(nil)).Elem()
}

func (i *applicationOperationSyncSyncStrategyPtrType) ToApplicationOperationSyncSyncStrategyPtrOutput() ApplicationOperationSyncSyncStrategyPtrOutput {
	return i.ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSyncStrategyPtrType) ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyPtrOutput)
}

// SyncStrategy describes how to perform the sync
type ApplicationOperationSyncSyncStrategyOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSyncStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSyncStrategy)(nil)).Elem()
}

func (o ApplicationOperationSyncSyncStrategyOutput) ToApplicationOperationSyncSyncStrategyOutput() ApplicationOperationSyncSyncStrategyOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyOutput) ToApplicationOperationSyncSyncStrategyOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyOutput) ToApplicationOperationSyncSyncStrategyPtrOutput() ApplicationOperationSyncSyncStrategyPtrOutput {
	return o.ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSyncStrategyOutput) ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategy) *ApplicationOperationSyncSyncStrategy {
		return &v
	}).(ApplicationOperationSyncSyncStrategyPtrOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
func (o ApplicationOperationSyncSyncStrategyOutput) Apply() ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategy) *ApplicationOperationSyncSyncStrategyApply {
		return v.Apply
	}).(ApplicationOperationSyncSyncStrategyApplyPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
func (o ApplicationOperationSyncSyncStrategyOutput) Hook() ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategy) *ApplicationOperationSyncSyncStrategyHook { return v.Hook }).(ApplicationOperationSyncSyncStrategyHookPtrOutput)
}

type ApplicationOperationSyncSyncStrategyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSyncStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSyncStrategy)(nil)).Elem()
}

func (o ApplicationOperationSyncSyncStrategyPtrOutput) ToApplicationOperationSyncSyncStrategyPtrOutput() ApplicationOperationSyncSyncStrategyPtrOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyPtrOutput) ToApplicationOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyPtrOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyPtrOutput) Elem() ApplicationOperationSyncSyncStrategyOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategy) ApplicationOperationSyncSyncStrategy { return *v }).(ApplicationOperationSyncSyncStrategyOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
func (o ApplicationOperationSyncSyncStrategyPtrOutput) Apply() ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategy) *ApplicationOperationSyncSyncStrategyApply {
		if v == nil {
			return nil
		}
		return v.Apply
	}).(ApplicationOperationSyncSyncStrategyApplyPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
func (o ApplicationOperationSyncSyncStrategyPtrOutput) Hook() ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategy) *ApplicationOperationSyncSyncStrategyHook {
		if v == nil {
			return nil
		}
		return v.Hook
	}).(ApplicationOperationSyncSyncStrategyHookPtrOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
type ApplicationOperationSyncSyncStrategyApply struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force *bool `pulumi:"force"`
}

// ApplicationOperationSyncSyncStrategyApplyInput is an input type that accepts ApplicationOperationSyncSyncStrategyApplyArgs and ApplicationOperationSyncSyncStrategyApplyOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSyncStrategyApplyInput` via:
//
//          ApplicationOperationSyncSyncStrategyApplyArgs{...}
type ApplicationOperationSyncSyncStrategyApplyInput interface {
	pulumi.Input

	ToApplicationOperationSyncSyncStrategyApplyOutput() ApplicationOperationSyncSyncStrategyApplyOutput
	ToApplicationOperationSyncSyncStrategyApplyOutputWithContext(context.Context) ApplicationOperationSyncSyncStrategyApplyOutput
}

// Apply will perform a `kubectl apply` to perform the sync.
type ApplicationOperationSyncSyncStrategyApplyArgs struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force pulumi.BoolPtrInput `pulumi:"force"`
}

func (ApplicationOperationSyncSyncStrategyApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (i ApplicationOperationSyncSyncStrategyApplyArgs) ToApplicationOperationSyncSyncStrategyApplyOutput() ApplicationOperationSyncSyncStrategyApplyOutput {
	return i.ToApplicationOperationSyncSyncStrategyApplyOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSyncStrategyApplyArgs) ToApplicationOperationSyncSyncStrategyApplyOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyApplyOutput)
}

func (i ApplicationOperationSyncSyncStrategyApplyArgs) ToApplicationOperationSyncSyncStrategyApplyPtrOutput() ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return i.ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSyncStrategyApplyArgs) ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyApplyOutput).ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSyncStrategyApplyPtrInput is an input type that accepts ApplicationOperationSyncSyncStrategyApplyArgs, ApplicationOperationSyncSyncStrategyApplyPtr and ApplicationOperationSyncSyncStrategyApplyPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSyncStrategyApplyPtrInput` via:
//
//          ApplicationOperationSyncSyncStrategyApplyArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSyncStrategyApplyPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSyncStrategyApplyPtrOutput() ApplicationOperationSyncSyncStrategyApplyPtrOutput
	ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Context) ApplicationOperationSyncSyncStrategyApplyPtrOutput
}

type applicationOperationSyncSyncStrategyApplyPtrType ApplicationOperationSyncSyncStrategyApplyArgs

func ApplicationOperationSyncSyncStrategyApplyPtr(v *ApplicationOperationSyncSyncStrategyApplyArgs) ApplicationOperationSyncSyncStrategyApplyPtrInput {
	return (*applicationOperationSyncSyncStrategyApplyPtrType)(v)
}

func (*applicationOperationSyncSyncStrategyApplyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (i *applicationOperationSyncSyncStrategyApplyPtrType) ToApplicationOperationSyncSyncStrategyApplyPtrOutput() ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return i.ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSyncStrategyApplyPtrType) ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyApplyPtrOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
type ApplicationOperationSyncSyncStrategyApplyOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSyncStrategyApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (o ApplicationOperationSyncSyncStrategyApplyOutput) ToApplicationOperationSyncSyncStrategyApplyOutput() ApplicationOperationSyncSyncStrategyApplyOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyApplyOutput) ToApplicationOperationSyncSyncStrategyApplyOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyApplyOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyApplyOutput) ToApplicationOperationSyncSyncStrategyApplyPtrOutput() ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return o.ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSyncStrategyApplyOutput) ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategyApply) *ApplicationOperationSyncSyncStrategyApply {
		return &v
	}).(ApplicationOperationSyncSyncStrategyApplyPtrOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationOperationSyncSyncStrategyApplyOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategyApply) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

type ApplicationOperationSyncSyncStrategyApplyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSyncStrategyApplyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (o ApplicationOperationSyncSyncStrategyApplyPtrOutput) ToApplicationOperationSyncSyncStrategyApplyPtrOutput() ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyApplyPtrOutput) ToApplicationOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyApplyPtrOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyApplyPtrOutput) Elem() ApplicationOperationSyncSyncStrategyApplyOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategyApply) ApplicationOperationSyncSyncStrategyApply {
		return *v
	}).(ApplicationOperationSyncSyncStrategyApplyOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationOperationSyncSyncStrategyApplyPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategyApply) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
type ApplicationOperationSyncSyncStrategyHook struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force *bool `pulumi:"force"`
}

// ApplicationOperationSyncSyncStrategyHookInput is an input type that accepts ApplicationOperationSyncSyncStrategyHookArgs and ApplicationOperationSyncSyncStrategyHookOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSyncStrategyHookInput` via:
//
//          ApplicationOperationSyncSyncStrategyHookArgs{...}
type ApplicationOperationSyncSyncStrategyHookInput interface {
	pulumi.Input

	ToApplicationOperationSyncSyncStrategyHookOutput() ApplicationOperationSyncSyncStrategyHookOutput
	ToApplicationOperationSyncSyncStrategyHookOutputWithContext(context.Context) ApplicationOperationSyncSyncStrategyHookOutput
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
type ApplicationOperationSyncSyncStrategyHookArgs struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force pulumi.BoolPtrInput `pulumi:"force"`
}

func (ApplicationOperationSyncSyncStrategyHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (i ApplicationOperationSyncSyncStrategyHookArgs) ToApplicationOperationSyncSyncStrategyHookOutput() ApplicationOperationSyncSyncStrategyHookOutput {
	return i.ToApplicationOperationSyncSyncStrategyHookOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSyncStrategyHookArgs) ToApplicationOperationSyncSyncStrategyHookOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyHookOutput)
}

func (i ApplicationOperationSyncSyncStrategyHookArgs) ToApplicationOperationSyncSyncStrategyHookPtrOutput() ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return i.ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(context.Background())
}

func (i ApplicationOperationSyncSyncStrategyHookArgs) ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyHookOutput).ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(ctx)
}

// ApplicationOperationSyncSyncStrategyHookPtrInput is an input type that accepts ApplicationOperationSyncSyncStrategyHookArgs, ApplicationOperationSyncSyncStrategyHookPtr and ApplicationOperationSyncSyncStrategyHookPtrOutput values.
// You can construct a concrete instance of `ApplicationOperationSyncSyncStrategyHookPtrInput` via:
//
//          ApplicationOperationSyncSyncStrategyHookArgs{...}
//
//  or:
//
//          nil
type ApplicationOperationSyncSyncStrategyHookPtrInput interface {
	pulumi.Input

	ToApplicationOperationSyncSyncStrategyHookPtrOutput() ApplicationOperationSyncSyncStrategyHookPtrOutput
	ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(context.Context) ApplicationOperationSyncSyncStrategyHookPtrOutput
}

type applicationOperationSyncSyncStrategyHookPtrType ApplicationOperationSyncSyncStrategyHookArgs

func ApplicationOperationSyncSyncStrategyHookPtr(v *ApplicationOperationSyncSyncStrategyHookArgs) ApplicationOperationSyncSyncStrategyHookPtrInput {
	return (*applicationOperationSyncSyncStrategyHookPtrType)(v)
}

func (*applicationOperationSyncSyncStrategyHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (i *applicationOperationSyncSyncStrategyHookPtrType) ToApplicationOperationSyncSyncStrategyHookPtrOutput() ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return i.ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(context.Background())
}

func (i *applicationOperationSyncSyncStrategyHookPtrType) ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOperationSyncSyncStrategyHookPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
type ApplicationOperationSyncSyncStrategyHookOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSyncStrategyHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (o ApplicationOperationSyncSyncStrategyHookOutput) ToApplicationOperationSyncSyncStrategyHookOutput() ApplicationOperationSyncSyncStrategyHookOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyHookOutput) ToApplicationOperationSyncSyncStrategyHookOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyHookOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyHookOutput) ToApplicationOperationSyncSyncStrategyHookPtrOutput() ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return o.ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(context.Background())
}

func (o ApplicationOperationSyncSyncStrategyHookOutput) ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategyHook) *ApplicationOperationSyncSyncStrategyHook {
		return &v
	}).(ApplicationOperationSyncSyncStrategyHookPtrOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationOperationSyncSyncStrategyHookOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOperationSyncSyncStrategyHook) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

type ApplicationOperationSyncSyncStrategyHookPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOperationSyncSyncStrategyHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (o ApplicationOperationSyncSyncStrategyHookPtrOutput) ToApplicationOperationSyncSyncStrategyHookPtrOutput() ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyHookPtrOutput) ToApplicationOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationOperationSyncSyncStrategyHookPtrOutput {
	return o
}

func (o ApplicationOperationSyncSyncStrategyHookPtrOutput) Elem() ApplicationOperationSyncSyncStrategyHookOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategyHook) ApplicationOperationSyncSyncStrategyHook { return *v }).(ApplicationOperationSyncSyncStrategyHookOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationOperationSyncSyncStrategyHookPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationOperationSyncSyncStrategyHook) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
type ApplicationSpec struct {
	// Destination is a reference to the target Kubernetes server and namespace
	Destination ApplicationSpecDestination `pulumi:"destination"`
	// IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
	IgnoreDifferences []ApplicationSpecIgnoreDifferences `pulumi:"ignoreDifferences"`
	// Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
	Info []ApplicationSpecInfo `pulumi:"info"`
	// Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
	Project string `pulumi:"project"`
	// RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// Source is a reference to the location of the application's manifests or chart
	Source ApplicationSpecSource `pulumi:"source"`
	// SyncPolicy controls when and how a sync will be performed
	SyncPolicy *ApplicationSpecSyncPolicy `pulumi:"syncPolicy"`
}

// ApplicationSpecInput is an input type that accepts ApplicationSpecArgs and ApplicationSpecOutput values.
// You can construct a concrete instance of `ApplicationSpecInput` via:
//
//          ApplicationSpecArgs{...}
type ApplicationSpecInput interface {
	pulumi.Input

	ToApplicationSpecOutput() ApplicationSpecOutput
	ToApplicationSpecOutputWithContext(context.Context) ApplicationSpecOutput
}

// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
type ApplicationSpecArgs struct {
	// Destination is a reference to the target Kubernetes server and namespace
	Destination ApplicationSpecDestinationInput `pulumi:"destination"`
	// IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
	IgnoreDifferences ApplicationSpecIgnoreDifferencesArrayInput `pulumi:"ignoreDifferences"`
	// Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
	Info ApplicationSpecInfoArrayInput `pulumi:"info"`
	// Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
	Project pulumi.StringInput `pulumi:"project"`
	// RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// Source is a reference to the location of the application's manifests or chart
	Source ApplicationSpecSourceInput `pulumi:"source"`
	// SyncPolicy controls when and how a sync will be performed
	SyncPolicy ApplicationSpecSyncPolicyPtrInput `pulumi:"syncPolicy"`
}

func (ApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpec)(nil)).Elem()
}

func (i ApplicationSpecArgs) ToApplicationSpecOutput() ApplicationSpecOutput {
	return i.ToApplicationSpecOutputWithContext(context.Background())
}

func (i ApplicationSpecArgs) ToApplicationSpecOutputWithContext(ctx context.Context) ApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecOutput)
}

func (i ApplicationSpecArgs) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return i.ToApplicationSpecPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecArgs) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecOutput).ToApplicationSpecPtrOutputWithContext(ctx)
}

// ApplicationSpecPtrInput is an input type that accepts ApplicationSpecArgs, ApplicationSpecPtr and ApplicationSpecPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecPtrInput` via:
//
//          ApplicationSpecArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecPtrInput interface {
	pulumi.Input

	ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput
	ToApplicationSpecPtrOutputWithContext(context.Context) ApplicationSpecPtrOutput
}

type applicationSpecPtrType ApplicationSpecArgs

func ApplicationSpecPtr(v *ApplicationSpecArgs) ApplicationSpecPtrInput {
	return (*applicationSpecPtrType)(v)
}

func (*applicationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpec)(nil)).Elem()
}

func (i *applicationSpecPtrType) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return i.ToApplicationSpecPtrOutputWithContext(context.Background())
}

func (i *applicationSpecPtrType) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecPtrOutput)
}

// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
type ApplicationSpecOutput struct{ *pulumi.OutputState }

func (ApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpec)(nil)).Elem()
}

func (o ApplicationSpecOutput) ToApplicationSpecOutput() ApplicationSpecOutput {
	return o
}

func (o ApplicationSpecOutput) ToApplicationSpecOutputWithContext(ctx context.Context) ApplicationSpecOutput {
	return o
}

func (o ApplicationSpecOutput) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return o.ToApplicationSpecPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecOutput) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return o.ApplyT(func(v ApplicationSpec) *ApplicationSpec {
		return &v
	}).(ApplicationSpecPtrOutput)
}

// Destination is a reference to the target Kubernetes server and namespace
func (o ApplicationSpecOutput) Destination() ApplicationSpecDestinationOutput {
	return o.ApplyT(func(v ApplicationSpec) ApplicationSpecDestination { return v.Destination }).(ApplicationSpecDestinationOutput)
}

// IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
func (o ApplicationSpecOutput) IgnoreDifferences() ApplicationSpecIgnoreDifferencesArrayOutput {
	return o.ApplyT(func(v ApplicationSpec) []ApplicationSpecIgnoreDifferences { return v.IgnoreDifferences }).(ApplicationSpecIgnoreDifferencesArrayOutput)
}

// Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
func (o ApplicationSpecOutput) Info() ApplicationSpecInfoArrayOutput {
	return o.ApplyT(func(v ApplicationSpec) []ApplicationSpecInfo { return v.Info }).(ApplicationSpecInfoArrayOutput)
}

// Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
func (o ApplicationSpecOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpec) string { return v.Project }).(pulumi.StringOutput)
}

// RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
func (o ApplicationSpecOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpec) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// Source is a reference to the location of the application's manifests or chart
func (o ApplicationSpecOutput) Source() ApplicationSpecSourceOutput {
	return o.ApplyT(func(v ApplicationSpec) ApplicationSpecSource { return v.Source }).(ApplicationSpecSourceOutput)
}

// SyncPolicy controls when and how a sync will be performed
func (o ApplicationSpecOutput) SyncPolicy() ApplicationSpecSyncPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationSpec) *ApplicationSpecSyncPolicy { return v.SyncPolicy }).(ApplicationSpecSyncPolicyPtrOutput)
}

type ApplicationSpecPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpec)(nil)).Elem()
}

func (o ApplicationSpecPtrOutput) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return o
}

func (o ApplicationSpecPtrOutput) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return o
}

func (o ApplicationSpecPtrOutput) Elem() ApplicationSpecOutput {
	return o.ApplyT(func(v *ApplicationSpec) ApplicationSpec { return *v }).(ApplicationSpecOutput)
}

// Destination is a reference to the target Kubernetes server and namespace
func (o ApplicationSpecPtrOutput) Destination() ApplicationSpecDestinationPtrOutput {
	return o.ApplyT(func(v *ApplicationSpec) *ApplicationSpecDestination {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(ApplicationSpecDestinationPtrOutput)
}

// IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
func (o ApplicationSpecPtrOutput) IgnoreDifferences() ApplicationSpecIgnoreDifferencesArrayOutput {
	return o.ApplyT(func(v *ApplicationSpec) []ApplicationSpecIgnoreDifferences {
		if v == nil {
			return nil
		}
		return v.IgnoreDifferences
	}).(ApplicationSpecIgnoreDifferencesArrayOutput)
}

// Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
func (o ApplicationSpecPtrOutput) Info() ApplicationSpecInfoArrayOutput {
	return o.ApplyT(func(v *ApplicationSpec) []ApplicationSpecInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(ApplicationSpecInfoArrayOutput)
}

// Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
func (o ApplicationSpecPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
func (o ApplicationSpecPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationSpec) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// Source is a reference to the location of the application's manifests or chart
func (o ApplicationSpecPtrOutput) Source() ApplicationSpecSourcePtrOutput {
	return o.ApplyT(func(v *ApplicationSpec) *ApplicationSpecSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(ApplicationSpecSourcePtrOutput)
}

// SyncPolicy controls when and how a sync will be performed
func (o ApplicationSpecPtrOutput) SyncPolicy() ApplicationSpecSyncPolicyPtrOutput {
	return o.ApplyT(func(v *ApplicationSpec) *ApplicationSpecSyncPolicy {
		if v == nil {
			return nil
		}
		return v.SyncPolicy
	}).(ApplicationSpecSyncPolicyPtrOutput)
}

// Destination is a reference to the target Kubernetes server and namespace
type ApplicationSpecDestination struct {
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name *string `pulumi:"name"`
	// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace *string `pulumi:"namespace"`
	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server *string `pulumi:"server"`
}

// ApplicationSpecDestinationInput is an input type that accepts ApplicationSpecDestinationArgs and ApplicationSpecDestinationOutput values.
// You can construct a concrete instance of `ApplicationSpecDestinationInput` via:
//
//          ApplicationSpecDestinationArgs{...}
type ApplicationSpecDestinationInput interface {
	pulumi.Input

	ToApplicationSpecDestinationOutput() ApplicationSpecDestinationOutput
	ToApplicationSpecDestinationOutputWithContext(context.Context) ApplicationSpecDestinationOutput
}

// Destination is a reference to the target Kubernetes server and namespace
type ApplicationSpecDestinationArgs struct {
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (ApplicationSpecDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecDestination)(nil)).Elem()
}

func (i ApplicationSpecDestinationArgs) ToApplicationSpecDestinationOutput() ApplicationSpecDestinationOutput {
	return i.ToApplicationSpecDestinationOutputWithContext(context.Background())
}

func (i ApplicationSpecDestinationArgs) ToApplicationSpecDestinationOutputWithContext(ctx context.Context) ApplicationSpecDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecDestinationOutput)
}

func (i ApplicationSpecDestinationArgs) ToApplicationSpecDestinationPtrOutput() ApplicationSpecDestinationPtrOutput {
	return i.ToApplicationSpecDestinationPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecDestinationArgs) ToApplicationSpecDestinationPtrOutputWithContext(ctx context.Context) ApplicationSpecDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecDestinationOutput).ToApplicationSpecDestinationPtrOutputWithContext(ctx)
}

// ApplicationSpecDestinationPtrInput is an input type that accepts ApplicationSpecDestinationArgs, ApplicationSpecDestinationPtr and ApplicationSpecDestinationPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecDestinationPtrInput` via:
//
//          ApplicationSpecDestinationArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecDestinationPtrInput interface {
	pulumi.Input

	ToApplicationSpecDestinationPtrOutput() ApplicationSpecDestinationPtrOutput
	ToApplicationSpecDestinationPtrOutputWithContext(context.Context) ApplicationSpecDestinationPtrOutput
}

type applicationSpecDestinationPtrType ApplicationSpecDestinationArgs

func ApplicationSpecDestinationPtr(v *ApplicationSpecDestinationArgs) ApplicationSpecDestinationPtrInput {
	return (*applicationSpecDestinationPtrType)(v)
}

func (*applicationSpecDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecDestination)(nil)).Elem()
}

func (i *applicationSpecDestinationPtrType) ToApplicationSpecDestinationPtrOutput() ApplicationSpecDestinationPtrOutput {
	return i.ToApplicationSpecDestinationPtrOutputWithContext(context.Background())
}

func (i *applicationSpecDestinationPtrType) ToApplicationSpecDestinationPtrOutputWithContext(ctx context.Context) ApplicationSpecDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecDestinationPtrOutput)
}

// Destination is a reference to the target Kubernetes server and namespace
type ApplicationSpecDestinationOutput struct{ *pulumi.OutputState }

func (ApplicationSpecDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecDestination)(nil)).Elem()
}

func (o ApplicationSpecDestinationOutput) ToApplicationSpecDestinationOutput() ApplicationSpecDestinationOutput {
	return o
}

func (o ApplicationSpecDestinationOutput) ToApplicationSpecDestinationOutputWithContext(ctx context.Context) ApplicationSpecDestinationOutput {
	return o
}

func (o ApplicationSpecDestinationOutput) ToApplicationSpecDestinationPtrOutput() ApplicationSpecDestinationPtrOutput {
	return o.ToApplicationSpecDestinationPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecDestinationOutput) ToApplicationSpecDestinationPtrOutputWithContext(ctx context.Context) ApplicationSpecDestinationPtrOutput {
	return o.ApplyT(func(v ApplicationSpecDestination) *ApplicationSpecDestination {
		return &v
	}).(ApplicationSpecDestinationPtrOutput)
}

// Name is an alternate way of specifying the target cluster by its symbolic name
func (o ApplicationSpecDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
func (o ApplicationSpecDestinationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecDestination) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
func (o ApplicationSpecDestinationOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecDestination) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type ApplicationSpecDestinationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecDestination)(nil)).Elem()
}

func (o ApplicationSpecDestinationPtrOutput) ToApplicationSpecDestinationPtrOutput() ApplicationSpecDestinationPtrOutput {
	return o
}

func (o ApplicationSpecDestinationPtrOutput) ToApplicationSpecDestinationPtrOutputWithContext(ctx context.Context) ApplicationSpecDestinationPtrOutput {
	return o
}

func (o ApplicationSpecDestinationPtrOutput) Elem() ApplicationSpecDestinationOutput {
	return o.ApplyT(func(v *ApplicationSpecDestination) ApplicationSpecDestination { return *v }).(ApplicationSpecDestinationOutput)
}

// Name is an alternate way of specifying the target cluster by its symbolic name
func (o ApplicationSpecDestinationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecDestination) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
func (o ApplicationSpecDestinationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecDestination) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
func (o ApplicationSpecDestinationPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecDestination) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
type ApplicationSpecIgnoreDifferences struct {
	Group        *string  `pulumi:"group"`
	JsonPointers []string `pulumi:"jsonPointers"`
	Kind         string   `pulumi:"kind"`
	Name         *string  `pulumi:"name"`
	Namespace    *string  `pulumi:"namespace"`
}

// ApplicationSpecIgnoreDifferencesInput is an input type that accepts ApplicationSpecIgnoreDifferencesArgs and ApplicationSpecIgnoreDifferencesOutput values.
// You can construct a concrete instance of `ApplicationSpecIgnoreDifferencesInput` via:
//
//          ApplicationSpecIgnoreDifferencesArgs{...}
type ApplicationSpecIgnoreDifferencesInput interface {
	pulumi.Input

	ToApplicationSpecIgnoreDifferencesOutput() ApplicationSpecIgnoreDifferencesOutput
	ToApplicationSpecIgnoreDifferencesOutputWithContext(context.Context) ApplicationSpecIgnoreDifferencesOutput
}

// ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
type ApplicationSpecIgnoreDifferencesArgs struct {
	Group        pulumi.StringPtrInput   `pulumi:"group"`
	JsonPointers pulumi.StringArrayInput `pulumi:"jsonPointers"`
	Kind         pulumi.StringInput      `pulumi:"kind"`
	Name         pulumi.StringPtrInput   `pulumi:"name"`
	Namespace    pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (ApplicationSpecIgnoreDifferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecIgnoreDifferences)(nil)).Elem()
}

func (i ApplicationSpecIgnoreDifferencesArgs) ToApplicationSpecIgnoreDifferencesOutput() ApplicationSpecIgnoreDifferencesOutput {
	return i.ToApplicationSpecIgnoreDifferencesOutputWithContext(context.Background())
}

func (i ApplicationSpecIgnoreDifferencesArgs) ToApplicationSpecIgnoreDifferencesOutputWithContext(ctx context.Context) ApplicationSpecIgnoreDifferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecIgnoreDifferencesOutput)
}

// ApplicationSpecIgnoreDifferencesArrayInput is an input type that accepts ApplicationSpecIgnoreDifferencesArray and ApplicationSpecIgnoreDifferencesArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecIgnoreDifferencesArrayInput` via:
//
//          ApplicationSpecIgnoreDifferencesArray{ ApplicationSpecIgnoreDifferencesArgs{...} }
type ApplicationSpecIgnoreDifferencesArrayInput interface {
	pulumi.Input

	ToApplicationSpecIgnoreDifferencesArrayOutput() ApplicationSpecIgnoreDifferencesArrayOutput
	ToApplicationSpecIgnoreDifferencesArrayOutputWithContext(context.Context) ApplicationSpecIgnoreDifferencesArrayOutput
}

type ApplicationSpecIgnoreDifferencesArray []ApplicationSpecIgnoreDifferencesInput

func (ApplicationSpecIgnoreDifferencesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecIgnoreDifferences)(nil)).Elem()
}

func (i ApplicationSpecIgnoreDifferencesArray) ToApplicationSpecIgnoreDifferencesArrayOutput() ApplicationSpecIgnoreDifferencesArrayOutput {
	return i.ToApplicationSpecIgnoreDifferencesArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecIgnoreDifferencesArray) ToApplicationSpecIgnoreDifferencesArrayOutputWithContext(ctx context.Context) ApplicationSpecIgnoreDifferencesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecIgnoreDifferencesArrayOutput)
}

// ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
type ApplicationSpecIgnoreDifferencesOutput struct{ *pulumi.OutputState }

func (ApplicationSpecIgnoreDifferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecIgnoreDifferences)(nil)).Elem()
}

func (o ApplicationSpecIgnoreDifferencesOutput) ToApplicationSpecIgnoreDifferencesOutput() ApplicationSpecIgnoreDifferencesOutput {
	return o
}

func (o ApplicationSpecIgnoreDifferencesOutput) ToApplicationSpecIgnoreDifferencesOutputWithContext(ctx context.Context) ApplicationSpecIgnoreDifferencesOutput {
	return o
}

func (o ApplicationSpecIgnoreDifferencesOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecIgnoreDifferences) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ApplicationSpecIgnoreDifferencesOutput) JsonPointers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSpecIgnoreDifferences) []string { return v.JsonPointers }).(pulumi.StringArrayOutput)
}

func (o ApplicationSpecIgnoreDifferencesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecIgnoreDifferences) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ApplicationSpecIgnoreDifferencesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecIgnoreDifferences) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ApplicationSpecIgnoreDifferencesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecIgnoreDifferences) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ApplicationSpecIgnoreDifferencesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecIgnoreDifferencesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecIgnoreDifferences)(nil)).Elem()
}

func (o ApplicationSpecIgnoreDifferencesArrayOutput) ToApplicationSpecIgnoreDifferencesArrayOutput() ApplicationSpecIgnoreDifferencesArrayOutput {
	return o
}

func (o ApplicationSpecIgnoreDifferencesArrayOutput) ToApplicationSpecIgnoreDifferencesArrayOutputWithContext(ctx context.Context) ApplicationSpecIgnoreDifferencesArrayOutput {
	return o
}

func (o ApplicationSpecIgnoreDifferencesArrayOutput) Index(i pulumi.IntInput) ApplicationSpecIgnoreDifferencesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecIgnoreDifferences {
		return vs[0].([]ApplicationSpecIgnoreDifferences)[vs[1].(int)]
	}).(ApplicationSpecIgnoreDifferencesOutput)
}

type ApplicationSpecInfo struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationSpecInfoInput is an input type that accepts ApplicationSpecInfoArgs and ApplicationSpecInfoOutput values.
// You can construct a concrete instance of `ApplicationSpecInfoInput` via:
//
//          ApplicationSpecInfoArgs{...}
type ApplicationSpecInfoInput interface {
	pulumi.Input

	ToApplicationSpecInfoOutput() ApplicationSpecInfoOutput
	ToApplicationSpecInfoOutputWithContext(context.Context) ApplicationSpecInfoOutput
}

type ApplicationSpecInfoArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationSpecInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecInfo)(nil)).Elem()
}

func (i ApplicationSpecInfoArgs) ToApplicationSpecInfoOutput() ApplicationSpecInfoOutput {
	return i.ToApplicationSpecInfoOutputWithContext(context.Background())
}

func (i ApplicationSpecInfoArgs) ToApplicationSpecInfoOutputWithContext(ctx context.Context) ApplicationSpecInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecInfoOutput)
}

// ApplicationSpecInfoArrayInput is an input type that accepts ApplicationSpecInfoArray and ApplicationSpecInfoArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecInfoArrayInput` via:
//
//          ApplicationSpecInfoArray{ ApplicationSpecInfoArgs{...} }
type ApplicationSpecInfoArrayInput interface {
	pulumi.Input

	ToApplicationSpecInfoArrayOutput() ApplicationSpecInfoArrayOutput
	ToApplicationSpecInfoArrayOutputWithContext(context.Context) ApplicationSpecInfoArrayOutput
}

type ApplicationSpecInfoArray []ApplicationSpecInfoInput

func (ApplicationSpecInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecInfo)(nil)).Elem()
}

func (i ApplicationSpecInfoArray) ToApplicationSpecInfoArrayOutput() ApplicationSpecInfoArrayOutput {
	return i.ToApplicationSpecInfoArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecInfoArray) ToApplicationSpecInfoArrayOutputWithContext(ctx context.Context) ApplicationSpecInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecInfoArrayOutput)
}

type ApplicationSpecInfoOutput struct{ *pulumi.OutputState }

func (ApplicationSpecInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecInfo)(nil)).Elem()
}

func (o ApplicationSpecInfoOutput) ToApplicationSpecInfoOutput() ApplicationSpecInfoOutput {
	return o
}

func (o ApplicationSpecInfoOutput) ToApplicationSpecInfoOutputWithContext(ctx context.Context) ApplicationSpecInfoOutput {
	return o
}

func (o ApplicationSpecInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationSpecInfoOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecInfo) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSpecInfoArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecInfo)(nil)).Elem()
}

func (o ApplicationSpecInfoArrayOutput) ToApplicationSpecInfoArrayOutput() ApplicationSpecInfoArrayOutput {
	return o
}

func (o ApplicationSpecInfoArrayOutput) ToApplicationSpecInfoArrayOutputWithContext(ctx context.Context) ApplicationSpecInfoArrayOutput {
	return o
}

func (o ApplicationSpecInfoArrayOutput) Index(i pulumi.IntInput) ApplicationSpecInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecInfo {
		return vs[0].([]ApplicationSpecInfo)[vs[1].(int)]
	}).(ApplicationSpecInfoOutput)
}

// Source is a reference to the location of the application's manifests or chart
type ApplicationSpecSource struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory *ApplicationSpecSourceDirectory `pulumi:"directory"`
	// Helm holds helm specific options
	Helm *ApplicationSpecSourceHelm `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet *ApplicationSpecSourceKsonnet `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationSpecSourceKustomize `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationSpecSourcePlugin `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL string `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// ApplicationSpecSourceInput is an input type that accepts ApplicationSpecSourceArgs and ApplicationSpecSourceOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceInput` via:
//
//          ApplicationSpecSourceArgs{...}
type ApplicationSpecSourceInput interface {
	pulumi.Input

	ToApplicationSpecSourceOutput() ApplicationSpecSourceOutput
	ToApplicationSpecSourceOutputWithContext(context.Context) ApplicationSpecSourceOutput
}

// Source is a reference to the location of the application's manifests or chart
type ApplicationSpecSourceArgs struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory ApplicationSpecSourceDirectoryPtrInput `pulumi:"directory"`
	// Helm holds helm specific options
	Helm ApplicationSpecSourceHelmPtrInput `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet ApplicationSpecSourceKsonnetPtrInput `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize ApplicationSpecSourceKustomizePtrInput `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin ApplicationSpecSourcePluginPtrInput `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL pulumi.StringInput `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (ApplicationSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSource)(nil)).Elem()
}

func (i ApplicationSpecSourceArgs) ToApplicationSpecSourceOutput() ApplicationSpecSourceOutput {
	return i.ToApplicationSpecSourceOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceArgs) ToApplicationSpecSourceOutputWithContext(ctx context.Context) ApplicationSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceOutput)
}

func (i ApplicationSpecSourceArgs) ToApplicationSpecSourcePtrOutput() ApplicationSpecSourcePtrOutput {
	return i.ToApplicationSpecSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceArgs) ToApplicationSpecSourcePtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceOutput).ToApplicationSpecSourcePtrOutputWithContext(ctx)
}

// ApplicationSpecSourcePtrInput is an input type that accepts ApplicationSpecSourceArgs, ApplicationSpecSourcePtr and ApplicationSpecSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourcePtrInput` via:
//
//          ApplicationSpecSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourcePtrInput interface {
	pulumi.Input

	ToApplicationSpecSourcePtrOutput() ApplicationSpecSourcePtrOutput
	ToApplicationSpecSourcePtrOutputWithContext(context.Context) ApplicationSpecSourcePtrOutput
}

type applicationSpecSourcePtrType ApplicationSpecSourceArgs

func ApplicationSpecSourcePtr(v *ApplicationSpecSourceArgs) ApplicationSpecSourcePtrInput {
	return (*applicationSpecSourcePtrType)(v)
}

func (*applicationSpecSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSource)(nil)).Elem()
}

func (i *applicationSpecSourcePtrType) ToApplicationSpecSourcePtrOutput() ApplicationSpecSourcePtrOutput {
	return i.ToApplicationSpecSourcePtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourcePtrType) ToApplicationSpecSourcePtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourcePtrOutput)
}

// Source is a reference to the location of the application's manifests or chart
type ApplicationSpecSourceOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSource)(nil)).Elem()
}

func (o ApplicationSpecSourceOutput) ToApplicationSpecSourceOutput() ApplicationSpecSourceOutput {
	return o
}

func (o ApplicationSpecSourceOutput) ToApplicationSpecSourceOutputWithContext(ctx context.Context) ApplicationSpecSourceOutput {
	return o
}

func (o ApplicationSpecSourceOutput) ToApplicationSpecSourcePtrOutput() ApplicationSpecSourcePtrOutput {
	return o.ToApplicationSpecSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourceOutput) ToApplicationSpecSourcePtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *ApplicationSpecSource {
		return &v
	}).(ApplicationSpecSourcePtrOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationSpecSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationSpecSourceOutput) Directory() ApplicationSpecSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *ApplicationSpecSourceDirectory { return v.Directory }).(ApplicationSpecSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationSpecSourceOutput) Helm() ApplicationSpecSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *ApplicationSpecSourceHelm { return v.Helm }).(ApplicationSpecSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationSpecSourceOutput) Ksonnet() ApplicationSpecSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *ApplicationSpecSourceKsonnet { return v.Ksonnet }).(ApplicationSpecSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationSpecSourceOutput) Kustomize() ApplicationSpecSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *ApplicationSpecSourceKustomize { return v.Kustomize }).(ApplicationSpecSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationSpecSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationSpecSourceOutput) Plugin() ApplicationSpecSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *ApplicationSpecSourcePlugin { return v.Plugin }).(ApplicationSpecSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationSpecSourceOutput) RepoURL() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSource) string { return v.RepoURL }).(pulumi.StringOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationSpecSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSource)(nil)).Elem()
}

func (o ApplicationSpecSourcePtrOutput) ToApplicationSpecSourcePtrOutput() ApplicationSpecSourcePtrOutput {
	return o
}

func (o ApplicationSpecSourcePtrOutput) ToApplicationSpecSourcePtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePtrOutput {
	return o
}

func (o ApplicationSpecSourcePtrOutput) Elem() ApplicationSpecSourceOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) ApplicationSpecSource { return *v }).(ApplicationSpecSourceOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationSpecSourcePtrOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.Chart
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationSpecSourcePtrOutput) Directory() ApplicationSpecSourceDirectoryPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *ApplicationSpecSourceDirectory {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(ApplicationSpecSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationSpecSourcePtrOutput) Helm() ApplicationSpecSourceHelmPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *ApplicationSpecSourceHelm {
		if v == nil {
			return nil
		}
		return v.Helm
	}).(ApplicationSpecSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationSpecSourcePtrOutput) Ksonnet() ApplicationSpecSourceKsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *ApplicationSpecSourceKsonnet {
		if v == nil {
			return nil
		}
		return v.Ksonnet
	}).(ApplicationSpecSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationSpecSourcePtrOutput) Kustomize() ApplicationSpecSourceKustomizePtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *ApplicationSpecSourceKustomize {
		if v == nil {
			return nil
		}
		return v.Kustomize
	}).(ApplicationSpecSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationSpecSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationSpecSourcePtrOutput) Plugin() ApplicationSpecSourcePluginPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *ApplicationSpecSourcePlugin {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(ApplicationSpecSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationSpecSourcePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationSpecSourcePtrOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.TargetRevision
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationSpecSourceDirectory struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationSpecSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `pulumi:"recurse"`
}

// ApplicationSpecSourceDirectoryInput is an input type that accepts ApplicationSpecSourceDirectoryArgs and ApplicationSpecSourceDirectoryOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryInput` via:
//
//          ApplicationSpecSourceDirectoryArgs{...}
type ApplicationSpecSourceDirectoryInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryOutput() ApplicationSpecSourceDirectoryOutput
	ToApplicationSpecSourceDirectoryOutputWithContext(context.Context) ApplicationSpecSourceDirectoryOutput
}

// Directory holds path/directory specific options
type ApplicationSpecSourceDirectoryArgs struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet ApplicationSpecSourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (ApplicationSpecSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i ApplicationSpecSourceDirectoryArgs) ToApplicationSpecSourceDirectoryOutput() ApplicationSpecSourceDirectoryOutput {
	return i.ToApplicationSpecSourceDirectoryOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryArgs) ToApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryOutput)
}

func (i ApplicationSpecSourceDirectoryArgs) ToApplicationSpecSourceDirectoryPtrOutput() ApplicationSpecSourceDirectoryPtrOutput {
	return i.ToApplicationSpecSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryArgs) ToApplicationSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryOutput).ToApplicationSpecSourceDirectoryPtrOutputWithContext(ctx)
}

// ApplicationSpecSourceDirectoryPtrInput is an input type that accepts ApplicationSpecSourceDirectoryArgs, ApplicationSpecSourceDirectoryPtr and ApplicationSpecSourceDirectoryPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryPtrInput` via:
//
//          ApplicationSpecSourceDirectoryArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourceDirectoryPtrInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryPtrOutput() ApplicationSpecSourceDirectoryPtrOutput
	ToApplicationSpecSourceDirectoryPtrOutputWithContext(context.Context) ApplicationSpecSourceDirectoryPtrOutput
}

type applicationSpecSourceDirectoryPtrType ApplicationSpecSourceDirectoryArgs

func ApplicationSpecSourceDirectoryPtr(v *ApplicationSpecSourceDirectoryArgs) ApplicationSpecSourceDirectoryPtrInput {
	return (*applicationSpecSourceDirectoryPtrType)(v)
}

func (*applicationSpecSourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i *applicationSpecSourceDirectoryPtrType) ToApplicationSpecSourceDirectoryPtrOutput() ApplicationSpecSourceDirectoryPtrOutput {
	return i.ToApplicationSpecSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourceDirectoryPtrType) ToApplicationSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationSpecSourceDirectoryOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryOutput) ToApplicationSpecSourceDirectoryOutput() ApplicationSpecSourceDirectoryOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryOutput) ToApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryOutput) ToApplicationSpecSourceDirectoryPtrOutput() ApplicationSpecSourceDirectoryPtrOutput {
	return o.ToApplicationSpecSourceDirectoryPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourceDirectoryOutput) ToApplicationSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectory) *ApplicationSpecSourceDirectory {
		return &v
	}).(ApplicationSpecSourceDirectoryPtrOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationSpecSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationSpecSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationSpecSourceDirectoryOutput) Jsonnet() ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectory) *ApplicationSpecSourceDirectoryJsonnet { return v.Jsonnet }).(ApplicationSpecSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationSpecSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type ApplicationSpecSourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryPtrOutput) ToApplicationSpecSourceDirectoryPtrOutput() ApplicationSpecSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryPtrOutput) ToApplicationSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryPtrOutput) Elem() ApplicationSpecSourceDirectoryOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectory) ApplicationSpecSourceDirectory { return *v }).(ApplicationSpecSourceDirectoryOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationSpecSourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationSpecSourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationSpecSourceDirectoryPtrOutput) Jsonnet() ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectory) *ApplicationSpecSourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(ApplicationSpecSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationSpecSourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationSpecSourceDirectoryJsonnet struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars []ApplicationSpecSourceDirectoryJsonnetExtVars `pulumi:"extVars"`
	// Additional library search dirs
	Libs []string `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []ApplicationSpecSourceDirectoryJsonnetTlas `pulumi:"tlas"`
}

// ApplicationSpecSourceDirectoryJsonnetInput is an input type that accepts ApplicationSpecSourceDirectoryJsonnetArgs and ApplicationSpecSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryJsonnetInput` via:
//
//          ApplicationSpecSourceDirectoryJsonnetArgs{...}
type ApplicationSpecSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryJsonnetOutput() ApplicationSpecSourceDirectoryJsonnetOutput
	ToApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Context) ApplicationSpecSourceDirectoryJsonnetOutput
}

// Jsonnet holds options specific to Jsonnet
type ApplicationSpecSourceDirectoryJsonnetArgs struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars ApplicationSpecSourceDirectoryJsonnetExtVarsArrayInput `pulumi:"extVars"`
	// Additional library search dirs
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas ApplicationSpecSourceDirectoryJsonnetTlasArrayInput `pulumi:"tlas"`
}

func (ApplicationSpecSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i ApplicationSpecSourceDirectoryJsonnetArgs) ToApplicationSpecSourceDirectoryJsonnetOutput() ApplicationSpecSourceDirectoryJsonnetOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryJsonnetArgs) ToApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetOutput)
}

func (i ApplicationSpecSourceDirectoryJsonnetArgs) ToApplicationSpecSourceDirectoryJsonnetPtrOutput() ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryJsonnetArgs) ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetOutput).ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// ApplicationSpecSourceDirectoryJsonnetPtrInput is an input type that accepts ApplicationSpecSourceDirectoryJsonnetArgs, ApplicationSpecSourceDirectoryJsonnetPtr and ApplicationSpecSourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryJsonnetPtrInput` via:
//
//          ApplicationSpecSourceDirectoryJsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryJsonnetPtrOutput() ApplicationSpecSourceDirectoryJsonnetPtrOutput
	ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Context) ApplicationSpecSourceDirectoryJsonnetPtrOutput
}

type applicationSpecSourceDirectoryJsonnetPtrType ApplicationSpecSourceDirectoryJsonnetArgs

func ApplicationSpecSourceDirectoryJsonnetPtr(v *ApplicationSpecSourceDirectoryJsonnetArgs) ApplicationSpecSourceDirectoryJsonnetPtrInput {
	return (*applicationSpecSourceDirectoryJsonnetPtrType)(v)
}

func (*applicationSpecSourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i *applicationSpecSourceDirectoryJsonnetPtrType) ToApplicationSpecSourceDirectoryJsonnetPtrOutput() ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourceDirectoryJsonnetPtrType) ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationSpecSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryJsonnetOutput) ToApplicationSpecSourceDirectoryJsonnetOutput() ApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetOutput) ToApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetOutput) ToApplicationSpecSourceDirectoryJsonnetPtrOutput() ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return o.ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourceDirectoryJsonnetOutput) ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnet) *ApplicationSpecSourceDirectoryJsonnet {
		return &v
	}).(ApplicationSpecSourceDirectoryJsonnetPtrOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationSpecSourceDirectoryJsonnetOutput) ExtVars() ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnet) []ApplicationSpecSourceDirectoryJsonnetExtVars {
		return v.ExtVars
	}).(ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationSpecSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationSpecSourceDirectoryJsonnetOutput) Tlas() ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnet) []ApplicationSpecSourceDirectoryJsonnetTlas {
		return v.Tlas
	}).(ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput)
}

type ApplicationSpecSourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryJsonnetPtrOutput) ToApplicationSpecSourceDirectoryJsonnetPtrOutput() ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetPtrOutput) ToApplicationSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetPtrOutput) Elem() ApplicationSpecSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectoryJsonnet) ApplicationSpecSourceDirectoryJsonnet { return *v }).(ApplicationSpecSourceDirectoryJsonnetOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationSpecSourceDirectoryJsonnetPtrOutput) ExtVars() ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectoryJsonnet) []ApplicationSpecSourceDirectoryJsonnetExtVars {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationSpecSourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationSpecSourceDirectoryJsonnetPtrOutput) Tlas() ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceDirectoryJsonnet) []ApplicationSpecSourceDirectoryJsonnetTlas {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationSpecSourceDirectoryJsonnetExtVars struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationSpecSourceDirectoryJsonnetExtVarsInput is an input type that accepts ApplicationSpecSourceDirectoryJsonnetExtVarsArgs and ApplicationSpecSourceDirectoryJsonnetExtVarsOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryJsonnetExtVarsInput` via:
//
//          ApplicationSpecSourceDirectoryJsonnetExtVarsArgs{...}
type ApplicationSpecSourceDirectoryJsonnetExtVarsInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryJsonnetExtVarsOutput() ApplicationSpecSourceDirectoryJsonnetExtVarsOutput
	ToApplicationSpecSourceDirectoryJsonnetExtVarsOutputWithContext(context.Context) ApplicationSpecSourceDirectoryJsonnetExtVarsOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationSpecSourceDirectoryJsonnetExtVarsArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationSpecSourceDirectoryJsonnetExtVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationSpecSourceDirectoryJsonnetExtVarsArgs) ToApplicationSpecSourceDirectoryJsonnetExtVarsOutput() ApplicationSpecSourceDirectoryJsonnetExtVarsOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetExtVarsOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryJsonnetExtVarsArgs) ToApplicationSpecSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetExtVarsOutput)
}

// ApplicationSpecSourceDirectoryJsonnetExtVarsArrayInput is an input type that accepts ApplicationSpecSourceDirectoryJsonnetExtVarsArray and ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryJsonnetExtVarsArrayInput` via:
//
//          ApplicationSpecSourceDirectoryJsonnetExtVarsArray{ ApplicationSpecSourceDirectoryJsonnetExtVarsArgs{...} }
type ApplicationSpecSourceDirectoryJsonnetExtVarsArrayInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput
	ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Context) ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput
}

type ApplicationSpecSourceDirectoryJsonnetExtVarsArray []ApplicationSpecSourceDirectoryJsonnetExtVarsInput

func (ApplicationSpecSourceDirectoryJsonnetExtVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationSpecSourceDirectoryJsonnetExtVarsArray) ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryJsonnetExtVarsArray) ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationSpecSourceDirectoryJsonnetExtVarsOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryJsonnetExtVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsOutput) ToApplicationSpecSourceDirectoryJsonnetExtVarsOutput() ApplicationSpecSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsOutput) ToApplicationSpecSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnetExtVars) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnetExtVars) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnetExtVars) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput) Index(i pulumi.IntInput) ApplicationSpecSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecSourceDirectoryJsonnetExtVars {
		return vs[0].([]ApplicationSpecSourceDirectoryJsonnetExtVars)[vs[1].(int)]
	}).(ApplicationSpecSourceDirectoryJsonnetExtVarsOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationSpecSourceDirectoryJsonnetTlas struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationSpecSourceDirectoryJsonnetTlasInput is an input type that accepts ApplicationSpecSourceDirectoryJsonnetTlasArgs and ApplicationSpecSourceDirectoryJsonnetTlasOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryJsonnetTlasInput` via:
//
//          ApplicationSpecSourceDirectoryJsonnetTlasArgs{...}
type ApplicationSpecSourceDirectoryJsonnetTlasInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryJsonnetTlasOutput() ApplicationSpecSourceDirectoryJsonnetTlasOutput
	ToApplicationSpecSourceDirectoryJsonnetTlasOutputWithContext(context.Context) ApplicationSpecSourceDirectoryJsonnetTlasOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationSpecSourceDirectoryJsonnetTlasArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationSpecSourceDirectoryJsonnetTlasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationSpecSourceDirectoryJsonnetTlasArgs) ToApplicationSpecSourceDirectoryJsonnetTlasOutput() ApplicationSpecSourceDirectoryJsonnetTlasOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetTlasOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryJsonnetTlasArgs) ToApplicationSpecSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetTlasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetTlasOutput)
}

// ApplicationSpecSourceDirectoryJsonnetTlasArrayInput is an input type that accepts ApplicationSpecSourceDirectoryJsonnetTlasArray and ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceDirectoryJsonnetTlasArrayInput` via:
//
//          ApplicationSpecSourceDirectoryJsonnetTlasArray{ ApplicationSpecSourceDirectoryJsonnetTlasArgs{...} }
type ApplicationSpecSourceDirectoryJsonnetTlasArrayInput interface {
	pulumi.Input

	ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutput() ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput
	ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Context) ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput
}

type ApplicationSpecSourceDirectoryJsonnetTlasArray []ApplicationSpecSourceDirectoryJsonnetTlasInput

func (ApplicationSpecSourceDirectoryJsonnetTlasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationSpecSourceDirectoryJsonnetTlasArray) ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutput() ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput {
	return i.ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceDirectoryJsonnetTlasArray) ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationSpecSourceDirectoryJsonnetTlasOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryJsonnetTlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasOutput) ToApplicationSpecSourceDirectoryJsonnetTlasOutput() ApplicationSpecSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasOutput) ToApplicationSpecSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnetTlas) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnetTlas) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourceDirectoryJsonnetTlas) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput) ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutput() ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput) ToApplicationSpecSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput) Index(i pulumi.IntInput) ApplicationSpecSourceDirectoryJsonnetTlasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecSourceDirectoryJsonnetTlas {
		return vs[0].([]ApplicationSpecSourceDirectoryJsonnetTlas)[vs[1].(int)]
	}).(ApplicationSpecSourceDirectoryJsonnetTlasOutput)
}

// Helm holds helm specific options
type ApplicationSpecSourceHelm struct {
	// FileParameters are file parameters to the helm template
	FileParameters []ApplicationSpecSourceHelmFileParameters `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []ApplicationSpecSourceHelmParameters `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// ApplicationSpecSourceHelmInput is an input type that accepts ApplicationSpecSourceHelmArgs and ApplicationSpecSourceHelmOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceHelmInput` via:
//
//          ApplicationSpecSourceHelmArgs{...}
type ApplicationSpecSourceHelmInput interface {
	pulumi.Input

	ToApplicationSpecSourceHelmOutput() ApplicationSpecSourceHelmOutput
	ToApplicationSpecSourceHelmOutputWithContext(context.Context) ApplicationSpecSourceHelmOutput
}

// Helm holds helm specific options
type ApplicationSpecSourceHelmArgs struct {
	// FileParameters are file parameters to the helm template
	FileParameters ApplicationSpecSourceHelmFileParametersArrayInput `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters ApplicationSpecSourceHelmParametersArrayInput `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationSpecSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceHelm)(nil)).Elem()
}

func (i ApplicationSpecSourceHelmArgs) ToApplicationSpecSourceHelmOutput() ApplicationSpecSourceHelmOutput {
	return i.ToApplicationSpecSourceHelmOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceHelmArgs) ToApplicationSpecSourceHelmOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmOutput)
}

func (i ApplicationSpecSourceHelmArgs) ToApplicationSpecSourceHelmPtrOutput() ApplicationSpecSourceHelmPtrOutput {
	return i.ToApplicationSpecSourceHelmPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceHelmArgs) ToApplicationSpecSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmOutput).ToApplicationSpecSourceHelmPtrOutputWithContext(ctx)
}

// ApplicationSpecSourceHelmPtrInput is an input type that accepts ApplicationSpecSourceHelmArgs, ApplicationSpecSourceHelmPtr and ApplicationSpecSourceHelmPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceHelmPtrInput` via:
//
//          ApplicationSpecSourceHelmArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourceHelmPtrInput interface {
	pulumi.Input

	ToApplicationSpecSourceHelmPtrOutput() ApplicationSpecSourceHelmPtrOutput
	ToApplicationSpecSourceHelmPtrOutputWithContext(context.Context) ApplicationSpecSourceHelmPtrOutput
}

type applicationSpecSourceHelmPtrType ApplicationSpecSourceHelmArgs

func ApplicationSpecSourceHelmPtr(v *ApplicationSpecSourceHelmArgs) ApplicationSpecSourceHelmPtrInput {
	return (*applicationSpecSourceHelmPtrType)(v)
}

func (*applicationSpecSourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceHelm)(nil)).Elem()
}

func (i *applicationSpecSourceHelmPtrType) ToApplicationSpecSourceHelmPtrOutput() ApplicationSpecSourceHelmPtrOutput {
	return i.ToApplicationSpecSourceHelmPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourceHelmPtrType) ToApplicationSpecSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmPtrOutput)
}

// Helm holds helm specific options
type ApplicationSpecSourceHelmOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceHelm)(nil)).Elem()
}

func (o ApplicationSpecSourceHelmOutput) ToApplicationSpecSourceHelmOutput() ApplicationSpecSourceHelmOutput {
	return o
}

func (o ApplicationSpecSourceHelmOutput) ToApplicationSpecSourceHelmOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmOutput {
	return o
}

func (o ApplicationSpecSourceHelmOutput) ToApplicationSpecSourceHelmPtrOutput() ApplicationSpecSourceHelmPtrOutput {
	return o.ToApplicationSpecSourceHelmPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourceHelmOutput) ToApplicationSpecSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) *ApplicationSpecSourceHelm {
		return &v
	}).(ApplicationSpecSourceHelmPtrOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationSpecSourceHelmOutput) FileParameters() ApplicationSpecSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) []ApplicationSpecSourceHelmFileParameters { return v.FileParameters }).(ApplicationSpecSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationSpecSourceHelmOutput) Parameters() ApplicationSpecSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) []ApplicationSpecSourceHelmParameters { return v.Parameters }).(ApplicationSpecSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationSpecSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationSpecSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationSpecSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationSpecSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSourceHelmPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceHelm)(nil)).Elem()
}

func (o ApplicationSpecSourceHelmPtrOutput) ToApplicationSpecSourceHelmPtrOutput() ApplicationSpecSourceHelmPtrOutput {
	return o
}

func (o ApplicationSpecSourceHelmPtrOutput) ToApplicationSpecSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmPtrOutput {
	return o
}

func (o ApplicationSpecSourceHelmPtrOutput) Elem() ApplicationSpecSourceHelmOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) ApplicationSpecSourceHelm { return *v }).(ApplicationSpecSourceHelmOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationSpecSourceHelmPtrOutput) FileParameters() ApplicationSpecSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) []ApplicationSpecSourceHelmFileParameters {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(ApplicationSpecSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationSpecSourceHelmPtrOutput) Parameters() ApplicationSpecSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) []ApplicationSpecSourceHelmParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationSpecSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationSpecSourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationSpecSourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationSpecSourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationSpecSourceHelmPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationSpecSourceHelmFileParameters struct {
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `pulumi:"path"`
}

// ApplicationSpecSourceHelmFileParametersInput is an input type that accepts ApplicationSpecSourceHelmFileParametersArgs and ApplicationSpecSourceHelmFileParametersOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceHelmFileParametersInput` via:
//
//          ApplicationSpecSourceHelmFileParametersArgs{...}
type ApplicationSpecSourceHelmFileParametersInput interface {
	pulumi.Input

	ToApplicationSpecSourceHelmFileParametersOutput() ApplicationSpecSourceHelmFileParametersOutput
	ToApplicationSpecSourceHelmFileParametersOutputWithContext(context.Context) ApplicationSpecSourceHelmFileParametersOutput
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationSpecSourceHelmFileParametersArgs struct {
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApplicationSpecSourceHelmFileParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationSpecSourceHelmFileParametersArgs) ToApplicationSpecSourceHelmFileParametersOutput() ApplicationSpecSourceHelmFileParametersOutput {
	return i.ToApplicationSpecSourceHelmFileParametersOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceHelmFileParametersArgs) ToApplicationSpecSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmFileParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmFileParametersOutput)
}

// ApplicationSpecSourceHelmFileParametersArrayInput is an input type that accepts ApplicationSpecSourceHelmFileParametersArray and ApplicationSpecSourceHelmFileParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceHelmFileParametersArrayInput` via:
//
//          ApplicationSpecSourceHelmFileParametersArray{ ApplicationSpecSourceHelmFileParametersArgs{...} }
type ApplicationSpecSourceHelmFileParametersArrayInput interface {
	pulumi.Input

	ToApplicationSpecSourceHelmFileParametersArrayOutput() ApplicationSpecSourceHelmFileParametersArrayOutput
	ToApplicationSpecSourceHelmFileParametersArrayOutputWithContext(context.Context) ApplicationSpecSourceHelmFileParametersArrayOutput
}

type ApplicationSpecSourceHelmFileParametersArray []ApplicationSpecSourceHelmFileParametersInput

func (ApplicationSpecSourceHelmFileParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationSpecSourceHelmFileParametersArray) ToApplicationSpecSourceHelmFileParametersArrayOutput() ApplicationSpecSourceHelmFileParametersArrayOutput {
	return i.ToApplicationSpecSourceHelmFileParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceHelmFileParametersArray) ToApplicationSpecSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmFileParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmFileParametersArrayOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationSpecSourceHelmFileParametersOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceHelmFileParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationSpecSourceHelmFileParametersOutput) ToApplicationSpecSourceHelmFileParametersOutput() ApplicationSpecSourceHelmFileParametersOutput {
	return o
}

func (o ApplicationSpecSourceHelmFileParametersOutput) ToApplicationSpecSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmFileParametersOutput {
	return o
}

// Name is the name of the Helm parameter
func (o ApplicationSpecSourceHelmFileParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelmFileParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the file containing the values for the Helm parameter
func (o ApplicationSpecSourceHelmFileParametersOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelmFileParameters) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSourceHelmFileParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceHelmFileParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationSpecSourceHelmFileParametersArrayOutput) ToApplicationSpecSourceHelmFileParametersArrayOutput() ApplicationSpecSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationSpecSourceHelmFileParametersArrayOutput) ToApplicationSpecSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationSpecSourceHelmFileParametersArrayOutput) Index(i pulumi.IntInput) ApplicationSpecSourceHelmFileParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecSourceHelmFileParameters {
		return vs[0].([]ApplicationSpecSourceHelmFileParameters)[vs[1].(int)]
	}).(ApplicationSpecSourceHelmFileParametersOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationSpecSourceHelmParameters struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value *string `pulumi:"value"`
}

// ApplicationSpecSourceHelmParametersInput is an input type that accepts ApplicationSpecSourceHelmParametersArgs and ApplicationSpecSourceHelmParametersOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceHelmParametersInput` via:
//
//          ApplicationSpecSourceHelmParametersArgs{...}
type ApplicationSpecSourceHelmParametersInput interface {
	pulumi.Input

	ToApplicationSpecSourceHelmParametersOutput() ApplicationSpecSourceHelmParametersOutput
	ToApplicationSpecSourceHelmParametersOutputWithContext(context.Context) ApplicationSpecSourceHelmParametersOutput
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationSpecSourceHelmParametersArgs struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationSpecSourceHelmParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationSpecSourceHelmParametersArgs) ToApplicationSpecSourceHelmParametersOutput() ApplicationSpecSourceHelmParametersOutput {
	return i.ToApplicationSpecSourceHelmParametersOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceHelmParametersArgs) ToApplicationSpecSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmParametersOutput)
}

// ApplicationSpecSourceHelmParametersArrayInput is an input type that accepts ApplicationSpecSourceHelmParametersArray and ApplicationSpecSourceHelmParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceHelmParametersArrayInput` via:
//
//          ApplicationSpecSourceHelmParametersArray{ ApplicationSpecSourceHelmParametersArgs{...} }
type ApplicationSpecSourceHelmParametersArrayInput interface {
	pulumi.Input

	ToApplicationSpecSourceHelmParametersArrayOutput() ApplicationSpecSourceHelmParametersArrayOutput
	ToApplicationSpecSourceHelmParametersArrayOutputWithContext(context.Context) ApplicationSpecSourceHelmParametersArrayOutput
}

type ApplicationSpecSourceHelmParametersArray []ApplicationSpecSourceHelmParametersInput

func (ApplicationSpecSourceHelmParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationSpecSourceHelmParametersArray) ToApplicationSpecSourceHelmParametersArrayOutput() ApplicationSpecSourceHelmParametersArrayOutput {
	return i.ToApplicationSpecSourceHelmParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceHelmParametersArray) ToApplicationSpecSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceHelmParametersArrayOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationSpecSourceHelmParametersOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceHelmParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationSpecSourceHelmParametersOutput) ToApplicationSpecSourceHelmParametersOutput() ApplicationSpecSourceHelmParametersOutput {
	return o
}

func (o ApplicationSpecSourceHelmParametersOutput) ToApplicationSpecSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmParametersOutput {
	return o
}

// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
func (o ApplicationSpecSourceHelmParametersOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelmParameters) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name is the name of the Helm parameter
func (o ApplicationSpecSourceHelmParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelmParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value for the Helm parameter
func (o ApplicationSpecSourceHelmParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceHelmParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSourceHelmParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceHelmParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationSpecSourceHelmParametersArrayOutput) ToApplicationSpecSourceHelmParametersArrayOutput() ApplicationSpecSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationSpecSourceHelmParametersArrayOutput) ToApplicationSpecSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationSpecSourceHelmParametersArrayOutput) Index(i pulumi.IntInput) ApplicationSpecSourceHelmParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecSourceHelmParameters {
		return vs[0].([]ApplicationSpecSourceHelmParameters)[vs[1].(int)]
	}).(ApplicationSpecSourceHelmParametersOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationSpecSourceKsonnet struct {
	// Environment is a ksonnet application environment name
	Environment *string `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters []ApplicationSpecSourceKsonnetParameters `pulumi:"parameters"`
}

// ApplicationSpecSourceKsonnetInput is an input type that accepts ApplicationSpecSourceKsonnetArgs and ApplicationSpecSourceKsonnetOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKsonnetInput` via:
//
//          ApplicationSpecSourceKsonnetArgs{...}
type ApplicationSpecSourceKsonnetInput interface {
	pulumi.Input

	ToApplicationSpecSourceKsonnetOutput() ApplicationSpecSourceKsonnetOutput
	ToApplicationSpecSourceKsonnetOutputWithContext(context.Context) ApplicationSpecSourceKsonnetOutput
}

// Ksonnet holds ksonnet specific options
type ApplicationSpecSourceKsonnetArgs struct {
	// Environment is a ksonnet application environment name
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters ApplicationSpecSourceKsonnetParametersArrayInput `pulumi:"parameters"`
}

func (ApplicationSpecSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i ApplicationSpecSourceKsonnetArgs) ToApplicationSpecSourceKsonnetOutput() ApplicationSpecSourceKsonnetOutput {
	return i.ToApplicationSpecSourceKsonnetOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKsonnetArgs) ToApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKsonnetOutput)
}

func (i ApplicationSpecSourceKsonnetArgs) ToApplicationSpecSourceKsonnetPtrOutput() ApplicationSpecSourceKsonnetPtrOutput {
	return i.ToApplicationSpecSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKsonnetArgs) ToApplicationSpecSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKsonnetOutput).ToApplicationSpecSourceKsonnetPtrOutputWithContext(ctx)
}

// ApplicationSpecSourceKsonnetPtrInput is an input type that accepts ApplicationSpecSourceKsonnetArgs, ApplicationSpecSourceKsonnetPtr and ApplicationSpecSourceKsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKsonnetPtrInput` via:
//
//          ApplicationSpecSourceKsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourceKsonnetPtrInput interface {
	pulumi.Input

	ToApplicationSpecSourceKsonnetPtrOutput() ApplicationSpecSourceKsonnetPtrOutput
	ToApplicationSpecSourceKsonnetPtrOutputWithContext(context.Context) ApplicationSpecSourceKsonnetPtrOutput
}

type applicationSpecSourceKsonnetPtrType ApplicationSpecSourceKsonnetArgs

func ApplicationSpecSourceKsonnetPtr(v *ApplicationSpecSourceKsonnetArgs) ApplicationSpecSourceKsonnetPtrInput {
	return (*applicationSpecSourceKsonnetPtrType)(v)
}

func (*applicationSpecSourceKsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i *applicationSpecSourceKsonnetPtrType) ToApplicationSpecSourceKsonnetPtrOutput() ApplicationSpecSourceKsonnetPtrOutput {
	return i.ToApplicationSpecSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourceKsonnetPtrType) ToApplicationSpecSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKsonnetPtrOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationSpecSourceKsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o ApplicationSpecSourceKsonnetOutput) ToApplicationSpecSourceKsonnetOutput() ApplicationSpecSourceKsonnetOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetOutput) ToApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetOutput) ToApplicationSpecSourceKsonnetPtrOutput() ApplicationSpecSourceKsonnetPtrOutput {
	return o.ToApplicationSpecSourceKsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourceKsonnetOutput) ToApplicationSpecSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKsonnet) *ApplicationSpecSourceKsonnet {
		return &v
	}).(ApplicationSpecSourceKsonnetPtrOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationSpecSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationSpecSourceKsonnetOutput) Parameters() ApplicationSpecSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKsonnet) []ApplicationSpecSourceKsonnetParameters { return v.Parameters }).(ApplicationSpecSourceKsonnetParametersArrayOutput)
}

type ApplicationSpecSourceKsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o ApplicationSpecSourceKsonnetPtrOutput) ToApplicationSpecSourceKsonnetPtrOutput() ApplicationSpecSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetPtrOutput) ToApplicationSpecSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetPtrOutput) Elem() ApplicationSpecSourceKsonnetOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKsonnet) ApplicationSpecSourceKsonnet { return *v }).(ApplicationSpecSourceKsonnetOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationSpecSourceKsonnetPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKsonnet) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationSpecSourceKsonnetPtrOutput) Parameters() ApplicationSpecSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKsonnet) []ApplicationSpecSourceKsonnetParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationSpecSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationSpecSourceKsonnetParameters struct {
	Component *string `pulumi:"component"`
	Name      string  `pulumi:"name"`
	Value     string  `pulumi:"value"`
}

// ApplicationSpecSourceKsonnetParametersInput is an input type that accepts ApplicationSpecSourceKsonnetParametersArgs and ApplicationSpecSourceKsonnetParametersOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKsonnetParametersInput` via:
//
//          ApplicationSpecSourceKsonnetParametersArgs{...}
type ApplicationSpecSourceKsonnetParametersInput interface {
	pulumi.Input

	ToApplicationSpecSourceKsonnetParametersOutput() ApplicationSpecSourceKsonnetParametersOutput
	ToApplicationSpecSourceKsonnetParametersOutputWithContext(context.Context) ApplicationSpecSourceKsonnetParametersOutput
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationSpecSourceKsonnetParametersArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Value     pulumi.StringInput    `pulumi:"value"`
}

func (ApplicationSpecSourceKsonnetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationSpecSourceKsonnetParametersArgs) ToApplicationSpecSourceKsonnetParametersOutput() ApplicationSpecSourceKsonnetParametersOutput {
	return i.ToApplicationSpecSourceKsonnetParametersOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKsonnetParametersArgs) ToApplicationSpecSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKsonnetParametersOutput)
}

// ApplicationSpecSourceKsonnetParametersArrayInput is an input type that accepts ApplicationSpecSourceKsonnetParametersArray and ApplicationSpecSourceKsonnetParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKsonnetParametersArrayInput` via:
//
//          ApplicationSpecSourceKsonnetParametersArray{ ApplicationSpecSourceKsonnetParametersArgs{...} }
type ApplicationSpecSourceKsonnetParametersArrayInput interface {
	pulumi.Input

	ToApplicationSpecSourceKsonnetParametersArrayOutput() ApplicationSpecSourceKsonnetParametersArrayOutput
	ToApplicationSpecSourceKsonnetParametersArrayOutputWithContext(context.Context) ApplicationSpecSourceKsonnetParametersArrayOutput
}

type ApplicationSpecSourceKsonnetParametersArray []ApplicationSpecSourceKsonnetParametersInput

func (ApplicationSpecSourceKsonnetParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationSpecSourceKsonnetParametersArray) ToApplicationSpecSourceKsonnetParametersArrayOutput() ApplicationSpecSourceKsonnetParametersArrayOutput {
	return i.ToApplicationSpecSourceKsonnetParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKsonnetParametersArray) ToApplicationSpecSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationSpecSourceKsonnetParametersOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKsonnetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationSpecSourceKsonnetParametersOutput) ToApplicationSpecSourceKsonnetParametersOutput() ApplicationSpecSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetParametersOutput) ToApplicationSpecSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetParametersOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKsonnetParameters) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ApplicationSpecSourceKsonnetParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKsonnetParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationSpecSourceKsonnetParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKsonnetParameters) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSpecSourceKsonnetParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKsonnetParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationSpecSourceKsonnetParametersArrayOutput) ToApplicationSpecSourceKsonnetParametersArrayOutput() ApplicationSpecSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetParametersArrayOutput) ToApplicationSpecSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationSpecSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationSpecSourceKsonnetParametersArrayOutput) Index(i pulumi.IntInput) ApplicationSpecSourceKsonnetParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecSourceKsonnetParameters {
		return vs[0].([]ApplicationSpecSourceKsonnetParameters)[vs[1].(int)]
	}).(ApplicationSpecSourceKsonnetParametersOutput)
}

// Kustomize holds kustomize specific options
type ApplicationSpecSourceKustomize struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images []string `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `pulumi:"version"`
}

// ApplicationSpecSourceKustomizeInput is an input type that accepts ApplicationSpecSourceKustomizeArgs and ApplicationSpecSourceKustomizeOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKustomizeInput` via:
//
//          ApplicationSpecSourceKustomizeArgs{...}
type ApplicationSpecSourceKustomizeInput interface {
	pulumi.Input

	ToApplicationSpecSourceKustomizeOutput() ApplicationSpecSourceKustomizeOutput
	ToApplicationSpecSourceKustomizeOutputWithContext(context.Context) ApplicationSpecSourceKustomizeOutput
}

// Kustomize holds kustomize specific options
type ApplicationSpecSourceKustomizeArgs struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images pulumi.StringArrayInput `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationSpecSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i ApplicationSpecSourceKustomizeArgs) ToApplicationSpecSourceKustomizeOutput() ApplicationSpecSourceKustomizeOutput {
	return i.ToApplicationSpecSourceKustomizeOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKustomizeArgs) ToApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKustomizeOutput)
}

func (i ApplicationSpecSourceKustomizeArgs) ToApplicationSpecSourceKustomizePtrOutput() ApplicationSpecSourceKustomizePtrOutput {
	return i.ToApplicationSpecSourceKustomizePtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKustomizeArgs) ToApplicationSpecSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKustomizeOutput).ToApplicationSpecSourceKustomizePtrOutputWithContext(ctx)
}

// ApplicationSpecSourceKustomizePtrInput is an input type that accepts ApplicationSpecSourceKustomizeArgs, ApplicationSpecSourceKustomizePtr and ApplicationSpecSourceKustomizePtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKustomizePtrInput` via:
//
//          ApplicationSpecSourceKustomizeArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourceKustomizePtrInput interface {
	pulumi.Input

	ToApplicationSpecSourceKustomizePtrOutput() ApplicationSpecSourceKustomizePtrOutput
	ToApplicationSpecSourceKustomizePtrOutputWithContext(context.Context) ApplicationSpecSourceKustomizePtrOutput
}

type applicationSpecSourceKustomizePtrType ApplicationSpecSourceKustomizeArgs

func ApplicationSpecSourceKustomizePtr(v *ApplicationSpecSourceKustomizeArgs) ApplicationSpecSourceKustomizePtrInput {
	return (*applicationSpecSourceKustomizePtrType)(v)
}

func (*applicationSpecSourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i *applicationSpecSourceKustomizePtrType) ToApplicationSpecSourceKustomizePtrOutput() ApplicationSpecSourceKustomizePtrOutput {
	return i.ToApplicationSpecSourceKustomizePtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourceKustomizePtrType) ToApplicationSpecSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKustomizePtrOutput)
}

// Kustomize holds kustomize specific options
type ApplicationSpecSourceKustomizeOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o ApplicationSpecSourceKustomizeOutput) ToApplicationSpecSourceKustomizeOutput() ApplicationSpecSourceKustomizeOutput {
	return o
}

func (o ApplicationSpecSourceKustomizeOutput) ToApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizeOutput {
	return o
}

func (o ApplicationSpecSourceKustomizeOutput) ToApplicationSpecSourceKustomizePtrOutput() ApplicationSpecSourceKustomizePtrOutput {
	return o.ToApplicationSpecSourceKustomizePtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourceKustomizeOutput) ToApplicationSpecSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) *ApplicationSpecSourceKustomize {
		return &v
	}).(ApplicationSpecSourceKustomizePtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationSpecSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) map[string]string { return v.CommonAnnotations }).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationSpecSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationSpecSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationSpecSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationSpecSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationSpecSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o ApplicationSpecSourceKustomizePtrOutput) ToApplicationSpecSourceKustomizePtrOutput() ApplicationSpecSourceKustomizePtrOutput {
	return o
}

func (o ApplicationSpecSourceKustomizePtrOutput) ToApplicationSpecSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizePtrOutput {
	return o
}

func (o ApplicationSpecSourceKustomizePtrOutput) Elem() ApplicationSpecSourceKustomizeOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) ApplicationSpecSourceKustomize { return *v }).(ApplicationSpecSourceKustomizeOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationSpecSourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationSpecSourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationSpecSourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationSpecSourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationSpecSourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationSpecSourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationSpecSourceKustomizeCommonAnnotations struct {
}

// ApplicationSpecSourceKustomizeCommonAnnotationsInput is an input type that accepts ApplicationSpecSourceKustomizeCommonAnnotationsArgs and ApplicationSpecSourceKustomizeCommonAnnotationsOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKustomizeCommonAnnotationsInput` via:
//
//          ApplicationSpecSourceKustomizeCommonAnnotationsArgs{...}
type ApplicationSpecSourceKustomizeCommonAnnotationsInput interface {
	pulumi.Input

	ToApplicationSpecSourceKustomizeCommonAnnotationsOutput() ApplicationSpecSourceKustomizeCommonAnnotationsOutput
	ToApplicationSpecSourceKustomizeCommonAnnotationsOutputWithContext(context.Context) ApplicationSpecSourceKustomizeCommonAnnotationsOutput
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationSpecSourceKustomizeCommonAnnotationsArgs struct {
}

func (ApplicationSpecSourceKustomizeCommonAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (i ApplicationSpecSourceKustomizeCommonAnnotationsArgs) ToApplicationSpecSourceKustomizeCommonAnnotationsOutput() ApplicationSpecSourceKustomizeCommonAnnotationsOutput {
	return i.ToApplicationSpecSourceKustomizeCommonAnnotationsOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKustomizeCommonAnnotationsArgs) ToApplicationSpecSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizeCommonAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKustomizeCommonAnnotationsOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationSpecSourceKustomizeCommonAnnotationsOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKustomizeCommonAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (o ApplicationSpecSourceKustomizeCommonAnnotationsOutput) ToApplicationSpecSourceKustomizeCommonAnnotationsOutput() ApplicationSpecSourceKustomizeCommonAnnotationsOutput {
	return o
}

func (o ApplicationSpecSourceKustomizeCommonAnnotationsOutput) ToApplicationSpecSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizeCommonAnnotationsOutput {
	return o
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationSpecSourceKustomizeCommonLabels struct {
}

// ApplicationSpecSourceKustomizeCommonLabelsInput is an input type that accepts ApplicationSpecSourceKustomizeCommonLabelsArgs and ApplicationSpecSourceKustomizeCommonLabelsOutput values.
// You can construct a concrete instance of `ApplicationSpecSourceKustomizeCommonLabelsInput` via:
//
//          ApplicationSpecSourceKustomizeCommonLabelsArgs{...}
type ApplicationSpecSourceKustomizeCommonLabelsInput interface {
	pulumi.Input

	ToApplicationSpecSourceKustomizeCommonLabelsOutput() ApplicationSpecSourceKustomizeCommonLabelsOutput
	ToApplicationSpecSourceKustomizeCommonLabelsOutputWithContext(context.Context) ApplicationSpecSourceKustomizeCommonLabelsOutput
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationSpecSourceKustomizeCommonLabelsArgs struct {
}

func (ApplicationSpecSourceKustomizeCommonLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKustomizeCommonLabels)(nil)).Elem()
}

func (i ApplicationSpecSourceKustomizeCommonLabelsArgs) ToApplicationSpecSourceKustomizeCommonLabelsOutput() ApplicationSpecSourceKustomizeCommonLabelsOutput {
	return i.ToApplicationSpecSourceKustomizeCommonLabelsOutputWithContext(context.Background())
}

func (i ApplicationSpecSourceKustomizeCommonLabelsArgs) ToApplicationSpecSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizeCommonLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourceKustomizeCommonLabelsOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationSpecSourceKustomizeCommonLabelsOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourceKustomizeCommonLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourceKustomizeCommonLabels)(nil)).Elem()
}

func (o ApplicationSpecSourceKustomizeCommonLabelsOutput) ToApplicationSpecSourceKustomizeCommonLabelsOutput() ApplicationSpecSourceKustomizeCommonLabelsOutput {
	return o
}

func (o ApplicationSpecSourceKustomizeCommonLabelsOutput) ToApplicationSpecSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationSpecSourceKustomizeCommonLabelsOutput {
	return o
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationSpecSourcePlugin struct {
	// Env is a list of environment variable entries
	Env  []ApplicationSpecSourcePluginEnv `pulumi:"env"`
	Name *string                          `pulumi:"name"`
}

// ApplicationSpecSourcePluginInput is an input type that accepts ApplicationSpecSourcePluginArgs and ApplicationSpecSourcePluginOutput values.
// You can construct a concrete instance of `ApplicationSpecSourcePluginInput` via:
//
//          ApplicationSpecSourcePluginArgs{...}
type ApplicationSpecSourcePluginInput interface {
	pulumi.Input

	ToApplicationSpecSourcePluginOutput() ApplicationSpecSourcePluginOutput
	ToApplicationSpecSourcePluginOutputWithContext(context.Context) ApplicationSpecSourcePluginOutput
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationSpecSourcePluginArgs struct {
	// Env is a list of environment variable entries
	Env  ApplicationSpecSourcePluginEnvArrayInput `pulumi:"env"`
	Name pulumi.StringPtrInput                    `pulumi:"name"`
}

func (ApplicationSpecSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i ApplicationSpecSourcePluginArgs) ToApplicationSpecSourcePluginOutput() ApplicationSpecSourcePluginOutput {
	return i.ToApplicationSpecSourcePluginOutputWithContext(context.Background())
}

func (i ApplicationSpecSourcePluginArgs) ToApplicationSpecSourcePluginOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourcePluginOutput)
}

func (i ApplicationSpecSourcePluginArgs) ToApplicationSpecSourcePluginPtrOutput() ApplicationSpecSourcePluginPtrOutput {
	return i.ToApplicationSpecSourcePluginPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSourcePluginArgs) ToApplicationSpecSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourcePluginOutput).ToApplicationSpecSourcePluginPtrOutputWithContext(ctx)
}

// ApplicationSpecSourcePluginPtrInput is an input type that accepts ApplicationSpecSourcePluginArgs, ApplicationSpecSourcePluginPtr and ApplicationSpecSourcePluginPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSourcePluginPtrInput` via:
//
//          ApplicationSpecSourcePluginArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSourcePluginPtrInput interface {
	pulumi.Input

	ToApplicationSpecSourcePluginPtrOutput() ApplicationSpecSourcePluginPtrOutput
	ToApplicationSpecSourcePluginPtrOutputWithContext(context.Context) ApplicationSpecSourcePluginPtrOutput
}

type applicationSpecSourcePluginPtrType ApplicationSpecSourcePluginArgs

func ApplicationSpecSourcePluginPtr(v *ApplicationSpecSourcePluginArgs) ApplicationSpecSourcePluginPtrInput {
	return (*applicationSpecSourcePluginPtrType)(v)
}

func (*applicationSpecSourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i *applicationSpecSourcePluginPtrType) ToApplicationSpecSourcePluginPtrOutput() ApplicationSpecSourcePluginPtrOutput {
	return i.ToApplicationSpecSourcePluginPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSourcePluginPtrType) ToApplicationSpecSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourcePluginPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationSpecSourcePluginOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o ApplicationSpecSourcePluginOutput) ToApplicationSpecSourcePluginOutput() ApplicationSpecSourcePluginOutput {
	return o
}

func (o ApplicationSpecSourcePluginOutput) ToApplicationSpecSourcePluginOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginOutput {
	return o
}

func (o ApplicationSpecSourcePluginOutput) ToApplicationSpecSourcePluginPtrOutput() ApplicationSpecSourcePluginPtrOutput {
	return o.ToApplicationSpecSourcePluginPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSourcePluginOutput) ToApplicationSpecSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourcePlugin) *ApplicationSpecSourcePlugin {
		return &v
	}).(ApplicationSpecSourcePluginPtrOutput)
}

// Env is a list of environment variable entries
func (o ApplicationSpecSourcePluginOutput) Env() ApplicationSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSourcePlugin) []ApplicationSpecSourcePluginEnv { return v.Env }).(ApplicationSpecSourcePluginEnvArrayOutput)
}

func (o ApplicationSpecSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSourcePluginPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o ApplicationSpecSourcePluginPtrOutput) ToApplicationSpecSourcePluginPtrOutput() ApplicationSpecSourcePluginPtrOutput {
	return o
}

func (o ApplicationSpecSourcePluginPtrOutput) ToApplicationSpecSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginPtrOutput {
	return o
}

func (o ApplicationSpecSourcePluginPtrOutput) Elem() ApplicationSpecSourcePluginOutput {
	return o.ApplyT(func(v *ApplicationSpecSourcePlugin) ApplicationSpecSourcePlugin { return *v }).(ApplicationSpecSourcePluginOutput)
}

// Env is a list of environment variable entries
func (o ApplicationSpecSourcePluginPtrOutput) Env() ApplicationSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSourcePlugin) []ApplicationSpecSourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(ApplicationSpecSourcePluginEnvArrayOutput)
}

func (o ApplicationSpecSourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationSpecSourcePluginEnv struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name string `pulumi:"name"`
	// Value is the value of the variable
	Value string `pulumi:"value"`
}

// ApplicationSpecSourcePluginEnvInput is an input type that accepts ApplicationSpecSourcePluginEnvArgs and ApplicationSpecSourcePluginEnvOutput values.
// You can construct a concrete instance of `ApplicationSpecSourcePluginEnvInput` via:
//
//          ApplicationSpecSourcePluginEnvArgs{...}
type ApplicationSpecSourcePluginEnvInput interface {
	pulumi.Input

	ToApplicationSpecSourcePluginEnvOutput() ApplicationSpecSourcePluginEnvOutput
	ToApplicationSpecSourcePluginEnvOutputWithContext(context.Context) ApplicationSpecSourcePluginEnvOutput
}

// EnvEntry represents an entry in the application's environment
type ApplicationSpecSourcePluginEnvArgs struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name pulumi.StringInput `pulumi:"name"`
	// Value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationSpecSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationSpecSourcePluginEnvArgs) ToApplicationSpecSourcePluginEnvOutput() ApplicationSpecSourcePluginEnvOutput {
	return i.ToApplicationSpecSourcePluginEnvOutputWithContext(context.Background())
}

func (i ApplicationSpecSourcePluginEnvArgs) ToApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourcePluginEnvOutput)
}

// ApplicationSpecSourcePluginEnvArrayInput is an input type that accepts ApplicationSpecSourcePluginEnvArray and ApplicationSpecSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecSourcePluginEnvArrayInput` via:
//
//          ApplicationSpecSourcePluginEnvArray{ ApplicationSpecSourcePluginEnvArgs{...} }
type ApplicationSpecSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToApplicationSpecSourcePluginEnvArrayOutput() ApplicationSpecSourcePluginEnvArrayOutput
	ToApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Context) ApplicationSpecSourcePluginEnvArrayOutput
}

type ApplicationSpecSourcePluginEnvArray []ApplicationSpecSourcePluginEnvInput

func (ApplicationSpecSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationSpecSourcePluginEnvArray) ToApplicationSpecSourcePluginEnvArrayOutput() ApplicationSpecSourcePluginEnvArrayOutput {
	return i.ToApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecSourcePluginEnvArray) ToApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSourcePluginEnvArrayOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationSpecSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationSpecSourcePluginEnvOutput) ToApplicationSpecSourcePluginEnvOutput() ApplicationSpecSourcePluginEnvOutput {
	return o
}

func (o ApplicationSpecSourcePluginEnvOutput) ToApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginEnvOutput {
	return o
}

// Name is the name of the variable, usually expressed in uppercase
func (o ApplicationSpecSourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value is the value of the variable
func (o ApplicationSpecSourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecSourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSpecSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationSpecSourcePluginEnvArrayOutput) ToApplicationSpecSourcePluginEnvArrayOutput() ApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationSpecSourcePluginEnvArrayOutput) ToApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationSpecSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) ApplicationSpecSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecSourcePluginEnv {
		return vs[0].([]ApplicationSpecSourcePluginEnv)[vs[1].(int)]
	}).(ApplicationSpecSourcePluginEnvOutput)
}

// SyncPolicy controls when and how a sync will be performed
type ApplicationSpecSyncPolicy struct {
	// Automated will keep an application synced to the target revision
	Automated *ApplicationSpecSyncPolicyAutomated `pulumi:"automated"`
	// Retry controls failed sync retry behavior
	Retry *ApplicationSpecSyncPolicyRetry `pulumi:"retry"`
	// Options allow you to specify whole app sync-options
	SyncOptions []string `pulumi:"syncOptions"`
}

// ApplicationSpecSyncPolicyInput is an input type that accepts ApplicationSpecSyncPolicyArgs and ApplicationSpecSyncPolicyOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyInput` via:
//
//          ApplicationSpecSyncPolicyArgs{...}
type ApplicationSpecSyncPolicyInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyOutput() ApplicationSpecSyncPolicyOutput
	ToApplicationSpecSyncPolicyOutputWithContext(context.Context) ApplicationSpecSyncPolicyOutput
}

// SyncPolicy controls when and how a sync will be performed
type ApplicationSpecSyncPolicyArgs struct {
	// Automated will keep an application synced to the target revision
	Automated ApplicationSpecSyncPolicyAutomatedPtrInput `pulumi:"automated"`
	// Retry controls failed sync retry behavior
	Retry ApplicationSpecSyncPolicyRetryPtrInput `pulumi:"retry"`
	// Options allow you to specify whole app sync-options
	SyncOptions pulumi.StringArrayInput `pulumi:"syncOptions"`
}

func (ApplicationSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i ApplicationSpecSyncPolicyArgs) ToApplicationSpecSyncPolicyOutput() ApplicationSpecSyncPolicyOutput {
	return i.ToApplicationSpecSyncPolicyOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyArgs) ToApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyOutput)
}

func (i ApplicationSpecSyncPolicyArgs) ToApplicationSpecSyncPolicyPtrOutput() ApplicationSpecSyncPolicyPtrOutput {
	return i.ToApplicationSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyArgs) ToApplicationSpecSyncPolicyPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyOutput).ToApplicationSpecSyncPolicyPtrOutputWithContext(ctx)
}

// ApplicationSpecSyncPolicyPtrInput is an input type that accepts ApplicationSpecSyncPolicyArgs, ApplicationSpecSyncPolicyPtr and ApplicationSpecSyncPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyPtrInput` via:
//
//          ApplicationSpecSyncPolicyArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSyncPolicyPtrInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyPtrOutput() ApplicationSpecSyncPolicyPtrOutput
	ToApplicationSpecSyncPolicyPtrOutputWithContext(context.Context) ApplicationSpecSyncPolicyPtrOutput
}

type applicationSpecSyncPolicyPtrType ApplicationSpecSyncPolicyArgs

func ApplicationSpecSyncPolicyPtr(v *ApplicationSpecSyncPolicyArgs) ApplicationSpecSyncPolicyPtrInput {
	return (*applicationSpecSyncPolicyPtrType)(v)
}

func (*applicationSpecSyncPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i *applicationSpecSyncPolicyPtrType) ToApplicationSpecSyncPolicyPtrOutput() ApplicationSpecSyncPolicyPtrOutput {
	return i.ToApplicationSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSyncPolicyPtrType) ToApplicationSpecSyncPolicyPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyPtrOutput)
}

// SyncPolicy controls when and how a sync will be performed
type ApplicationSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyOutput) ToApplicationSpecSyncPolicyOutput() ApplicationSpecSyncPolicyOutput {
	return o
}

func (o ApplicationSpecSyncPolicyOutput) ToApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyOutput {
	return o
}

func (o ApplicationSpecSyncPolicyOutput) ToApplicationSpecSyncPolicyPtrOutput() ApplicationSpecSyncPolicyPtrOutput {
	return o.ToApplicationSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSyncPolicyOutput) ToApplicationSpecSyncPolicyPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicy) *ApplicationSpecSyncPolicy {
		return &v
	}).(ApplicationSpecSyncPolicyPtrOutput)
}

// Automated will keep an application synced to the target revision
func (o ApplicationSpecSyncPolicyOutput) Automated() ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicy) *ApplicationSpecSyncPolicyAutomated { return v.Automated }).(ApplicationSpecSyncPolicyAutomatedPtrOutput)
}

// Retry controls failed sync retry behavior
func (o ApplicationSpecSyncPolicyOutput) Retry() ApplicationSpecSyncPolicyRetryPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicy) *ApplicationSpecSyncPolicyRetry { return v.Retry }).(ApplicationSpecSyncPolicyRetryPtrOutput)
}

// Options allow you to specify whole app sync-options
func (o ApplicationSpecSyncPolicyOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicy) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

type ApplicationSpecSyncPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyPtrOutput) ToApplicationSpecSyncPolicyPtrOutput() ApplicationSpecSyncPolicyPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyPtrOutput) ToApplicationSpecSyncPolicyPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyPtrOutput) Elem() ApplicationSpecSyncPolicyOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicy) ApplicationSpecSyncPolicy { return *v }).(ApplicationSpecSyncPolicyOutput)
}

// Automated will keep an application synced to the target revision
func (o ApplicationSpecSyncPolicyPtrOutput) Automated() ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicy) *ApplicationSpecSyncPolicyAutomated {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(ApplicationSpecSyncPolicyAutomatedPtrOutput)
}

// Retry controls failed sync retry behavior
func (o ApplicationSpecSyncPolicyPtrOutput) Retry() ApplicationSpecSyncPolicyRetryPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicy) *ApplicationSpecSyncPolicyRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(ApplicationSpecSyncPolicyRetryPtrOutput)
}

// Options allow you to specify whole app sync-options
func (o ApplicationSpecSyncPolicyPtrOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicy) []string {
		if v == nil {
			return nil
		}
		return v.SyncOptions
	}).(pulumi.StringArrayOutput)
}

// Automated will keep an application synced to the target revision
type ApplicationSpecSyncPolicyAutomated struct {
	// AllowEmpty allows apps have zero live resources (default: false)
	AllowEmpty *bool `pulumi:"allowEmpty"`
	// Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
	Prune *bool `pulumi:"prune"`
	// SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)
	SelfHeal *bool `pulumi:"selfHeal"`
}

// ApplicationSpecSyncPolicyAutomatedInput is an input type that accepts ApplicationSpecSyncPolicyAutomatedArgs and ApplicationSpecSyncPolicyAutomatedOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyAutomatedInput` via:
//
//          ApplicationSpecSyncPolicyAutomatedArgs{...}
type ApplicationSpecSyncPolicyAutomatedInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyAutomatedOutput() ApplicationSpecSyncPolicyAutomatedOutput
	ToApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Context) ApplicationSpecSyncPolicyAutomatedOutput
}

// Automated will keep an application synced to the target revision
type ApplicationSpecSyncPolicyAutomatedArgs struct {
	// AllowEmpty allows apps have zero live resources (default: false)
	AllowEmpty pulumi.BoolPtrInput `pulumi:"allowEmpty"`
	// Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
	Prune pulumi.BoolPtrInput `pulumi:"prune"`
	// SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)
	SelfHeal pulumi.BoolPtrInput `pulumi:"selfHeal"`
}

func (ApplicationSpecSyncPolicyAutomatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i ApplicationSpecSyncPolicyAutomatedArgs) ToApplicationSpecSyncPolicyAutomatedOutput() ApplicationSpecSyncPolicyAutomatedOutput {
	return i.ToApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyAutomatedArgs) ToApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyAutomatedOutput)
}

func (i ApplicationSpecSyncPolicyAutomatedArgs) ToApplicationSpecSyncPolicyAutomatedPtrOutput() ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return i.ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyAutomatedArgs) ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyAutomatedOutput).ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(ctx)
}

// ApplicationSpecSyncPolicyAutomatedPtrInput is an input type that accepts ApplicationSpecSyncPolicyAutomatedArgs, ApplicationSpecSyncPolicyAutomatedPtr and ApplicationSpecSyncPolicyAutomatedPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyAutomatedPtrInput` via:
//
//          ApplicationSpecSyncPolicyAutomatedArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSyncPolicyAutomatedPtrInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyAutomatedPtrOutput() ApplicationSpecSyncPolicyAutomatedPtrOutput
	ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(context.Context) ApplicationSpecSyncPolicyAutomatedPtrOutput
}

type applicationSpecSyncPolicyAutomatedPtrType ApplicationSpecSyncPolicyAutomatedArgs

func ApplicationSpecSyncPolicyAutomatedPtr(v *ApplicationSpecSyncPolicyAutomatedArgs) ApplicationSpecSyncPolicyAutomatedPtrInput {
	return (*applicationSpecSyncPolicyAutomatedPtrType)(v)
}

func (*applicationSpecSyncPolicyAutomatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i *applicationSpecSyncPolicyAutomatedPtrType) ToApplicationSpecSyncPolicyAutomatedPtrOutput() ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return i.ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSyncPolicyAutomatedPtrType) ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyAutomatedPtrOutput)
}

// Automated will keep an application synced to the target revision
type ApplicationSpecSyncPolicyAutomatedOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyAutomatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyAutomatedOutput) ToApplicationSpecSyncPolicyAutomatedOutput() ApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o ApplicationSpecSyncPolicyAutomatedOutput) ToApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o ApplicationSpecSyncPolicyAutomatedOutput) ToApplicationSpecSyncPolicyAutomatedPtrOutput() ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return o.ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSyncPolicyAutomatedOutput) ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyAutomated) *ApplicationSpecSyncPolicyAutomated {
		return &v
	}).(ApplicationSpecSyncPolicyAutomatedPtrOutput)
}

// AllowEmpty allows apps have zero live resources (default: false)
func (o ApplicationSpecSyncPolicyAutomatedOutput) AllowEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyAutomated) *bool { return v.AllowEmpty }).(pulumi.BoolPtrOutput)
}

// Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
func (o ApplicationSpecSyncPolicyAutomatedOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyAutomated) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

// SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)
func (o ApplicationSpecSyncPolicyAutomatedOutput) SelfHeal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyAutomated) *bool { return v.SelfHeal }).(pulumi.BoolPtrOutput)
}

type ApplicationSpecSyncPolicyAutomatedPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyAutomatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyAutomatedPtrOutput) ToApplicationSpecSyncPolicyAutomatedPtrOutput() ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyAutomatedPtrOutput) ToApplicationSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyAutomatedPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyAutomatedPtrOutput) Elem() ApplicationSpecSyncPolicyAutomatedOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyAutomated) ApplicationSpecSyncPolicyAutomated { return *v }).(ApplicationSpecSyncPolicyAutomatedOutput)
}

// AllowEmpty allows apps have zero live resources (default: false)
func (o ApplicationSpecSyncPolicyAutomatedPtrOutput) AllowEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyAutomated) *bool {
		if v == nil {
			return nil
		}
		return v.AllowEmpty
	}).(pulumi.BoolPtrOutput)
}

// Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
func (o ApplicationSpecSyncPolicyAutomatedPtrOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyAutomated) *bool {
		if v == nil {
			return nil
		}
		return v.Prune
	}).(pulumi.BoolPtrOutput)
}

// SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)
func (o ApplicationSpecSyncPolicyAutomatedPtrOutput) SelfHeal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyAutomated) *bool {
		if v == nil {
			return nil
		}
		return v.SelfHeal
	}).(pulumi.BoolPtrOutput)
}

// Retry controls failed sync retry behavior
type ApplicationSpecSyncPolicyRetry struct {
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff *ApplicationSpecSyncPolicyRetryBackoff `pulumi:"backoff"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit *int `pulumi:"limit"`
}

// ApplicationSpecSyncPolicyRetryInput is an input type that accepts ApplicationSpecSyncPolicyRetryArgs and ApplicationSpecSyncPolicyRetryOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyRetryInput` via:
//
//          ApplicationSpecSyncPolicyRetryArgs{...}
type ApplicationSpecSyncPolicyRetryInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyRetryOutput() ApplicationSpecSyncPolicyRetryOutput
	ToApplicationSpecSyncPolicyRetryOutputWithContext(context.Context) ApplicationSpecSyncPolicyRetryOutput
}

// Retry controls failed sync retry behavior
type ApplicationSpecSyncPolicyRetryArgs struct {
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff ApplicationSpecSyncPolicyRetryBackoffPtrInput `pulumi:"backoff"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (ApplicationSpecSyncPolicyRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i ApplicationSpecSyncPolicyRetryArgs) ToApplicationSpecSyncPolicyRetryOutput() ApplicationSpecSyncPolicyRetryOutput {
	return i.ToApplicationSpecSyncPolicyRetryOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyRetryArgs) ToApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyRetryOutput)
}

func (i ApplicationSpecSyncPolicyRetryArgs) ToApplicationSpecSyncPolicyRetryPtrOutput() ApplicationSpecSyncPolicyRetryPtrOutput {
	return i.ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyRetryArgs) ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyRetryOutput).ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(ctx)
}

// ApplicationSpecSyncPolicyRetryPtrInput is an input type that accepts ApplicationSpecSyncPolicyRetryArgs, ApplicationSpecSyncPolicyRetryPtr and ApplicationSpecSyncPolicyRetryPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyRetryPtrInput` via:
//
//          ApplicationSpecSyncPolicyRetryArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSyncPolicyRetryPtrInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyRetryPtrOutput() ApplicationSpecSyncPolicyRetryPtrOutput
	ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(context.Context) ApplicationSpecSyncPolicyRetryPtrOutput
}

type applicationSpecSyncPolicyRetryPtrType ApplicationSpecSyncPolicyRetryArgs

func ApplicationSpecSyncPolicyRetryPtr(v *ApplicationSpecSyncPolicyRetryArgs) ApplicationSpecSyncPolicyRetryPtrInput {
	return (*applicationSpecSyncPolicyRetryPtrType)(v)
}

func (*applicationSpecSyncPolicyRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i *applicationSpecSyncPolicyRetryPtrType) ToApplicationSpecSyncPolicyRetryPtrOutput() ApplicationSpecSyncPolicyRetryPtrOutput {
	return i.ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSyncPolicyRetryPtrType) ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyRetryPtrOutput)
}

// Retry controls failed sync retry behavior
type ApplicationSpecSyncPolicyRetryOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyRetryOutput) ToApplicationSpecSyncPolicyRetryOutput() ApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryOutput) ToApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryOutput) ToApplicationSpecSyncPolicyRetryPtrOutput() ApplicationSpecSyncPolicyRetryPtrOutput {
	return o.ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSyncPolicyRetryOutput) ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetry) *ApplicationSpecSyncPolicyRetry {
		return &v
	}).(ApplicationSpecSyncPolicyRetryPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
func (o ApplicationSpecSyncPolicyRetryOutput) Backoff() ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetry) *ApplicationSpecSyncPolicyRetryBackoff { return v.Backoff }).(ApplicationSpecSyncPolicyRetryBackoffPtrOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o ApplicationSpecSyncPolicyRetryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetry) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type ApplicationSpecSyncPolicyRetryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyRetryPtrOutput) ToApplicationSpecSyncPolicyRetryPtrOutput() ApplicationSpecSyncPolicyRetryPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryPtrOutput) ToApplicationSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryPtrOutput) Elem() ApplicationSpecSyncPolicyRetryOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetry) ApplicationSpecSyncPolicyRetry { return *v }).(ApplicationSpecSyncPolicyRetryOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
func (o ApplicationSpecSyncPolicyRetryPtrOutput) Backoff() ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetry) *ApplicationSpecSyncPolicyRetryBackoff {
		if v == nil {
			return nil
		}
		return v.Backoff
	}).(ApplicationSpecSyncPolicyRetryBackoffPtrOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o ApplicationSpecSyncPolicyRetryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetry) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationSpecSyncPolicyRetryBackoff struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration *string `pulumi:"duration"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor *int `pulumi:"factor"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration *string `pulumi:"maxDuration"`
}

// ApplicationSpecSyncPolicyRetryBackoffInput is an input type that accepts ApplicationSpecSyncPolicyRetryBackoffArgs and ApplicationSpecSyncPolicyRetryBackoffOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyRetryBackoffInput` via:
//
//          ApplicationSpecSyncPolicyRetryBackoffArgs{...}
type ApplicationSpecSyncPolicyRetryBackoffInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyRetryBackoffOutput() ApplicationSpecSyncPolicyRetryBackoffOutput
	ToApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Context) ApplicationSpecSyncPolicyRetryBackoffOutput
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationSpecSyncPolicyRetryBackoffArgs struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor pulumi.IntPtrInput `pulumi:"factor"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration pulumi.StringPtrInput `pulumi:"maxDuration"`
}

func (ApplicationSpecSyncPolicyRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i ApplicationSpecSyncPolicyRetryBackoffArgs) ToApplicationSpecSyncPolicyRetryBackoffOutput() ApplicationSpecSyncPolicyRetryBackoffOutput {
	return i.ToApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyRetryBackoffArgs) ToApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyRetryBackoffOutput)
}

func (i ApplicationSpecSyncPolicyRetryBackoffArgs) ToApplicationSpecSyncPolicyRetryBackoffPtrOutput() ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return i.ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecSyncPolicyRetryBackoffArgs) ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyRetryBackoffOutput).ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx)
}

// ApplicationSpecSyncPolicyRetryBackoffPtrInput is an input type that accepts ApplicationSpecSyncPolicyRetryBackoffArgs, ApplicationSpecSyncPolicyRetryBackoffPtr and ApplicationSpecSyncPolicyRetryBackoffPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecSyncPolicyRetryBackoffPtrInput` via:
//
//          ApplicationSpecSyncPolicyRetryBackoffArgs{...}
//
//  or:
//
//          nil
type ApplicationSpecSyncPolicyRetryBackoffPtrInput interface {
	pulumi.Input

	ToApplicationSpecSyncPolicyRetryBackoffPtrOutput() ApplicationSpecSyncPolicyRetryBackoffPtrOutput
	ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Context) ApplicationSpecSyncPolicyRetryBackoffPtrOutput
}

type applicationSpecSyncPolicyRetryBackoffPtrType ApplicationSpecSyncPolicyRetryBackoffArgs

func ApplicationSpecSyncPolicyRetryBackoffPtr(v *ApplicationSpecSyncPolicyRetryBackoffArgs) ApplicationSpecSyncPolicyRetryBackoffPtrInput {
	return (*applicationSpecSyncPolicyRetryBackoffPtrType)(v)
}

func (*applicationSpecSyncPolicyRetryBackoffPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i *applicationSpecSyncPolicyRetryBackoffPtrType) ToApplicationSpecSyncPolicyRetryBackoffPtrOutput() ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return i.ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Background())
}

func (i *applicationSpecSyncPolicyRetryBackoffPtrType) ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecSyncPolicyRetryBackoffPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationSpecSyncPolicyRetryBackoffOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyRetryBackoffOutput) ToApplicationSpecSyncPolicyRetryBackoffOutput() ApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryBackoffOutput) ToApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryBackoffOutput) ToApplicationSpecSyncPolicyRetryBackoffPtrOutput() ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecSyncPolicyRetryBackoffOutput) ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetryBackoff) *ApplicationSpecSyncPolicyRetryBackoff {
		return &v
	}).(ApplicationSpecSyncPolicyRetryBackoffPtrOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
func (o ApplicationSpecSyncPolicyRetryBackoffOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetryBackoff) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Factor is a factor to multiply the base duration after each failed retry
func (o ApplicationSpecSyncPolicyRetryBackoffOutput) Factor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetryBackoff) *int { return v.Factor }).(pulumi.IntPtrOutput)
}

// MaxDuration is the maximum amount of time allowed for the backoff strategy
func (o ApplicationSpecSyncPolicyRetryBackoffOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecSyncPolicyRetryBackoff) *string { return v.MaxDuration }).(pulumi.StringPtrOutput)
}

type ApplicationSpecSyncPolicyRetryBackoffPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecSyncPolicyRetryBackoffPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o ApplicationSpecSyncPolicyRetryBackoffPtrOutput) ToApplicationSpecSyncPolicyRetryBackoffPtrOutput() ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryBackoffPtrOutput) ToApplicationSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationSpecSyncPolicyRetryBackoffPtrOutput {
	return o
}

func (o ApplicationSpecSyncPolicyRetryBackoffPtrOutput) Elem() ApplicationSpecSyncPolicyRetryBackoffOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetryBackoff) ApplicationSpecSyncPolicyRetryBackoff { return *v }).(ApplicationSpecSyncPolicyRetryBackoffOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
func (o ApplicationSpecSyncPolicyRetryBackoffPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Factor is a factor to multiply the base duration after each failed retry
func (o ApplicationSpecSyncPolicyRetryBackoffPtrOutput) Factor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetryBackoff) *int {
		if v == nil {
			return nil
		}
		return v.Factor
	}).(pulumi.IntPtrOutput)
}

// MaxDuration is the maximum amount of time allowed for the backoff strategy
func (o ApplicationSpecSyncPolicyRetryBackoffPtrOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecSyncPolicyRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.MaxDuration
	}).(pulumi.StringPtrOutput)
}

// ApplicationStatus contains status information for the application
type ApplicationStatus struct {
	// Conditions is a list of currently observed application conditions
	Conditions []ApplicationStatusConditions `pulumi:"conditions"`
	// Health contains information about the application's current health status
	Health *ApplicationStatusHealth `pulumi:"health"`
	// History contains information about the application's sync history
	History []ApplicationStatusHistory `pulumi:"history"`
	// ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field
	ObservedAt *string `pulumi:"observedAt"`
	// OperationState contains information about any ongoing operations, such as a sync
	OperationState *ApplicationStatusOperationState `pulumi:"operationState"`
	// ReconciledAt indicates when the application state was reconciled using the latest git version
	ReconciledAt *string `pulumi:"reconciledAt"`
	// Resources is a list of Kubernetes resources managed by this application
	Resources []ApplicationStatusResources `pulumi:"resources"`
	// SourceType specifies the type of this application
	SourceType *string `pulumi:"sourceType"`
	// Summary contains a list of URLs and container images used by this application
	Summary *ApplicationStatusSummary `pulumi:"summary"`
	// Sync contains information about the application's current sync status
	Sync *ApplicationStatusSync `pulumi:"sync"`
}

// ApplicationStatusInput is an input type that accepts ApplicationStatusArgs and ApplicationStatusOutput values.
// You can construct a concrete instance of `ApplicationStatusInput` via:
//
//          ApplicationStatusArgs{...}
type ApplicationStatusInput interface {
	pulumi.Input

	ToApplicationStatusOutput() ApplicationStatusOutput
	ToApplicationStatusOutputWithContext(context.Context) ApplicationStatusOutput
}

// ApplicationStatus contains status information for the application
type ApplicationStatusArgs struct {
	// Conditions is a list of currently observed application conditions
	Conditions ApplicationStatusConditionsArrayInput `pulumi:"conditions"`
	// Health contains information about the application's current health status
	Health ApplicationStatusHealthPtrInput `pulumi:"health"`
	// History contains information about the application's sync history
	History ApplicationStatusHistoryArrayInput `pulumi:"history"`
	// ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field
	ObservedAt pulumi.StringPtrInput `pulumi:"observedAt"`
	// OperationState contains information about any ongoing operations, such as a sync
	OperationState ApplicationStatusOperationStatePtrInput `pulumi:"operationState"`
	// ReconciledAt indicates when the application state was reconciled using the latest git version
	ReconciledAt pulumi.StringPtrInput `pulumi:"reconciledAt"`
	// Resources is a list of Kubernetes resources managed by this application
	Resources ApplicationStatusResourcesArrayInput `pulumi:"resources"`
	// SourceType specifies the type of this application
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
	// Summary contains a list of URLs and container images used by this application
	Summary ApplicationStatusSummaryPtrInput `pulumi:"summary"`
	// Sync contains information about the application's current sync status
	Sync ApplicationStatusSyncPtrInput `pulumi:"sync"`
}

func (ApplicationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatus)(nil)).Elem()
}

func (i ApplicationStatusArgs) ToApplicationStatusOutput() ApplicationStatusOutput {
	return i.ToApplicationStatusOutputWithContext(context.Background())
}

func (i ApplicationStatusArgs) ToApplicationStatusOutputWithContext(ctx context.Context) ApplicationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOutput)
}

func (i ApplicationStatusArgs) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return i.ToApplicationStatusPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusArgs) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOutput).ToApplicationStatusPtrOutputWithContext(ctx)
}

// ApplicationStatusPtrInput is an input type that accepts ApplicationStatusArgs, ApplicationStatusPtr and ApplicationStatusPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusPtrInput` via:
//
//          ApplicationStatusArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusPtrInput interface {
	pulumi.Input

	ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput
	ToApplicationStatusPtrOutputWithContext(context.Context) ApplicationStatusPtrOutput
}

type applicationStatusPtrType ApplicationStatusArgs

func ApplicationStatusPtr(v *ApplicationStatusArgs) ApplicationStatusPtrInput {
	return (*applicationStatusPtrType)(v)
}

func (*applicationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatus)(nil)).Elem()
}

func (i *applicationStatusPtrType) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return i.ToApplicationStatusPtrOutputWithContext(context.Background())
}

func (i *applicationStatusPtrType) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusPtrOutput)
}

// ApplicationStatus contains status information for the application
type ApplicationStatusOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatus)(nil)).Elem()
}

func (o ApplicationStatusOutput) ToApplicationStatusOutput() ApplicationStatusOutput {
	return o
}

func (o ApplicationStatusOutput) ToApplicationStatusOutputWithContext(ctx context.Context) ApplicationStatusOutput {
	return o
}

func (o ApplicationStatusOutput) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return o.ToApplicationStatusPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOutput) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatus {
		return &v
	}).(ApplicationStatusPtrOutput)
}

// Conditions is a list of currently observed application conditions
func (o ApplicationStatusOutput) Conditions() ApplicationStatusConditionsArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusConditions { return v.Conditions }).(ApplicationStatusConditionsArrayOutput)
}

// Health contains information about the application's current health status
func (o ApplicationStatusOutput) Health() ApplicationStatusHealthPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatusHealth { return v.Health }).(ApplicationStatusHealthPtrOutput)
}

// History contains information about the application's sync history
func (o ApplicationStatusOutput) History() ApplicationStatusHistoryArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusHistory { return v.History }).(ApplicationStatusHistoryArrayOutput)
}

// ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field
func (o ApplicationStatusOutput) ObservedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *string { return v.ObservedAt }).(pulumi.StringPtrOutput)
}

// OperationState contains information about any ongoing operations, such as a sync
func (o ApplicationStatusOutput) OperationState() ApplicationStatusOperationStatePtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatusOperationState { return v.OperationState }).(ApplicationStatusOperationStatePtrOutput)
}

// ReconciledAt indicates when the application state was reconciled using the latest git version
func (o ApplicationStatusOutput) ReconciledAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *string { return v.ReconciledAt }).(pulumi.StringPtrOutput)
}

// Resources is a list of Kubernetes resources managed by this application
func (o ApplicationStatusOutput) Resources() ApplicationStatusResourcesArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusResources { return v.Resources }).(ApplicationStatusResourcesArrayOutput)
}

// SourceType specifies the type of this application
func (o ApplicationStatusOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// Summary contains a list of URLs and container images used by this application
func (o ApplicationStatusOutput) Summary() ApplicationStatusSummaryPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatusSummary { return v.Summary }).(ApplicationStatusSummaryPtrOutput)
}

// Sync contains information about the application's current sync status
func (o ApplicationStatusOutput) Sync() ApplicationStatusSyncPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatusSync { return v.Sync }).(ApplicationStatusSyncPtrOutput)
}

type ApplicationStatusPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatus)(nil)).Elem()
}

func (o ApplicationStatusPtrOutput) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return o
}

func (o ApplicationStatusPtrOutput) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return o
}

func (o ApplicationStatusPtrOutput) Elem() ApplicationStatusOutput {
	return o.ApplyT(func(v *ApplicationStatus) ApplicationStatus { return *v }).(ApplicationStatusOutput)
}

// Conditions is a list of currently observed application conditions
func (o ApplicationStatusPtrOutput) Conditions() ApplicationStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ApplicationStatusConditionsArrayOutput)
}

// Health contains information about the application's current health status
func (o ApplicationStatusPtrOutput) Health() ApplicationStatusHealthPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *ApplicationStatusHealth {
		if v == nil {
			return nil
		}
		return v.Health
	}).(ApplicationStatusHealthPtrOutput)
}

// History contains information about the application's sync history
func (o ApplicationStatusPtrOutput) History() ApplicationStatusHistoryArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusHistory {
		if v == nil {
			return nil
		}
		return v.History
	}).(ApplicationStatusHistoryArrayOutput)
}

// ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field
func (o ApplicationStatusPtrOutput) ObservedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ObservedAt
	}).(pulumi.StringPtrOutput)
}

// OperationState contains information about any ongoing operations, such as a sync
func (o ApplicationStatusPtrOutput) OperationState() ApplicationStatusOperationStatePtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *ApplicationStatusOperationState {
		if v == nil {
			return nil
		}
		return v.OperationState
	}).(ApplicationStatusOperationStatePtrOutput)
}

// ReconciledAt indicates when the application state was reconciled using the latest git version
func (o ApplicationStatusPtrOutput) ReconciledAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ReconciledAt
	}).(pulumi.StringPtrOutput)
}

// Resources is a list of Kubernetes resources managed by this application
func (o ApplicationStatusPtrOutput) Resources() ApplicationStatusResourcesArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ApplicationStatusResourcesArrayOutput)
}

// SourceType specifies the type of this application
func (o ApplicationStatusPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *string {
		if v == nil {
			return nil
		}
		return v.SourceType
	}).(pulumi.StringPtrOutput)
}

// Summary contains a list of URLs and container images used by this application
func (o ApplicationStatusPtrOutput) Summary() ApplicationStatusSummaryPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *ApplicationStatusSummary {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(ApplicationStatusSummaryPtrOutput)
}

// Sync contains information about the application's current sync status
func (o ApplicationStatusPtrOutput) Sync() ApplicationStatusSyncPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *ApplicationStatusSync {
		if v == nil {
			return nil
		}
		return v.Sync
	}).(ApplicationStatusSyncPtrOutput)
}

// ApplicationCondition contains details about an application condition, which is usally an error or warning
type ApplicationStatusConditions struct {
	// LastTransitionTime is the time the condition was last observed
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message contains human-readable message indicating details about condition
	Message string `pulumi:"message"`
	// Type is an application condition type
	Type string `pulumi:"type"`
}

// ApplicationStatusConditionsInput is an input type that accepts ApplicationStatusConditionsArgs and ApplicationStatusConditionsOutput values.
// You can construct a concrete instance of `ApplicationStatusConditionsInput` via:
//
//          ApplicationStatusConditionsArgs{...}
type ApplicationStatusConditionsInput interface {
	pulumi.Input

	ToApplicationStatusConditionsOutput() ApplicationStatusConditionsOutput
	ToApplicationStatusConditionsOutputWithContext(context.Context) ApplicationStatusConditionsOutput
}

// ApplicationCondition contains details about an application condition, which is usally an error or warning
type ApplicationStatusConditionsArgs struct {
	// LastTransitionTime is the time the condition was last observed
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message contains human-readable message indicating details about condition
	Message pulumi.StringInput `pulumi:"message"`
	// Type is an application condition type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusConditions)(nil)).Elem()
}

func (i ApplicationStatusConditionsArgs) ToApplicationStatusConditionsOutput() ApplicationStatusConditionsOutput {
	return i.ToApplicationStatusConditionsOutputWithContext(context.Background())
}

func (i ApplicationStatusConditionsArgs) ToApplicationStatusConditionsOutputWithContext(ctx context.Context) ApplicationStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusConditionsOutput)
}

// ApplicationStatusConditionsArrayInput is an input type that accepts ApplicationStatusConditionsArray and ApplicationStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusConditionsArrayInput` via:
//
//          ApplicationStatusConditionsArray{ ApplicationStatusConditionsArgs{...} }
type ApplicationStatusConditionsArrayInput interface {
	pulumi.Input

	ToApplicationStatusConditionsArrayOutput() ApplicationStatusConditionsArrayOutput
	ToApplicationStatusConditionsArrayOutputWithContext(context.Context) ApplicationStatusConditionsArrayOutput
}

type ApplicationStatusConditionsArray []ApplicationStatusConditionsInput

func (ApplicationStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusConditions)(nil)).Elem()
}

func (i ApplicationStatusConditionsArray) ToApplicationStatusConditionsArrayOutput() ApplicationStatusConditionsArrayOutput {
	return i.ToApplicationStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusConditionsArray) ToApplicationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusConditionsArrayOutput)
}

// ApplicationCondition contains details about an application condition, which is usally an error or warning
type ApplicationStatusConditionsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusConditions)(nil)).Elem()
}

func (o ApplicationStatusConditionsOutput) ToApplicationStatusConditionsOutput() ApplicationStatusConditionsOutput {
	return o
}

func (o ApplicationStatusConditionsOutput) ToApplicationStatusConditionsOutputWithContext(ctx context.Context) ApplicationStatusConditionsOutput {
	return o
}

// LastTransitionTime is the time the condition was last observed
func (o ApplicationStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message contains human-readable message indicating details about condition
func (o ApplicationStatusConditionsOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) string { return v.Message }).(pulumi.StringOutput)
}

// Type is an application condition type
func (o ApplicationStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusConditions)(nil)).Elem()
}

func (o ApplicationStatusConditionsArrayOutput) ToApplicationStatusConditionsArrayOutput() ApplicationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationStatusConditionsArrayOutput) ToApplicationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationStatusConditionsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusConditions {
		return vs[0].([]ApplicationStatusConditions)[vs[1].(int)]
	}).(ApplicationStatusConditionsOutput)
}

// Health contains information about the application's current health status
type ApplicationStatusHealth struct {
	// Message is a human-readable informational message describing the health status
	Message *string `pulumi:"message"`
	// Status holds the status code of the application or resource
	Status *string `pulumi:"status"`
}

// ApplicationStatusHealthInput is an input type that accepts ApplicationStatusHealthArgs and ApplicationStatusHealthOutput values.
// You can construct a concrete instance of `ApplicationStatusHealthInput` via:
//
//          ApplicationStatusHealthArgs{...}
type ApplicationStatusHealthInput interface {
	pulumi.Input

	ToApplicationStatusHealthOutput() ApplicationStatusHealthOutput
	ToApplicationStatusHealthOutputWithContext(context.Context) ApplicationStatusHealthOutput
}

// Health contains information about the application's current health status
type ApplicationStatusHealthArgs struct {
	// Message is a human-readable informational message describing the health status
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Status holds the status code of the application or resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ApplicationStatusHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHealth)(nil)).Elem()
}

func (i ApplicationStatusHealthArgs) ToApplicationStatusHealthOutput() ApplicationStatusHealthOutput {
	return i.ToApplicationStatusHealthOutputWithContext(context.Background())
}

func (i ApplicationStatusHealthArgs) ToApplicationStatusHealthOutputWithContext(ctx context.Context) ApplicationStatusHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHealthOutput)
}

func (i ApplicationStatusHealthArgs) ToApplicationStatusHealthPtrOutput() ApplicationStatusHealthPtrOutput {
	return i.ToApplicationStatusHealthPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHealthArgs) ToApplicationStatusHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHealthOutput).ToApplicationStatusHealthPtrOutputWithContext(ctx)
}

// ApplicationStatusHealthPtrInput is an input type that accepts ApplicationStatusHealthArgs, ApplicationStatusHealthPtr and ApplicationStatusHealthPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHealthPtrInput` via:
//
//          ApplicationStatusHealthArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHealthPtrInput interface {
	pulumi.Input

	ToApplicationStatusHealthPtrOutput() ApplicationStatusHealthPtrOutput
	ToApplicationStatusHealthPtrOutputWithContext(context.Context) ApplicationStatusHealthPtrOutput
}

type applicationStatusHealthPtrType ApplicationStatusHealthArgs

func ApplicationStatusHealthPtr(v *ApplicationStatusHealthArgs) ApplicationStatusHealthPtrInput {
	return (*applicationStatusHealthPtrType)(v)
}

func (*applicationStatusHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHealth)(nil)).Elem()
}

func (i *applicationStatusHealthPtrType) ToApplicationStatusHealthPtrOutput() ApplicationStatusHealthPtrOutput {
	return i.ToApplicationStatusHealthPtrOutputWithContext(context.Background())
}

func (i *applicationStatusHealthPtrType) ToApplicationStatusHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHealthPtrOutput)
}

// Health contains information about the application's current health status
type ApplicationStatusHealthOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHealth)(nil)).Elem()
}

func (o ApplicationStatusHealthOutput) ToApplicationStatusHealthOutput() ApplicationStatusHealthOutput {
	return o
}

func (o ApplicationStatusHealthOutput) ToApplicationStatusHealthOutputWithContext(ctx context.Context) ApplicationStatusHealthOutput {
	return o
}

func (o ApplicationStatusHealthOutput) ToApplicationStatusHealthPtrOutput() ApplicationStatusHealthPtrOutput {
	return o.ToApplicationStatusHealthPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHealthOutput) ToApplicationStatusHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusHealthPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHealth) *ApplicationStatusHealth {
		return &v
	}).(ApplicationStatusHealthPtrOutput)
}

// Message is a human-readable informational message describing the health status
func (o ApplicationStatusHealthOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHealth) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Status holds the status code of the application or resource
func (o ApplicationStatusHealthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHealth) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHealthPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHealth)(nil)).Elem()
}

func (o ApplicationStatusHealthPtrOutput) ToApplicationStatusHealthPtrOutput() ApplicationStatusHealthPtrOutput {
	return o
}

func (o ApplicationStatusHealthPtrOutput) ToApplicationStatusHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusHealthPtrOutput {
	return o
}

func (o ApplicationStatusHealthPtrOutput) Elem() ApplicationStatusHealthOutput {
	return o.ApplyT(func(v *ApplicationStatusHealth) ApplicationStatusHealth { return *v }).(ApplicationStatusHealthOutput)
}

// Message is a human-readable informational message describing the health status
func (o ApplicationStatusHealthPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHealth) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Status holds the status code of the application or resource
func (o ApplicationStatusHealthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHealth) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// RevisionHistory contains history information about a previous sync
type ApplicationStatusHistory struct {
	// DeployStartedAt holds the time the sync operation started
	DeployStartedAt *string `pulumi:"deployStartedAt"`
	// DeployedAt holds the time the sync operation completed
	DeployedAt string `pulumi:"deployedAt"`
	// ID is an auto incrementing identifier of the RevisionHistory
	Id int `pulumi:"id"`
	// Revision holds the revision the sync was performed against
	Revision string `pulumi:"revision"`
	// Source is a reference to the application source used for the sync operation
	Source *ApplicationStatusHistorySource `pulumi:"source"`
}

// ApplicationStatusHistoryInput is an input type that accepts ApplicationStatusHistoryArgs and ApplicationStatusHistoryOutput values.
// You can construct a concrete instance of `ApplicationStatusHistoryInput` via:
//
//          ApplicationStatusHistoryArgs{...}
type ApplicationStatusHistoryInput interface {
	pulumi.Input

	ToApplicationStatusHistoryOutput() ApplicationStatusHistoryOutput
	ToApplicationStatusHistoryOutputWithContext(context.Context) ApplicationStatusHistoryOutput
}

// RevisionHistory contains history information about a previous sync
type ApplicationStatusHistoryArgs struct {
	// DeployStartedAt holds the time the sync operation started
	DeployStartedAt pulumi.StringPtrInput `pulumi:"deployStartedAt"`
	// DeployedAt holds the time the sync operation completed
	DeployedAt pulumi.StringInput `pulumi:"deployedAt"`
	// ID is an auto incrementing identifier of the RevisionHistory
	Id pulumi.IntInput `pulumi:"id"`
	// Revision holds the revision the sync was performed against
	Revision pulumi.StringInput `pulumi:"revision"`
	// Source is a reference to the application source used for the sync operation
	Source ApplicationStatusHistorySourcePtrInput `pulumi:"source"`
}

func (ApplicationStatusHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistory)(nil)).Elem()
}

func (i ApplicationStatusHistoryArgs) ToApplicationStatusHistoryOutput() ApplicationStatusHistoryOutput {
	return i.ToApplicationStatusHistoryOutputWithContext(context.Background())
}

func (i ApplicationStatusHistoryArgs) ToApplicationStatusHistoryOutputWithContext(ctx context.Context) ApplicationStatusHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistoryOutput)
}

// ApplicationStatusHistoryArrayInput is an input type that accepts ApplicationStatusHistoryArray and ApplicationStatusHistoryArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistoryArrayInput` via:
//
//          ApplicationStatusHistoryArray{ ApplicationStatusHistoryArgs{...} }
type ApplicationStatusHistoryArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistoryArrayOutput() ApplicationStatusHistoryArrayOutput
	ToApplicationStatusHistoryArrayOutputWithContext(context.Context) ApplicationStatusHistoryArrayOutput
}

type ApplicationStatusHistoryArray []ApplicationStatusHistoryInput

func (ApplicationStatusHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistory)(nil)).Elem()
}

func (i ApplicationStatusHistoryArray) ToApplicationStatusHistoryArrayOutput() ApplicationStatusHistoryArrayOutput {
	return i.ToApplicationStatusHistoryArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistoryArray) ToApplicationStatusHistoryArrayOutputWithContext(ctx context.Context) ApplicationStatusHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistoryArrayOutput)
}

// RevisionHistory contains history information about a previous sync
type ApplicationStatusHistoryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistory)(nil)).Elem()
}

func (o ApplicationStatusHistoryOutput) ToApplicationStatusHistoryOutput() ApplicationStatusHistoryOutput {
	return o
}

func (o ApplicationStatusHistoryOutput) ToApplicationStatusHistoryOutputWithContext(ctx context.Context) ApplicationStatusHistoryOutput {
	return o
}

// DeployStartedAt holds the time the sync operation started
func (o ApplicationStatusHistoryOutput) DeployStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistory) *string { return v.DeployStartedAt }).(pulumi.StringPtrOutput)
}

// DeployedAt holds the time the sync operation completed
func (o ApplicationStatusHistoryOutput) DeployedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistory) string { return v.DeployedAt }).(pulumi.StringOutput)
}

// ID is an auto incrementing identifier of the RevisionHistory
func (o ApplicationStatusHistoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationStatusHistory) int { return v.Id }).(pulumi.IntOutput)
}

// Revision holds the revision the sync was performed against
func (o ApplicationStatusHistoryOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistory) string { return v.Revision }).(pulumi.StringOutput)
}

// Source is a reference to the application source used for the sync operation
func (o ApplicationStatusHistoryOutput) Source() ApplicationStatusHistorySourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistory) *ApplicationStatusHistorySource { return v.Source }).(ApplicationStatusHistorySourcePtrOutput)
}

type ApplicationStatusHistoryArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistory)(nil)).Elem()
}

func (o ApplicationStatusHistoryArrayOutput) ToApplicationStatusHistoryArrayOutput() ApplicationStatusHistoryArrayOutput {
	return o
}

func (o ApplicationStatusHistoryArrayOutput) ToApplicationStatusHistoryArrayOutputWithContext(ctx context.Context) ApplicationStatusHistoryArrayOutput {
	return o
}

func (o ApplicationStatusHistoryArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistory {
		return vs[0].([]ApplicationStatusHistory)[vs[1].(int)]
	}).(ApplicationStatusHistoryOutput)
}

// Source is a reference to the application source used for the sync operation
type ApplicationStatusHistorySource struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory *ApplicationStatusHistorySourceDirectory `pulumi:"directory"`
	// Helm holds helm specific options
	Helm *ApplicationStatusHistorySourceHelm `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet *ApplicationStatusHistorySourceKsonnet `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationStatusHistorySourceKustomize `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationStatusHistorySourcePlugin `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL string `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// ApplicationStatusHistorySourceInput is an input type that accepts ApplicationStatusHistorySourceArgs and ApplicationStatusHistorySourceOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceInput` via:
//
//          ApplicationStatusHistorySourceArgs{...}
type ApplicationStatusHistorySourceInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceOutput() ApplicationStatusHistorySourceOutput
	ToApplicationStatusHistorySourceOutputWithContext(context.Context) ApplicationStatusHistorySourceOutput
}

// Source is a reference to the application source used for the sync operation
type ApplicationStatusHistorySourceArgs struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory ApplicationStatusHistorySourceDirectoryPtrInput `pulumi:"directory"`
	// Helm holds helm specific options
	Helm ApplicationStatusHistorySourceHelmPtrInput `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet ApplicationStatusHistorySourceKsonnetPtrInput `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize ApplicationStatusHistorySourceKustomizePtrInput `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin ApplicationStatusHistorySourcePluginPtrInput `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL pulumi.StringInput `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (ApplicationStatusHistorySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySource)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceArgs) ToApplicationStatusHistorySourceOutput() ApplicationStatusHistorySourceOutput {
	return i.ToApplicationStatusHistorySourceOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceArgs) ToApplicationStatusHistorySourceOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceOutput)
}

func (i ApplicationStatusHistorySourceArgs) ToApplicationStatusHistorySourcePtrOutput() ApplicationStatusHistorySourcePtrOutput {
	return i.ToApplicationStatusHistorySourcePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceArgs) ToApplicationStatusHistorySourcePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceOutput).ToApplicationStatusHistorySourcePtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourcePtrInput is an input type that accepts ApplicationStatusHistorySourceArgs, ApplicationStatusHistorySourcePtr and ApplicationStatusHistorySourcePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourcePtrInput` via:
//
//          ApplicationStatusHistorySourceArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourcePtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourcePtrOutput() ApplicationStatusHistorySourcePtrOutput
	ToApplicationStatusHistorySourcePtrOutputWithContext(context.Context) ApplicationStatusHistorySourcePtrOutput
}

type applicationStatusHistorySourcePtrType ApplicationStatusHistorySourceArgs

func ApplicationStatusHistorySourcePtr(v *ApplicationStatusHistorySourceArgs) ApplicationStatusHistorySourcePtrInput {
	return (*applicationStatusHistorySourcePtrType)(v)
}

func (*applicationStatusHistorySourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySource)(nil)).Elem()
}

func (i *applicationStatusHistorySourcePtrType) ToApplicationStatusHistorySourcePtrOutput() ApplicationStatusHistorySourcePtrOutput {
	return i.ToApplicationStatusHistorySourcePtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourcePtrType) ToApplicationStatusHistorySourcePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourcePtrOutput)
}

// Source is a reference to the application source used for the sync operation
type ApplicationStatusHistorySourceOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySource)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceOutput) ToApplicationStatusHistorySourceOutput() ApplicationStatusHistorySourceOutput {
	return o
}

func (o ApplicationStatusHistorySourceOutput) ToApplicationStatusHistorySourceOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceOutput {
	return o
}

func (o ApplicationStatusHistorySourceOutput) ToApplicationStatusHistorySourcePtrOutput() ApplicationStatusHistorySourcePtrOutput {
	return o.ToApplicationStatusHistorySourcePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourceOutput) ToApplicationStatusHistorySourcePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *ApplicationStatusHistorySource {
		return &v
	}).(ApplicationStatusHistorySourcePtrOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusHistorySourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusHistorySourceOutput) Directory() ApplicationStatusHistorySourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *ApplicationStatusHistorySourceDirectory { return v.Directory }).(ApplicationStatusHistorySourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusHistorySourceOutput) Helm() ApplicationStatusHistorySourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *ApplicationStatusHistorySourceHelm { return v.Helm }).(ApplicationStatusHistorySourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusHistorySourceOutput) Ksonnet() ApplicationStatusHistorySourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *ApplicationStatusHistorySourceKsonnet { return v.Ksonnet }).(ApplicationStatusHistorySourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusHistorySourceOutput) Kustomize() ApplicationStatusHistorySourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *ApplicationStatusHistorySourceKustomize { return v.Kustomize }).(ApplicationStatusHistorySourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusHistorySourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusHistorySourceOutput) Plugin() ApplicationStatusHistorySourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *ApplicationStatusHistorySourcePlugin { return v.Plugin }).(ApplicationStatusHistorySourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusHistorySourceOutput) RepoURL() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) string { return v.RepoURL }).(pulumi.StringOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusHistorySourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHistorySourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySource)(nil)).Elem()
}

func (o ApplicationStatusHistorySourcePtrOutput) ToApplicationStatusHistorySourcePtrOutput() ApplicationStatusHistorySourcePtrOutput {
	return o
}

func (o ApplicationStatusHistorySourcePtrOutput) ToApplicationStatusHistorySourcePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePtrOutput {
	return o
}

func (o ApplicationStatusHistorySourcePtrOutput) Elem() ApplicationStatusHistorySourceOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) ApplicationStatusHistorySource { return *v }).(ApplicationStatusHistorySourceOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusHistorySourcePtrOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *string {
		if v == nil {
			return nil
		}
		return v.Chart
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusHistorySourcePtrOutput) Directory() ApplicationStatusHistorySourceDirectoryPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *ApplicationStatusHistorySourceDirectory {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(ApplicationStatusHistorySourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusHistorySourcePtrOutput) Helm() ApplicationStatusHistorySourceHelmPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *ApplicationStatusHistorySourceHelm {
		if v == nil {
			return nil
		}
		return v.Helm
	}).(ApplicationStatusHistorySourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusHistorySourcePtrOutput) Ksonnet() ApplicationStatusHistorySourceKsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *ApplicationStatusHistorySourceKsonnet {
		if v == nil {
			return nil
		}
		return v.Ksonnet
	}).(ApplicationStatusHistorySourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusHistorySourcePtrOutput) Kustomize() ApplicationStatusHistorySourceKustomizePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *ApplicationStatusHistorySourceKustomize {
		if v == nil {
			return nil
		}
		return v.Kustomize
	}).(ApplicationStatusHistorySourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusHistorySourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusHistorySourcePtrOutput) Plugin() ApplicationStatusHistorySourcePluginPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *ApplicationStatusHistorySourcePlugin {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(ApplicationStatusHistorySourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusHistorySourcePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusHistorySourcePtrOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySource) *string {
		if v == nil {
			return nil
		}
		return v.TargetRevision
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusHistorySourceDirectory struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationStatusHistorySourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `pulumi:"recurse"`
}

// ApplicationStatusHistorySourceDirectoryInput is an input type that accepts ApplicationStatusHistorySourceDirectoryArgs and ApplicationStatusHistorySourceDirectoryOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryInput` via:
//
//          ApplicationStatusHistorySourceDirectoryArgs{...}
type ApplicationStatusHistorySourceDirectoryInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryOutput() ApplicationStatusHistorySourceDirectoryOutput
	ToApplicationStatusHistorySourceDirectoryOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryOutput
}

// Directory holds path/directory specific options
type ApplicationStatusHistorySourceDirectoryArgs struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet ApplicationStatusHistorySourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (ApplicationStatusHistorySourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectory)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceDirectoryArgs) ToApplicationStatusHistorySourceDirectoryOutput() ApplicationStatusHistorySourceDirectoryOutput {
	return i.ToApplicationStatusHistorySourceDirectoryOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryArgs) ToApplicationStatusHistorySourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryOutput)
}

func (i ApplicationStatusHistorySourceDirectoryArgs) ToApplicationStatusHistorySourceDirectoryPtrOutput() ApplicationStatusHistorySourceDirectoryPtrOutput {
	return i.ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryArgs) ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryOutput).ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourceDirectoryPtrInput is an input type that accepts ApplicationStatusHistorySourceDirectoryArgs, ApplicationStatusHistorySourceDirectoryPtr and ApplicationStatusHistorySourceDirectoryPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryPtrInput` via:
//
//          ApplicationStatusHistorySourceDirectoryArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourceDirectoryPtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryPtrOutput() ApplicationStatusHistorySourceDirectoryPtrOutput
	ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryPtrOutput
}

type applicationStatusHistorySourceDirectoryPtrType ApplicationStatusHistorySourceDirectoryArgs

func ApplicationStatusHistorySourceDirectoryPtr(v *ApplicationStatusHistorySourceDirectoryArgs) ApplicationStatusHistorySourceDirectoryPtrInput {
	return (*applicationStatusHistorySourceDirectoryPtrType)(v)
}

func (*applicationStatusHistorySourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceDirectory)(nil)).Elem()
}

func (i *applicationStatusHistorySourceDirectoryPtrType) ToApplicationStatusHistorySourceDirectoryPtrOutput() ApplicationStatusHistorySourceDirectoryPtrOutput {
	return i.ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourceDirectoryPtrType) ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusHistorySourceDirectoryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryOutput) ToApplicationStatusHistorySourceDirectoryOutput() ApplicationStatusHistorySourceDirectoryOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryOutput) ToApplicationStatusHistorySourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryOutput) ToApplicationStatusHistorySourceDirectoryPtrOutput() ApplicationStatusHistorySourceDirectoryPtrOutput {
	return o.ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourceDirectoryOutput) ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectory) *ApplicationStatusHistorySourceDirectory {
		return &v
	}).(ApplicationStatusHistorySourceDirectoryPtrOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusHistorySourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusHistorySourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusHistorySourceDirectoryOutput) Jsonnet() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectory) *ApplicationStatusHistorySourceDirectoryJsonnet {
		return v.Jsonnet
	}).(ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusHistorySourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type ApplicationStatusHistorySourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryPtrOutput) ToApplicationStatusHistorySourceDirectoryPtrOutput() ApplicationStatusHistorySourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryPtrOutput) ToApplicationStatusHistorySourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryPtrOutput) Elem() ApplicationStatusHistorySourceDirectoryOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectory) ApplicationStatusHistorySourceDirectory { return *v }).(ApplicationStatusHistorySourceDirectoryOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusHistorySourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusHistorySourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusHistorySourceDirectoryPtrOutput) Jsonnet() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectory) *ApplicationStatusHistorySourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusHistorySourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusHistorySourceDirectoryJsonnet struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars []ApplicationStatusHistorySourceDirectoryJsonnetExtVars `pulumi:"extVars"`
	// Additional library search dirs
	Libs []string `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []ApplicationStatusHistorySourceDirectoryJsonnetTlas `pulumi:"tlas"`
}

// ApplicationStatusHistorySourceDirectoryJsonnetInput is an input type that accepts ApplicationStatusHistorySourceDirectoryJsonnetArgs and ApplicationStatusHistorySourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryJsonnetInput` via:
//
//          ApplicationStatusHistorySourceDirectoryJsonnetArgs{...}
type ApplicationStatusHistorySourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryJsonnetOutput() ApplicationStatusHistorySourceDirectoryJsonnetOutput
	ToApplicationStatusHistorySourceDirectoryJsonnetOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryJsonnetOutput
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusHistorySourceDirectoryJsonnetArgs struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayInput `pulumi:"extVars"`
	// Additional library search dirs
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayInput `pulumi:"tlas"`
}

func (ApplicationStatusHistorySourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectoryJsonnet)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetArgs) ToApplicationStatusHistorySourceDirectoryJsonnetOutput() ApplicationStatusHistorySourceDirectoryJsonnetOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetArgs) ToApplicationStatusHistorySourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetOutput)
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetArgs) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutput() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetArgs) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetOutput).ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourceDirectoryJsonnetPtrInput is an input type that accepts ApplicationStatusHistorySourceDirectoryJsonnetArgs, ApplicationStatusHistorySourceDirectoryJsonnetPtr and ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryJsonnetPtrInput` via:
//
//          ApplicationStatusHistorySourceDirectoryJsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutput() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput
	ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput
}

type applicationStatusHistorySourceDirectoryJsonnetPtrType ApplicationStatusHistorySourceDirectoryJsonnetArgs

func ApplicationStatusHistorySourceDirectoryJsonnetPtr(v *ApplicationStatusHistorySourceDirectoryJsonnetArgs) ApplicationStatusHistorySourceDirectoryJsonnetPtrInput {
	return (*applicationStatusHistorySourceDirectoryJsonnetPtrType)(v)
}

func (*applicationStatusHistorySourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceDirectoryJsonnet)(nil)).Elem()
}

func (i *applicationStatusHistorySourceDirectoryJsonnetPtrType) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutput() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourceDirectoryJsonnetPtrType) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusHistorySourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) ToApplicationStatusHistorySourceDirectoryJsonnetOutput() ApplicationStatusHistorySourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) ToApplicationStatusHistorySourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutput() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return o.ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnet) *ApplicationStatusHistorySourceDirectoryJsonnet {
		return &v
	}).(ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) ExtVars() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnet) []ApplicationStatusHistorySourceDirectoryJsonnetExtVars {
		return v.ExtVars
	}).(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusHistorySourceDirectoryJsonnetOutput) Tlas() ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnet) []ApplicationStatusHistorySourceDirectoryJsonnetTlas {
		return v.Tlas
	}).(ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput)
}

type ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutput() ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) ToApplicationStatusHistorySourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) Elem() ApplicationStatusHistorySourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectoryJsonnet) ApplicationStatusHistorySourceDirectoryJsonnet {
		return *v
	}).(ApplicationStatusHistorySourceDirectoryJsonnetOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) ExtVars() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectoryJsonnet) []ApplicationStatusHistorySourceDirectoryJsonnetExtVars {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput) Tlas() ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceDirectoryJsonnet) []ApplicationStatusHistorySourceDirectoryJsonnetTlas {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusHistorySourceDirectoryJsonnetExtVars struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusHistorySourceDirectoryJsonnetExtVarsInput is an input type that accepts ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs and ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryJsonnetExtVarsInput` via:
//
//          ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs{...}
type ApplicationStatusHistorySourceDirectoryJsonnetExtVarsInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput
	ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput)
}

// ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayInput is an input type that accepts ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArray and ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayInput` via:
//
//          ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArray{ ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArgs{...} }
type ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput
	ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput
}

type ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArray []ApplicationStatusHistorySourceDirectoryJsonnetExtVarsInput

func (ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArray) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArray) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnetExtVars) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnetExtVars) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnetExtVars) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistorySourceDirectoryJsonnetExtVars {
		return vs[0].([]ApplicationStatusHistorySourceDirectoryJsonnetExtVars)[vs[1].(int)]
	}).(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusHistorySourceDirectoryJsonnetTlas struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusHistorySourceDirectoryJsonnetTlasInput is an input type that accepts ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs and ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryJsonnetTlasInput` via:
//
//          ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs{...}
type ApplicationStatusHistorySourceDirectoryJsonnetTlasInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutput() ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput
	ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs) ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutput() ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs) ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput)
}

// ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayInput is an input type that accepts ApplicationStatusHistorySourceDirectoryJsonnetTlasArray and ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayInput` via:
//
//          ApplicationStatusHistorySourceDirectoryJsonnetTlasArray{ ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs{...} }
type ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput
	ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutputWithContext(context.Context) ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput
}

type ApplicationStatusHistorySourceDirectoryJsonnetTlasArray []ApplicationStatusHistorySourceDirectoryJsonnetTlasInput

func (ApplicationStatusHistorySourceDirectoryJsonnetTlasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetTlasArray) ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput {
	return i.ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceDirectoryJsonnetTlasArray) ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput) ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutput() ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput) ToApplicationStatusHistorySourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnetTlas) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnetTlas) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceDirectoryJsonnetTlas) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistorySourceDirectoryJsonnetTlas {
		return vs[0].([]ApplicationStatusHistorySourceDirectoryJsonnetTlas)[vs[1].(int)]
	}).(ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput)
}

// Helm holds helm specific options
type ApplicationStatusHistorySourceHelm struct {
	// FileParameters are file parameters to the helm template
	FileParameters []ApplicationStatusHistorySourceHelmFileParameters `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []ApplicationStatusHistorySourceHelmParameters `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// ApplicationStatusHistorySourceHelmInput is an input type that accepts ApplicationStatusHistorySourceHelmArgs and ApplicationStatusHistorySourceHelmOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceHelmInput` via:
//
//          ApplicationStatusHistorySourceHelmArgs{...}
type ApplicationStatusHistorySourceHelmInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceHelmOutput() ApplicationStatusHistorySourceHelmOutput
	ToApplicationStatusHistorySourceHelmOutputWithContext(context.Context) ApplicationStatusHistorySourceHelmOutput
}

// Helm holds helm specific options
type ApplicationStatusHistorySourceHelmArgs struct {
	// FileParameters are file parameters to the helm template
	FileParameters ApplicationStatusHistorySourceHelmFileParametersArrayInput `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters ApplicationStatusHistorySourceHelmParametersArrayInput `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusHistorySourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceHelm)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceHelmArgs) ToApplicationStatusHistorySourceHelmOutput() ApplicationStatusHistorySourceHelmOutput {
	return i.ToApplicationStatusHistorySourceHelmOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceHelmArgs) ToApplicationStatusHistorySourceHelmOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmOutput)
}

func (i ApplicationStatusHistorySourceHelmArgs) ToApplicationStatusHistorySourceHelmPtrOutput() ApplicationStatusHistorySourceHelmPtrOutput {
	return i.ToApplicationStatusHistorySourceHelmPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceHelmArgs) ToApplicationStatusHistorySourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmOutput).ToApplicationStatusHistorySourceHelmPtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourceHelmPtrInput is an input type that accepts ApplicationStatusHistorySourceHelmArgs, ApplicationStatusHistorySourceHelmPtr and ApplicationStatusHistorySourceHelmPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceHelmPtrInput` via:
//
//          ApplicationStatusHistorySourceHelmArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourceHelmPtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceHelmPtrOutput() ApplicationStatusHistorySourceHelmPtrOutput
	ToApplicationStatusHistorySourceHelmPtrOutputWithContext(context.Context) ApplicationStatusHistorySourceHelmPtrOutput
}

type applicationStatusHistorySourceHelmPtrType ApplicationStatusHistorySourceHelmArgs

func ApplicationStatusHistorySourceHelmPtr(v *ApplicationStatusHistorySourceHelmArgs) ApplicationStatusHistorySourceHelmPtrInput {
	return (*applicationStatusHistorySourceHelmPtrType)(v)
}

func (*applicationStatusHistorySourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceHelm)(nil)).Elem()
}

func (i *applicationStatusHistorySourceHelmPtrType) ToApplicationStatusHistorySourceHelmPtrOutput() ApplicationStatusHistorySourceHelmPtrOutput {
	return i.ToApplicationStatusHistorySourceHelmPtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourceHelmPtrType) ToApplicationStatusHistorySourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmPtrOutput)
}

// Helm holds helm specific options
type ApplicationStatusHistorySourceHelmOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceHelm)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceHelmOutput) ToApplicationStatusHistorySourceHelmOutput() ApplicationStatusHistorySourceHelmOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmOutput) ToApplicationStatusHistorySourceHelmOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmOutput) ToApplicationStatusHistorySourceHelmPtrOutput() ApplicationStatusHistorySourceHelmPtrOutput {
	return o.ToApplicationStatusHistorySourceHelmPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourceHelmOutput) ToApplicationStatusHistorySourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) *ApplicationStatusHistorySourceHelm {
		return &v
	}).(ApplicationStatusHistorySourceHelmPtrOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusHistorySourceHelmOutput) FileParameters() ApplicationStatusHistorySourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) []ApplicationStatusHistorySourceHelmFileParameters {
		return v.FileParameters
	}).(ApplicationStatusHistorySourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusHistorySourceHelmOutput) Parameters() ApplicationStatusHistorySourceHelmParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) []ApplicationStatusHistorySourceHelmParameters {
		return v.Parameters
	}).(ApplicationStatusHistorySourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusHistorySourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusHistorySourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusHistorySourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusHistorySourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHistorySourceHelmPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceHelm)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceHelmPtrOutput) ToApplicationStatusHistorySourceHelmPtrOutput() ApplicationStatusHistorySourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmPtrOutput) ToApplicationStatusHistorySourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmPtrOutput) Elem() ApplicationStatusHistorySourceHelmOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) ApplicationStatusHistorySourceHelm { return *v }).(ApplicationStatusHistorySourceHelmOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusHistorySourceHelmPtrOutput) FileParameters() ApplicationStatusHistorySourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) []ApplicationStatusHistorySourceHelmFileParameters {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(ApplicationStatusHistorySourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusHistorySourceHelmPtrOutput) Parameters() ApplicationStatusHistorySourceHelmParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) []ApplicationStatusHistorySourceHelmParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusHistorySourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusHistorySourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusHistorySourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusHistorySourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusHistorySourceHelmPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusHistorySourceHelmFileParameters struct {
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `pulumi:"path"`
}

// ApplicationStatusHistorySourceHelmFileParametersInput is an input type that accepts ApplicationStatusHistorySourceHelmFileParametersArgs and ApplicationStatusHistorySourceHelmFileParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceHelmFileParametersInput` via:
//
//          ApplicationStatusHistorySourceHelmFileParametersArgs{...}
type ApplicationStatusHistorySourceHelmFileParametersInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceHelmFileParametersOutput() ApplicationStatusHistorySourceHelmFileParametersOutput
	ToApplicationStatusHistorySourceHelmFileParametersOutputWithContext(context.Context) ApplicationStatusHistorySourceHelmFileParametersOutput
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusHistorySourceHelmFileParametersArgs struct {
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApplicationStatusHistorySourceHelmFileParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceHelmFileParametersArgs) ToApplicationStatusHistorySourceHelmFileParametersOutput() ApplicationStatusHistorySourceHelmFileParametersOutput {
	return i.ToApplicationStatusHistorySourceHelmFileParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceHelmFileParametersArgs) ToApplicationStatusHistorySourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmFileParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmFileParametersOutput)
}

// ApplicationStatusHistorySourceHelmFileParametersArrayInput is an input type that accepts ApplicationStatusHistorySourceHelmFileParametersArray and ApplicationStatusHistorySourceHelmFileParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceHelmFileParametersArrayInput` via:
//
//          ApplicationStatusHistorySourceHelmFileParametersArray{ ApplicationStatusHistorySourceHelmFileParametersArgs{...} }
type ApplicationStatusHistorySourceHelmFileParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceHelmFileParametersArrayOutput() ApplicationStatusHistorySourceHelmFileParametersArrayOutput
	ToApplicationStatusHistorySourceHelmFileParametersArrayOutputWithContext(context.Context) ApplicationStatusHistorySourceHelmFileParametersArrayOutput
}

type ApplicationStatusHistorySourceHelmFileParametersArray []ApplicationStatusHistorySourceHelmFileParametersInput

func (ApplicationStatusHistorySourceHelmFileParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceHelmFileParametersArray) ToApplicationStatusHistorySourceHelmFileParametersArrayOutput() ApplicationStatusHistorySourceHelmFileParametersArrayOutput {
	return i.ToApplicationStatusHistorySourceHelmFileParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceHelmFileParametersArray) ToApplicationStatusHistorySourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmFileParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmFileParametersArrayOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusHistorySourceHelmFileParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceHelmFileParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceHelmFileParametersOutput) ToApplicationStatusHistorySourceHelmFileParametersOutput() ApplicationStatusHistorySourceHelmFileParametersOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmFileParametersOutput) ToApplicationStatusHistorySourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmFileParametersOutput {
	return o
}

// Name is the name of the Helm parameter
func (o ApplicationStatusHistorySourceHelmFileParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelmFileParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the file containing the values for the Helm parameter
func (o ApplicationStatusHistorySourceHelmFileParametersOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelmFileParameters) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHistorySourceHelmFileParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceHelmFileParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceHelmFileParametersArrayOutput) ToApplicationStatusHistorySourceHelmFileParametersArrayOutput() ApplicationStatusHistorySourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmFileParametersArrayOutput) ToApplicationStatusHistorySourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmFileParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistorySourceHelmFileParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistorySourceHelmFileParameters {
		return vs[0].([]ApplicationStatusHistorySourceHelmFileParameters)[vs[1].(int)]
	}).(ApplicationStatusHistorySourceHelmFileParametersOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusHistorySourceHelmParameters struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value *string `pulumi:"value"`
}

// ApplicationStatusHistorySourceHelmParametersInput is an input type that accepts ApplicationStatusHistorySourceHelmParametersArgs and ApplicationStatusHistorySourceHelmParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceHelmParametersInput` via:
//
//          ApplicationStatusHistorySourceHelmParametersArgs{...}
type ApplicationStatusHistorySourceHelmParametersInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceHelmParametersOutput() ApplicationStatusHistorySourceHelmParametersOutput
	ToApplicationStatusHistorySourceHelmParametersOutputWithContext(context.Context) ApplicationStatusHistorySourceHelmParametersOutput
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusHistorySourceHelmParametersArgs struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationStatusHistorySourceHelmParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceHelmParametersArgs) ToApplicationStatusHistorySourceHelmParametersOutput() ApplicationStatusHistorySourceHelmParametersOutput {
	return i.ToApplicationStatusHistorySourceHelmParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceHelmParametersArgs) ToApplicationStatusHistorySourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmParametersOutput)
}

// ApplicationStatusHistorySourceHelmParametersArrayInput is an input type that accepts ApplicationStatusHistorySourceHelmParametersArray and ApplicationStatusHistorySourceHelmParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceHelmParametersArrayInput` via:
//
//          ApplicationStatusHistorySourceHelmParametersArray{ ApplicationStatusHistorySourceHelmParametersArgs{...} }
type ApplicationStatusHistorySourceHelmParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceHelmParametersArrayOutput() ApplicationStatusHistorySourceHelmParametersArrayOutput
	ToApplicationStatusHistorySourceHelmParametersArrayOutputWithContext(context.Context) ApplicationStatusHistorySourceHelmParametersArrayOutput
}

type ApplicationStatusHistorySourceHelmParametersArray []ApplicationStatusHistorySourceHelmParametersInput

func (ApplicationStatusHistorySourceHelmParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceHelmParametersArray) ToApplicationStatusHistorySourceHelmParametersArrayOutput() ApplicationStatusHistorySourceHelmParametersArrayOutput {
	return i.ToApplicationStatusHistorySourceHelmParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceHelmParametersArray) ToApplicationStatusHistorySourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceHelmParametersArrayOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusHistorySourceHelmParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceHelmParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceHelmParametersOutput) ToApplicationStatusHistorySourceHelmParametersOutput() ApplicationStatusHistorySourceHelmParametersOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmParametersOutput) ToApplicationStatusHistorySourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmParametersOutput {
	return o
}

// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
func (o ApplicationStatusHistorySourceHelmParametersOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelmParameters) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name is the name of the Helm parameter
func (o ApplicationStatusHistorySourceHelmParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelmParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value for the Helm parameter
func (o ApplicationStatusHistorySourceHelmParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceHelmParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHistorySourceHelmParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceHelmParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceHelmParametersArrayOutput) ToApplicationStatusHistorySourceHelmParametersArrayOutput() ApplicationStatusHistorySourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmParametersArrayOutput) ToApplicationStatusHistorySourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceHelmParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistorySourceHelmParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistorySourceHelmParameters {
		return vs[0].([]ApplicationStatusHistorySourceHelmParameters)[vs[1].(int)]
	}).(ApplicationStatusHistorySourceHelmParametersOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusHistorySourceKsonnet struct {
	// Environment is a ksonnet application environment name
	Environment *string `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters []ApplicationStatusHistorySourceKsonnetParameters `pulumi:"parameters"`
}

// ApplicationStatusHistorySourceKsonnetInput is an input type that accepts ApplicationStatusHistorySourceKsonnetArgs and ApplicationStatusHistorySourceKsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKsonnetInput` via:
//
//          ApplicationStatusHistorySourceKsonnetArgs{...}
type ApplicationStatusHistorySourceKsonnetInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKsonnetOutput() ApplicationStatusHistorySourceKsonnetOutput
	ToApplicationStatusHistorySourceKsonnetOutputWithContext(context.Context) ApplicationStatusHistorySourceKsonnetOutput
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusHistorySourceKsonnetArgs struct {
	// Environment is a ksonnet application environment name
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters ApplicationStatusHistorySourceKsonnetParametersArrayInput `pulumi:"parameters"`
}

func (ApplicationStatusHistorySourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKsonnet)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceKsonnetArgs) ToApplicationStatusHistorySourceKsonnetOutput() ApplicationStatusHistorySourceKsonnetOutput {
	return i.ToApplicationStatusHistorySourceKsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKsonnetArgs) ToApplicationStatusHistorySourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKsonnetOutput)
}

func (i ApplicationStatusHistorySourceKsonnetArgs) ToApplicationStatusHistorySourceKsonnetPtrOutput() ApplicationStatusHistorySourceKsonnetPtrOutput {
	return i.ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKsonnetArgs) ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKsonnetOutput).ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourceKsonnetPtrInput is an input type that accepts ApplicationStatusHistorySourceKsonnetArgs, ApplicationStatusHistorySourceKsonnetPtr and ApplicationStatusHistorySourceKsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKsonnetPtrInput` via:
//
//          ApplicationStatusHistorySourceKsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourceKsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKsonnetPtrOutput() ApplicationStatusHistorySourceKsonnetPtrOutput
	ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(context.Context) ApplicationStatusHistorySourceKsonnetPtrOutput
}

type applicationStatusHistorySourceKsonnetPtrType ApplicationStatusHistorySourceKsonnetArgs

func ApplicationStatusHistorySourceKsonnetPtr(v *ApplicationStatusHistorySourceKsonnetArgs) ApplicationStatusHistorySourceKsonnetPtrInput {
	return (*applicationStatusHistorySourceKsonnetPtrType)(v)
}

func (*applicationStatusHistorySourceKsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceKsonnet)(nil)).Elem()
}

func (i *applicationStatusHistorySourceKsonnetPtrType) ToApplicationStatusHistorySourceKsonnetPtrOutput() ApplicationStatusHistorySourceKsonnetPtrOutput {
	return i.ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourceKsonnetPtrType) ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKsonnetPtrOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusHistorySourceKsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKsonnetOutput) ToApplicationStatusHistorySourceKsonnetOutput() ApplicationStatusHistorySourceKsonnetOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetOutput) ToApplicationStatusHistorySourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetOutput) ToApplicationStatusHistorySourceKsonnetPtrOutput() ApplicationStatusHistorySourceKsonnetPtrOutput {
	return o.ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourceKsonnetOutput) ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKsonnet) *ApplicationStatusHistorySourceKsonnet {
		return &v
	}).(ApplicationStatusHistorySourceKsonnetPtrOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusHistorySourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusHistorySourceKsonnetOutput) Parameters() ApplicationStatusHistorySourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKsonnet) []ApplicationStatusHistorySourceKsonnetParameters {
		return v.Parameters
	}).(ApplicationStatusHistorySourceKsonnetParametersArrayOutput)
}

type ApplicationStatusHistorySourceKsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKsonnetPtrOutput) ToApplicationStatusHistorySourceKsonnetPtrOutput() ApplicationStatusHistorySourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetPtrOutput) ToApplicationStatusHistorySourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetPtrOutput) Elem() ApplicationStatusHistorySourceKsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKsonnet) ApplicationStatusHistorySourceKsonnet { return *v }).(ApplicationStatusHistorySourceKsonnetOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusHistorySourceKsonnetPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKsonnet) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusHistorySourceKsonnetPtrOutput) Parameters() ApplicationStatusHistorySourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKsonnet) []ApplicationStatusHistorySourceKsonnetParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusHistorySourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusHistorySourceKsonnetParameters struct {
	Component *string `pulumi:"component"`
	Name      string  `pulumi:"name"`
	Value     string  `pulumi:"value"`
}

// ApplicationStatusHistorySourceKsonnetParametersInput is an input type that accepts ApplicationStatusHistorySourceKsonnetParametersArgs and ApplicationStatusHistorySourceKsonnetParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKsonnetParametersInput` via:
//
//          ApplicationStatusHistorySourceKsonnetParametersArgs{...}
type ApplicationStatusHistorySourceKsonnetParametersInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKsonnetParametersOutput() ApplicationStatusHistorySourceKsonnetParametersOutput
	ToApplicationStatusHistorySourceKsonnetParametersOutputWithContext(context.Context) ApplicationStatusHistorySourceKsonnetParametersOutput
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusHistorySourceKsonnetParametersArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Value     pulumi.StringInput    `pulumi:"value"`
}

func (ApplicationStatusHistorySourceKsonnetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceKsonnetParametersArgs) ToApplicationStatusHistorySourceKsonnetParametersOutput() ApplicationStatusHistorySourceKsonnetParametersOutput {
	return i.ToApplicationStatusHistorySourceKsonnetParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKsonnetParametersArgs) ToApplicationStatusHistorySourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKsonnetParametersOutput)
}

// ApplicationStatusHistorySourceKsonnetParametersArrayInput is an input type that accepts ApplicationStatusHistorySourceKsonnetParametersArray and ApplicationStatusHistorySourceKsonnetParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKsonnetParametersArrayInput` via:
//
//          ApplicationStatusHistorySourceKsonnetParametersArray{ ApplicationStatusHistorySourceKsonnetParametersArgs{...} }
type ApplicationStatusHistorySourceKsonnetParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKsonnetParametersArrayOutput() ApplicationStatusHistorySourceKsonnetParametersArrayOutput
	ToApplicationStatusHistorySourceKsonnetParametersArrayOutputWithContext(context.Context) ApplicationStatusHistorySourceKsonnetParametersArrayOutput
}

type ApplicationStatusHistorySourceKsonnetParametersArray []ApplicationStatusHistorySourceKsonnetParametersInput

func (ApplicationStatusHistorySourceKsonnetParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceKsonnetParametersArray) ToApplicationStatusHistorySourceKsonnetParametersArrayOutput() ApplicationStatusHistorySourceKsonnetParametersArrayOutput {
	return i.ToApplicationStatusHistorySourceKsonnetParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKsonnetParametersArray) ToApplicationStatusHistorySourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusHistorySourceKsonnetParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKsonnetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKsonnetParametersOutput) ToApplicationStatusHistorySourceKsonnetParametersOutput() ApplicationStatusHistorySourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetParametersOutput) ToApplicationStatusHistorySourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetParametersOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKsonnetParameters) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusHistorySourceKsonnetParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKsonnetParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusHistorySourceKsonnetParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKsonnetParameters) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusHistorySourceKsonnetParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKsonnetParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKsonnetParametersArrayOutput) ToApplicationStatusHistorySourceKsonnetParametersArrayOutput() ApplicationStatusHistorySourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetParametersArrayOutput) ToApplicationStatusHistorySourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourceKsonnetParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistorySourceKsonnetParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistorySourceKsonnetParameters {
		return vs[0].([]ApplicationStatusHistorySourceKsonnetParameters)[vs[1].(int)]
	}).(ApplicationStatusHistorySourceKsonnetParametersOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusHistorySourceKustomize struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images []string `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `pulumi:"version"`
}

// ApplicationStatusHistorySourceKustomizeInput is an input type that accepts ApplicationStatusHistorySourceKustomizeArgs and ApplicationStatusHistorySourceKustomizeOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKustomizeInput` via:
//
//          ApplicationStatusHistorySourceKustomizeArgs{...}
type ApplicationStatusHistorySourceKustomizeInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKustomizeOutput() ApplicationStatusHistorySourceKustomizeOutput
	ToApplicationStatusHistorySourceKustomizeOutputWithContext(context.Context) ApplicationStatusHistorySourceKustomizeOutput
}

// Kustomize holds kustomize specific options
type ApplicationStatusHistorySourceKustomizeArgs struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images pulumi.StringArrayInput `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusHistorySourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKustomize)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceKustomizeArgs) ToApplicationStatusHistorySourceKustomizeOutput() ApplicationStatusHistorySourceKustomizeOutput {
	return i.ToApplicationStatusHistorySourceKustomizeOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKustomizeArgs) ToApplicationStatusHistorySourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKustomizeOutput)
}

func (i ApplicationStatusHistorySourceKustomizeArgs) ToApplicationStatusHistorySourceKustomizePtrOutput() ApplicationStatusHistorySourceKustomizePtrOutput {
	return i.ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKustomizeArgs) ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKustomizeOutput).ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourceKustomizePtrInput is an input type that accepts ApplicationStatusHistorySourceKustomizeArgs, ApplicationStatusHistorySourceKustomizePtr and ApplicationStatusHistorySourceKustomizePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKustomizePtrInput` via:
//
//          ApplicationStatusHistorySourceKustomizeArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourceKustomizePtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKustomizePtrOutput() ApplicationStatusHistorySourceKustomizePtrOutput
	ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(context.Context) ApplicationStatusHistorySourceKustomizePtrOutput
}

type applicationStatusHistorySourceKustomizePtrType ApplicationStatusHistorySourceKustomizeArgs

func ApplicationStatusHistorySourceKustomizePtr(v *ApplicationStatusHistorySourceKustomizeArgs) ApplicationStatusHistorySourceKustomizePtrInput {
	return (*applicationStatusHistorySourceKustomizePtrType)(v)
}

func (*applicationStatusHistorySourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceKustomize)(nil)).Elem()
}

func (i *applicationStatusHistorySourceKustomizePtrType) ToApplicationStatusHistorySourceKustomizePtrOutput() ApplicationStatusHistorySourceKustomizePtrOutput {
	return i.ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourceKustomizePtrType) ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKustomizePtrOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusHistorySourceKustomizeOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKustomizeOutput) ToApplicationStatusHistorySourceKustomizeOutput() ApplicationStatusHistorySourceKustomizeOutput {
	return o
}

func (o ApplicationStatusHistorySourceKustomizeOutput) ToApplicationStatusHistorySourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizeOutput {
	return o
}

func (o ApplicationStatusHistorySourceKustomizeOutput) ToApplicationStatusHistorySourceKustomizePtrOutput() ApplicationStatusHistorySourceKustomizePtrOutput {
	return o.ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourceKustomizeOutput) ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) *ApplicationStatusHistorySourceKustomize {
		return &v
	}).(ApplicationStatusHistorySourceKustomizePtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusHistorySourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) map[string]string { return v.CommonAnnotations }).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusHistorySourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusHistorySourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusHistorySourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusHistorySourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusHistorySourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHistorySourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKustomizePtrOutput) ToApplicationStatusHistorySourceKustomizePtrOutput() ApplicationStatusHistorySourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceKustomizePtrOutput) ToApplicationStatusHistorySourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusHistorySourceKustomizePtrOutput) Elem() ApplicationStatusHistorySourceKustomizeOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) ApplicationStatusHistorySourceKustomize { return *v }).(ApplicationStatusHistorySourceKustomizeOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusHistorySourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusHistorySourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusHistorySourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusHistorySourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusHistorySourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusHistorySourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusHistorySourceKustomizeCommonAnnotations struct {
}

// ApplicationStatusHistorySourceKustomizeCommonAnnotationsInput is an input type that accepts ApplicationStatusHistorySourceKustomizeCommonAnnotationsArgs and ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKustomizeCommonAnnotationsInput` via:
//
//          ApplicationStatusHistorySourceKustomizeCommonAnnotationsArgs{...}
type ApplicationStatusHistorySourceKustomizeCommonAnnotationsInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput() ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput
	ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutputWithContext(context.Context) ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusHistorySourceKustomizeCommonAnnotationsArgs struct {
}

func (ApplicationStatusHistorySourceKustomizeCommonAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceKustomizeCommonAnnotationsArgs) ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput() ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput {
	return i.ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKustomizeCommonAnnotationsArgs) ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput) ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput() ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput {
	return o
}

func (o ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput) ToApplicationStatusHistorySourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput {
	return o
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusHistorySourceKustomizeCommonLabels struct {
}

// ApplicationStatusHistorySourceKustomizeCommonLabelsInput is an input type that accepts ApplicationStatusHistorySourceKustomizeCommonLabelsArgs and ApplicationStatusHistorySourceKustomizeCommonLabelsOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourceKustomizeCommonLabelsInput` via:
//
//          ApplicationStatusHistorySourceKustomizeCommonLabelsArgs{...}
type ApplicationStatusHistorySourceKustomizeCommonLabelsInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourceKustomizeCommonLabelsOutput() ApplicationStatusHistorySourceKustomizeCommonLabelsOutput
	ToApplicationStatusHistorySourceKustomizeCommonLabelsOutputWithContext(context.Context) ApplicationStatusHistorySourceKustomizeCommonLabelsOutput
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusHistorySourceKustomizeCommonLabelsArgs struct {
}

func (ApplicationStatusHistorySourceKustomizeCommonLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKustomizeCommonLabels)(nil)).Elem()
}

func (i ApplicationStatusHistorySourceKustomizeCommonLabelsArgs) ToApplicationStatusHistorySourceKustomizeCommonLabelsOutput() ApplicationStatusHistorySourceKustomizeCommonLabelsOutput {
	return i.ToApplicationStatusHistorySourceKustomizeCommonLabelsOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourceKustomizeCommonLabelsArgs) ToApplicationStatusHistorySourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizeCommonLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourceKustomizeCommonLabelsOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusHistorySourceKustomizeCommonLabelsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourceKustomizeCommonLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourceKustomizeCommonLabels)(nil)).Elem()
}

func (o ApplicationStatusHistorySourceKustomizeCommonLabelsOutput) ToApplicationStatusHistorySourceKustomizeCommonLabelsOutput() ApplicationStatusHistorySourceKustomizeCommonLabelsOutput {
	return o
}

func (o ApplicationStatusHistorySourceKustomizeCommonLabelsOutput) ToApplicationStatusHistorySourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusHistorySourceKustomizeCommonLabelsOutput {
	return o
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusHistorySourcePlugin struct {
	// Env is a list of environment variable entries
	Env  []ApplicationStatusHistorySourcePluginEnv `pulumi:"env"`
	Name *string                                   `pulumi:"name"`
}

// ApplicationStatusHistorySourcePluginInput is an input type that accepts ApplicationStatusHistorySourcePluginArgs and ApplicationStatusHistorySourcePluginOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourcePluginInput` via:
//
//          ApplicationStatusHistorySourcePluginArgs{...}
type ApplicationStatusHistorySourcePluginInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourcePluginOutput() ApplicationStatusHistorySourcePluginOutput
	ToApplicationStatusHistorySourcePluginOutputWithContext(context.Context) ApplicationStatusHistorySourcePluginOutput
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusHistorySourcePluginArgs struct {
	// Env is a list of environment variable entries
	Env  ApplicationStatusHistorySourcePluginEnvArrayInput `pulumi:"env"`
	Name pulumi.StringPtrInput                             `pulumi:"name"`
}

func (ApplicationStatusHistorySourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourcePlugin)(nil)).Elem()
}

func (i ApplicationStatusHistorySourcePluginArgs) ToApplicationStatusHistorySourcePluginOutput() ApplicationStatusHistorySourcePluginOutput {
	return i.ToApplicationStatusHistorySourcePluginOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourcePluginArgs) ToApplicationStatusHistorySourcePluginOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourcePluginOutput)
}

func (i ApplicationStatusHistorySourcePluginArgs) ToApplicationStatusHistorySourcePluginPtrOutput() ApplicationStatusHistorySourcePluginPtrOutput {
	return i.ToApplicationStatusHistorySourcePluginPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourcePluginArgs) ToApplicationStatusHistorySourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourcePluginOutput).ToApplicationStatusHistorySourcePluginPtrOutputWithContext(ctx)
}

// ApplicationStatusHistorySourcePluginPtrInput is an input type that accepts ApplicationStatusHistorySourcePluginArgs, ApplicationStatusHistorySourcePluginPtr and ApplicationStatusHistorySourcePluginPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourcePluginPtrInput` via:
//
//          ApplicationStatusHistorySourcePluginArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusHistorySourcePluginPtrInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourcePluginPtrOutput() ApplicationStatusHistorySourcePluginPtrOutput
	ToApplicationStatusHistorySourcePluginPtrOutputWithContext(context.Context) ApplicationStatusHistorySourcePluginPtrOutput
}

type applicationStatusHistorySourcePluginPtrType ApplicationStatusHistorySourcePluginArgs

func ApplicationStatusHistorySourcePluginPtr(v *ApplicationStatusHistorySourcePluginArgs) ApplicationStatusHistorySourcePluginPtrInput {
	return (*applicationStatusHistorySourcePluginPtrType)(v)
}

func (*applicationStatusHistorySourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourcePlugin)(nil)).Elem()
}

func (i *applicationStatusHistorySourcePluginPtrType) ToApplicationStatusHistorySourcePluginPtrOutput() ApplicationStatusHistorySourcePluginPtrOutput {
	return i.ToApplicationStatusHistorySourcePluginPtrOutputWithContext(context.Background())
}

func (i *applicationStatusHistorySourcePluginPtrType) ToApplicationStatusHistorySourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourcePluginPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusHistorySourcePluginOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusHistorySourcePluginOutput) ToApplicationStatusHistorySourcePluginOutput() ApplicationStatusHistorySourcePluginOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginOutput) ToApplicationStatusHistorySourcePluginOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginOutput) ToApplicationStatusHistorySourcePluginPtrOutput() ApplicationStatusHistorySourcePluginPtrOutput {
	return o.ToApplicationStatusHistorySourcePluginPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusHistorySourcePluginOutput) ToApplicationStatusHistorySourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourcePlugin) *ApplicationStatusHistorySourcePlugin {
		return &v
	}).(ApplicationStatusHistorySourcePluginPtrOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusHistorySourcePluginOutput) Env() ApplicationStatusHistorySourcePluginEnvArrayOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourcePlugin) []ApplicationStatusHistorySourcePluginEnv { return v.Env }).(ApplicationStatusHistorySourcePluginEnvArrayOutput)
}

func (o ApplicationStatusHistorySourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationStatusHistorySourcePluginPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusHistorySourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusHistorySourcePluginPtrOutput) ToApplicationStatusHistorySourcePluginPtrOutput() ApplicationStatusHistorySourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginPtrOutput) ToApplicationStatusHistorySourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginPtrOutput) Elem() ApplicationStatusHistorySourcePluginOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourcePlugin) ApplicationStatusHistorySourcePlugin { return *v }).(ApplicationStatusHistorySourcePluginOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusHistorySourcePluginPtrOutput) Env() ApplicationStatusHistorySourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourcePlugin) []ApplicationStatusHistorySourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(ApplicationStatusHistorySourcePluginEnvArrayOutput)
}

func (o ApplicationStatusHistorySourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusHistorySourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusHistorySourcePluginEnv struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name string `pulumi:"name"`
	// Value is the value of the variable
	Value string `pulumi:"value"`
}

// ApplicationStatusHistorySourcePluginEnvInput is an input type that accepts ApplicationStatusHistorySourcePluginEnvArgs and ApplicationStatusHistorySourcePluginEnvOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourcePluginEnvInput` via:
//
//          ApplicationStatusHistorySourcePluginEnvArgs{...}
type ApplicationStatusHistorySourcePluginEnvInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourcePluginEnvOutput() ApplicationStatusHistorySourcePluginEnvOutput
	ToApplicationStatusHistorySourcePluginEnvOutputWithContext(context.Context) ApplicationStatusHistorySourcePluginEnvOutput
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusHistorySourcePluginEnvArgs struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name pulumi.StringInput `pulumi:"name"`
	// Value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationStatusHistorySourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusHistorySourcePluginEnvArgs) ToApplicationStatusHistorySourcePluginEnvOutput() ApplicationStatusHistorySourcePluginEnvOutput {
	return i.ToApplicationStatusHistorySourcePluginEnvOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourcePluginEnvArgs) ToApplicationStatusHistorySourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourcePluginEnvOutput)
}

// ApplicationStatusHistorySourcePluginEnvArrayInput is an input type that accepts ApplicationStatusHistorySourcePluginEnvArray and ApplicationStatusHistorySourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusHistorySourcePluginEnvArrayInput` via:
//
//          ApplicationStatusHistorySourcePluginEnvArray{ ApplicationStatusHistorySourcePluginEnvArgs{...} }
type ApplicationStatusHistorySourcePluginEnvArrayInput interface {
	pulumi.Input

	ToApplicationStatusHistorySourcePluginEnvArrayOutput() ApplicationStatusHistorySourcePluginEnvArrayOutput
	ToApplicationStatusHistorySourcePluginEnvArrayOutputWithContext(context.Context) ApplicationStatusHistorySourcePluginEnvArrayOutput
}

type ApplicationStatusHistorySourcePluginEnvArray []ApplicationStatusHistorySourcePluginEnvInput

func (ApplicationStatusHistorySourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusHistorySourcePluginEnvArray) ToApplicationStatusHistorySourcePluginEnvArrayOutput() ApplicationStatusHistorySourcePluginEnvArrayOutput {
	return i.ToApplicationStatusHistorySourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusHistorySourcePluginEnvArray) ToApplicationStatusHistorySourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusHistorySourcePluginEnvArrayOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusHistorySourcePluginEnvOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusHistorySourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusHistorySourcePluginEnvOutput) ToApplicationStatusHistorySourcePluginEnvOutput() ApplicationStatusHistorySourcePluginEnvOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginEnvOutput) ToApplicationStatusHistorySourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginEnvOutput {
	return o
}

// Name is the name of the variable, usually expressed in uppercase
func (o ApplicationStatusHistorySourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value is the value of the variable
func (o ApplicationStatusHistorySourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusHistorySourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusHistorySourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusHistorySourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusHistorySourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusHistorySourcePluginEnvArrayOutput) ToApplicationStatusHistorySourcePluginEnvArrayOutput() ApplicationStatusHistorySourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginEnvArrayOutput) ToApplicationStatusHistorySourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusHistorySourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusHistorySourcePluginEnvArrayOutput) Index(i pulumi.IntInput) ApplicationStatusHistorySourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusHistorySourcePluginEnv {
		return vs[0].([]ApplicationStatusHistorySourcePluginEnv)[vs[1].(int)]
	}).(ApplicationStatusHistorySourcePluginEnvOutput)
}

// OperationState contains information about any ongoing operations, such as a sync
type ApplicationStatusOperationState struct {
	// FinishedAt contains time of operation completion
	FinishedAt *string `pulumi:"finishedAt"`
	// Message holds any pertinent messages when attempting to perform operation (typically errors).
	Message *string `pulumi:"message"`
	// Operation is the original requested operation
	Operation ApplicationStatusOperationStateOperation `pulumi:"operation"`
	// Phase is the current phase of the operation
	Phase string `pulumi:"phase"`
	// RetryCount contains time of operation retries
	RetryCount *int `pulumi:"retryCount"`
	// StartedAt contains time of operation start
	StartedAt string `pulumi:"startedAt"`
	// SyncResult is the result of a Sync operation
	SyncResult *ApplicationStatusOperationStateSyncResult `pulumi:"syncResult"`
}

// ApplicationStatusOperationStateInput is an input type that accepts ApplicationStatusOperationStateArgs and ApplicationStatusOperationStateOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateInput` via:
//
//          ApplicationStatusOperationStateArgs{...}
type ApplicationStatusOperationStateInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOutput() ApplicationStatusOperationStateOutput
	ToApplicationStatusOperationStateOutputWithContext(context.Context) ApplicationStatusOperationStateOutput
}

// OperationState contains information about any ongoing operations, such as a sync
type ApplicationStatusOperationStateArgs struct {
	// FinishedAt contains time of operation completion
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message holds any pertinent messages when attempting to perform operation (typically errors).
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Operation is the original requested operation
	Operation ApplicationStatusOperationStateOperationInput `pulumi:"operation"`
	// Phase is the current phase of the operation
	Phase pulumi.StringInput `pulumi:"phase"`
	// RetryCount contains time of operation retries
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// StartedAt contains time of operation start
	StartedAt pulumi.StringInput `pulumi:"startedAt"`
	// SyncResult is the result of a Sync operation
	SyncResult ApplicationStatusOperationStateSyncResultPtrInput `pulumi:"syncResult"`
}

func (ApplicationStatusOperationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationState)(nil)).Elem()
}

func (i ApplicationStatusOperationStateArgs) ToApplicationStatusOperationStateOutput() ApplicationStatusOperationStateOutput {
	return i.ToApplicationStatusOperationStateOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateArgs) ToApplicationStatusOperationStateOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOutput)
}

func (i ApplicationStatusOperationStateArgs) ToApplicationStatusOperationStatePtrOutput() ApplicationStatusOperationStatePtrOutput {
	return i.ToApplicationStatusOperationStatePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateArgs) ToApplicationStatusOperationStatePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOutput).ToApplicationStatusOperationStatePtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStatePtrInput is an input type that accepts ApplicationStatusOperationStateArgs, ApplicationStatusOperationStatePtr and ApplicationStatusOperationStatePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStatePtrInput` via:
//
//          ApplicationStatusOperationStateArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStatePtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStatePtrOutput() ApplicationStatusOperationStatePtrOutput
	ToApplicationStatusOperationStatePtrOutputWithContext(context.Context) ApplicationStatusOperationStatePtrOutput
}

type applicationStatusOperationStatePtrType ApplicationStatusOperationStateArgs

func ApplicationStatusOperationStatePtr(v *ApplicationStatusOperationStateArgs) ApplicationStatusOperationStatePtrInput {
	return (*applicationStatusOperationStatePtrType)(v)
}

func (*applicationStatusOperationStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationState)(nil)).Elem()
}

func (i *applicationStatusOperationStatePtrType) ToApplicationStatusOperationStatePtrOutput() ApplicationStatusOperationStatePtrOutput {
	return i.ToApplicationStatusOperationStatePtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStatePtrType) ToApplicationStatusOperationStatePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStatePtrOutput)
}

// OperationState contains information about any ongoing operations, such as a sync
type ApplicationStatusOperationStateOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationState)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOutput) ToApplicationStatusOperationStateOutput() ApplicationStatusOperationStateOutput {
	return o
}

func (o ApplicationStatusOperationStateOutput) ToApplicationStatusOperationStateOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOutput {
	return o
}

func (o ApplicationStatusOperationStateOutput) ToApplicationStatusOperationStatePtrOutput() ApplicationStatusOperationStatePtrOutput {
	return o.ToApplicationStatusOperationStatePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOutput) ToApplicationStatusOperationStatePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStatePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) *ApplicationStatusOperationState {
		return &v
	}).(ApplicationStatusOperationStatePtrOutput)
}

// FinishedAt contains time of operation completion
func (o ApplicationStatusOperationStateOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message holds any pertinent messages when attempting to perform operation (typically errors).
func (o ApplicationStatusOperationStateOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Operation is the original requested operation
func (o ApplicationStatusOperationStateOutput) Operation() ApplicationStatusOperationStateOperationOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) ApplicationStatusOperationStateOperation { return v.Operation }).(ApplicationStatusOperationStateOperationOutput)
}

// Phase is the current phase of the operation
func (o ApplicationStatusOperationStateOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) string { return v.Phase }).(pulumi.StringOutput)
}

// RetryCount contains time of operation retries
func (o ApplicationStatusOperationStateOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// StartedAt contains time of operation start
func (o ApplicationStatusOperationStateOutput) StartedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) string { return v.StartedAt }).(pulumi.StringOutput)
}

// SyncResult is the result of a Sync operation
func (o ApplicationStatusOperationStateOutput) SyncResult() ApplicationStatusOperationStateSyncResultPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationState) *ApplicationStatusOperationStateSyncResult {
		return v.SyncResult
	}).(ApplicationStatusOperationStateSyncResultPtrOutput)
}

type ApplicationStatusOperationStatePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationState)(nil)).Elem()
}

func (o ApplicationStatusOperationStatePtrOutput) ToApplicationStatusOperationStatePtrOutput() ApplicationStatusOperationStatePtrOutput {
	return o
}

func (o ApplicationStatusOperationStatePtrOutput) ToApplicationStatusOperationStatePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStatePtrOutput {
	return o
}

func (o ApplicationStatusOperationStatePtrOutput) Elem() ApplicationStatusOperationStateOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) ApplicationStatusOperationState { return *v }).(ApplicationStatusOperationStateOutput)
}

// FinishedAt contains time of operation completion
func (o ApplicationStatusOperationStatePtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message holds any pertinent messages when attempting to perform operation (typically errors).
func (o ApplicationStatusOperationStatePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Operation is the original requested operation
func (o ApplicationStatusOperationStatePtrOutput) Operation() ApplicationStatusOperationStateOperationPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *ApplicationStatusOperationStateOperation {
		if v == nil {
			return nil
		}
		return &v.Operation
	}).(ApplicationStatusOperationStateOperationPtrOutput)
}

// Phase is the current phase of the operation
func (o ApplicationStatusOperationStatePtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// RetryCount contains time of operation retries
func (o ApplicationStatusOperationStatePtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// StartedAt contains time of operation start
func (o ApplicationStatusOperationStatePtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *string {
		if v == nil {
			return nil
		}
		return &v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// SyncResult is the result of a Sync operation
func (o ApplicationStatusOperationStatePtrOutput) SyncResult() ApplicationStatusOperationStateSyncResultPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationState) *ApplicationStatusOperationStateSyncResult {
		if v == nil {
			return nil
		}
		return v.SyncResult
	}).(ApplicationStatusOperationStateSyncResultPtrOutput)
}

// Operation is the original requested operation
type ApplicationStatusOperationStateOperation struct {
	// Info is a list of informational items for this operation
	Info []ApplicationStatusOperationStateOperationInfo `pulumi:"info"`
	// InitiatedBy contains information about who initiated the operations
	InitiatedBy *ApplicationStatusOperationStateOperationInitiatedBy `pulumi:"initiatedBy"`
	// Retry controls the strategy to apply if a sync fails
	Retry *ApplicationStatusOperationStateOperationRetry `pulumi:"retry"`
	// Sync contains parameters for the operation
	Sync *ApplicationStatusOperationStateOperationSync `pulumi:"sync"`
}

// ApplicationStatusOperationStateOperationInput is an input type that accepts ApplicationStatusOperationStateOperationArgs and ApplicationStatusOperationStateOperationOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationInput` via:
//
//          ApplicationStatusOperationStateOperationArgs{...}
type ApplicationStatusOperationStateOperationInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationOutput() ApplicationStatusOperationStateOperationOutput
	ToApplicationStatusOperationStateOperationOutputWithContext(context.Context) ApplicationStatusOperationStateOperationOutput
}

// Operation is the original requested operation
type ApplicationStatusOperationStateOperationArgs struct {
	// Info is a list of informational items for this operation
	Info ApplicationStatusOperationStateOperationInfoArrayInput `pulumi:"info"`
	// InitiatedBy contains information about who initiated the operations
	InitiatedBy ApplicationStatusOperationStateOperationInitiatedByPtrInput `pulumi:"initiatedBy"`
	// Retry controls the strategy to apply if a sync fails
	Retry ApplicationStatusOperationStateOperationRetryPtrInput `pulumi:"retry"`
	// Sync contains parameters for the operation
	Sync ApplicationStatusOperationStateOperationSyncPtrInput `pulumi:"sync"`
}

func (ApplicationStatusOperationStateOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperation)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationArgs) ToApplicationStatusOperationStateOperationOutput() ApplicationStatusOperationStateOperationOutput {
	return i.ToApplicationStatusOperationStateOperationOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationArgs) ToApplicationStatusOperationStateOperationOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationOutput)
}

func (i ApplicationStatusOperationStateOperationArgs) ToApplicationStatusOperationStateOperationPtrOutput() ApplicationStatusOperationStateOperationPtrOutput {
	return i.ToApplicationStatusOperationStateOperationPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationArgs) ToApplicationStatusOperationStateOperationPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationOutput).ToApplicationStatusOperationStateOperationPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationPtrInput is an input type that accepts ApplicationStatusOperationStateOperationArgs, ApplicationStatusOperationStateOperationPtr and ApplicationStatusOperationStateOperationPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationPtrInput` via:
//
//          ApplicationStatusOperationStateOperationArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationPtrOutput() ApplicationStatusOperationStateOperationPtrOutput
	ToApplicationStatusOperationStateOperationPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationPtrOutput
}

type applicationStatusOperationStateOperationPtrType ApplicationStatusOperationStateOperationArgs

func ApplicationStatusOperationStateOperationPtr(v *ApplicationStatusOperationStateOperationArgs) ApplicationStatusOperationStateOperationPtrInput {
	return (*applicationStatusOperationStateOperationPtrType)(v)
}

func (*applicationStatusOperationStateOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperation)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationPtrType) ToApplicationStatusOperationStateOperationPtrOutput() ApplicationStatusOperationStateOperationPtrOutput {
	return i.ToApplicationStatusOperationStateOperationPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationPtrType) ToApplicationStatusOperationStateOperationPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationPtrOutput)
}

// Operation is the original requested operation
type ApplicationStatusOperationStateOperationOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperation)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationOutput) ToApplicationStatusOperationStateOperationOutput() ApplicationStatusOperationStateOperationOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationOutput) ToApplicationStatusOperationStateOperationOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationOutput) ToApplicationStatusOperationStateOperationPtrOutput() ApplicationStatusOperationStateOperationPtrOutput {
	return o.ToApplicationStatusOperationStateOperationPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationOutput) ToApplicationStatusOperationStateOperationPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperation {
		return &v
	}).(ApplicationStatusOperationStateOperationPtrOutput)
}

// Info is a list of informational items for this operation
func (o ApplicationStatusOperationStateOperationOutput) Info() ApplicationStatusOperationStateOperationInfoArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperation) []ApplicationStatusOperationStateOperationInfo {
		return v.Info
	}).(ApplicationStatusOperationStateOperationInfoArrayOutput)
}

// InitiatedBy contains information about who initiated the operations
func (o ApplicationStatusOperationStateOperationOutput) InitiatedBy() ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperationInitiatedBy {
		return v.InitiatedBy
	}).(ApplicationStatusOperationStateOperationInitiatedByPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
func (o ApplicationStatusOperationStateOperationOutput) Retry() ApplicationStatusOperationStateOperationRetryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperationRetry {
		return v.Retry
	}).(ApplicationStatusOperationStateOperationRetryPtrOutput)
}

// Sync contains parameters for the operation
func (o ApplicationStatusOperationStateOperationOutput) Sync() ApplicationStatusOperationStateOperationSyncPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperationSync {
		return v.Sync
	}).(ApplicationStatusOperationStateOperationSyncPtrOutput)
}

type ApplicationStatusOperationStateOperationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperation)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationPtrOutput) ToApplicationStatusOperationStateOperationPtrOutput() ApplicationStatusOperationStateOperationPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationPtrOutput) ToApplicationStatusOperationStateOperationPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationPtrOutput) Elem() ApplicationStatusOperationStateOperationOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperation) ApplicationStatusOperationStateOperation { return *v }).(ApplicationStatusOperationStateOperationOutput)
}

// Info is a list of informational items for this operation
func (o ApplicationStatusOperationStateOperationPtrOutput) Info() ApplicationStatusOperationStateOperationInfoArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperation) []ApplicationStatusOperationStateOperationInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(ApplicationStatusOperationStateOperationInfoArrayOutput)
}

// InitiatedBy contains information about who initiated the operations
func (o ApplicationStatusOperationStateOperationPtrOutput) InitiatedBy() ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperationInitiatedBy {
		if v == nil {
			return nil
		}
		return v.InitiatedBy
	}).(ApplicationStatusOperationStateOperationInitiatedByPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
func (o ApplicationStatusOperationStateOperationPtrOutput) Retry() ApplicationStatusOperationStateOperationRetryPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperationRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(ApplicationStatusOperationStateOperationRetryPtrOutput)
}

// Sync contains parameters for the operation
func (o ApplicationStatusOperationStateOperationPtrOutput) Sync() ApplicationStatusOperationStateOperationSyncPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperation) *ApplicationStatusOperationStateOperationSync {
		if v == nil {
			return nil
		}
		return v.Sync
	}).(ApplicationStatusOperationStateOperationSyncPtrOutput)
}

type ApplicationStatusOperationStateOperationInfo struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateOperationInfoInput is an input type that accepts ApplicationStatusOperationStateOperationInfoArgs and ApplicationStatusOperationStateOperationInfoOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationInfoInput` via:
//
//          ApplicationStatusOperationStateOperationInfoArgs{...}
type ApplicationStatusOperationStateOperationInfoInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationInfoOutput() ApplicationStatusOperationStateOperationInfoOutput
	ToApplicationStatusOperationStateOperationInfoOutputWithContext(context.Context) ApplicationStatusOperationStateOperationInfoOutput
}

type ApplicationStatusOperationStateOperationInfoArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationStatusOperationStateOperationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationInfo)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationInfoArgs) ToApplicationStatusOperationStateOperationInfoOutput() ApplicationStatusOperationStateOperationInfoOutput {
	return i.ToApplicationStatusOperationStateOperationInfoOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationInfoArgs) ToApplicationStatusOperationStateOperationInfoOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationInfoOutput)
}

// ApplicationStatusOperationStateOperationInfoArrayInput is an input type that accepts ApplicationStatusOperationStateOperationInfoArray and ApplicationStatusOperationStateOperationInfoArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationInfoArrayInput` via:
//
//          ApplicationStatusOperationStateOperationInfoArray{ ApplicationStatusOperationStateOperationInfoArgs{...} }
type ApplicationStatusOperationStateOperationInfoArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationInfoArrayOutput() ApplicationStatusOperationStateOperationInfoArrayOutput
	ToApplicationStatusOperationStateOperationInfoArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationInfoArrayOutput
}

type ApplicationStatusOperationStateOperationInfoArray []ApplicationStatusOperationStateOperationInfoInput

func (ApplicationStatusOperationStateOperationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationInfo)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationInfoArray) ToApplicationStatusOperationStateOperationInfoArrayOutput() ApplicationStatusOperationStateOperationInfoArrayOutput {
	return i.ToApplicationStatusOperationStateOperationInfoArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationInfoArray) ToApplicationStatusOperationStateOperationInfoArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationInfoArrayOutput)
}

type ApplicationStatusOperationStateOperationInfoOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationInfo)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationInfoOutput) ToApplicationStatusOperationStateOperationInfoOutput() ApplicationStatusOperationStateOperationInfoOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInfoOutput) ToApplicationStatusOperationStateOperationInfoOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInfoOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateOperationInfoOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationInfo) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateOperationInfoArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationInfo)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationInfoArrayOutput) ToApplicationStatusOperationStateOperationInfoArrayOutput() ApplicationStatusOperationStateOperationInfoArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInfoArrayOutput) ToApplicationStatusOperationStateOperationInfoArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInfoArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInfoArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationInfo {
		return vs[0].([]ApplicationStatusOperationStateOperationInfo)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationInfoOutput)
}

// InitiatedBy contains information about who initiated the operations
type ApplicationStatusOperationStateOperationInitiatedBy struct {
	// Automated is set to true if operation was initiated automatically by the application controller.
	Automated *bool `pulumi:"automated"`
	// Username contains the name of a user who started operation
	Username *string `pulumi:"username"`
}

// ApplicationStatusOperationStateOperationInitiatedByInput is an input type that accepts ApplicationStatusOperationStateOperationInitiatedByArgs and ApplicationStatusOperationStateOperationInitiatedByOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationInitiatedByInput` via:
//
//          ApplicationStatusOperationStateOperationInitiatedByArgs{...}
type ApplicationStatusOperationStateOperationInitiatedByInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationInitiatedByOutput() ApplicationStatusOperationStateOperationInitiatedByOutput
	ToApplicationStatusOperationStateOperationInitiatedByOutputWithContext(context.Context) ApplicationStatusOperationStateOperationInitiatedByOutput
}

// InitiatedBy contains information about who initiated the operations
type ApplicationStatusOperationStateOperationInitiatedByArgs struct {
	// Automated is set to true if operation was initiated automatically by the application controller.
	Automated pulumi.BoolPtrInput `pulumi:"automated"`
	// Username contains the name of a user who started operation
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplicationStatusOperationStateOperationInitiatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationInitiatedBy)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationInitiatedByArgs) ToApplicationStatusOperationStateOperationInitiatedByOutput() ApplicationStatusOperationStateOperationInitiatedByOutput {
	return i.ToApplicationStatusOperationStateOperationInitiatedByOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationInitiatedByArgs) ToApplicationStatusOperationStateOperationInitiatedByOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInitiatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationInitiatedByOutput)
}

func (i ApplicationStatusOperationStateOperationInitiatedByArgs) ToApplicationStatusOperationStateOperationInitiatedByPtrOutput() ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return i.ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationInitiatedByArgs) ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationInitiatedByOutput).ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationInitiatedByPtrInput is an input type that accepts ApplicationStatusOperationStateOperationInitiatedByArgs, ApplicationStatusOperationStateOperationInitiatedByPtr and ApplicationStatusOperationStateOperationInitiatedByPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationInitiatedByPtrInput` via:
//
//          ApplicationStatusOperationStateOperationInitiatedByArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationInitiatedByPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationInitiatedByPtrOutput() ApplicationStatusOperationStateOperationInitiatedByPtrOutput
	ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationInitiatedByPtrOutput
}

type applicationStatusOperationStateOperationInitiatedByPtrType ApplicationStatusOperationStateOperationInitiatedByArgs

func ApplicationStatusOperationStateOperationInitiatedByPtr(v *ApplicationStatusOperationStateOperationInitiatedByArgs) ApplicationStatusOperationStateOperationInitiatedByPtrInput {
	return (*applicationStatusOperationStateOperationInitiatedByPtrType)(v)
}

func (*applicationStatusOperationStateOperationInitiatedByPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationInitiatedBy)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationInitiatedByPtrType) ToApplicationStatusOperationStateOperationInitiatedByPtrOutput() ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return i.ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationInitiatedByPtrType) ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationInitiatedByPtrOutput)
}

// InitiatedBy contains information about who initiated the operations
type ApplicationStatusOperationStateOperationInitiatedByOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationInitiatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationInitiatedBy)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationInitiatedByOutput) ToApplicationStatusOperationStateOperationInitiatedByOutput() ApplicationStatusOperationStateOperationInitiatedByOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInitiatedByOutput) ToApplicationStatusOperationStateOperationInitiatedByOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInitiatedByOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInitiatedByOutput) ToApplicationStatusOperationStateOperationInitiatedByPtrOutput() ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return o.ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationInitiatedByOutput) ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationInitiatedBy) *ApplicationStatusOperationStateOperationInitiatedBy {
		return &v
	}).(ApplicationStatusOperationStateOperationInitiatedByPtrOutput)
}

// Automated is set to true if operation was initiated automatically by the application controller.
func (o ApplicationStatusOperationStateOperationInitiatedByOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationInitiatedBy) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

// Username contains the name of a user who started operation
func (o ApplicationStatusOperationStateOperationInitiatedByOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationInitiatedBy) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationInitiatedByPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationInitiatedByPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationInitiatedBy)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationInitiatedByPtrOutput) ToApplicationStatusOperationStateOperationInitiatedByPtrOutput() ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInitiatedByPtrOutput) ToApplicationStatusOperationStateOperationInitiatedByPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationInitiatedByPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationInitiatedByPtrOutput) Elem() ApplicationStatusOperationStateOperationInitiatedByOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationInitiatedBy) ApplicationStatusOperationStateOperationInitiatedBy {
		return *v
	}).(ApplicationStatusOperationStateOperationInitiatedByOutput)
}

// Automated is set to true if operation was initiated automatically by the application controller.
func (o ApplicationStatusOperationStateOperationInitiatedByPtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationInitiatedBy) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

// Username contains the name of a user who started operation
func (o ApplicationStatusOperationStateOperationInitiatedByPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationInitiatedBy) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
type ApplicationStatusOperationStateOperationRetry struct {
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff *ApplicationStatusOperationStateOperationRetryBackoff `pulumi:"backoff"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit *int `pulumi:"limit"`
}

// ApplicationStatusOperationStateOperationRetryInput is an input type that accepts ApplicationStatusOperationStateOperationRetryArgs and ApplicationStatusOperationStateOperationRetryOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationRetryInput` via:
//
//          ApplicationStatusOperationStateOperationRetryArgs{...}
type ApplicationStatusOperationStateOperationRetryInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationRetryOutput() ApplicationStatusOperationStateOperationRetryOutput
	ToApplicationStatusOperationStateOperationRetryOutputWithContext(context.Context) ApplicationStatusOperationStateOperationRetryOutput
}

// Retry controls the strategy to apply if a sync fails
type ApplicationStatusOperationStateOperationRetryArgs struct {
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff ApplicationStatusOperationStateOperationRetryBackoffPtrInput `pulumi:"backoff"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (ApplicationStatusOperationStateOperationRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationRetry)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationRetryArgs) ToApplicationStatusOperationStateOperationRetryOutput() ApplicationStatusOperationStateOperationRetryOutput {
	return i.ToApplicationStatusOperationStateOperationRetryOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationRetryArgs) ToApplicationStatusOperationStateOperationRetryOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationRetryOutput)
}

func (i ApplicationStatusOperationStateOperationRetryArgs) ToApplicationStatusOperationStateOperationRetryPtrOutput() ApplicationStatusOperationStateOperationRetryPtrOutput {
	return i.ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationRetryArgs) ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationRetryOutput).ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationRetryPtrInput is an input type that accepts ApplicationStatusOperationStateOperationRetryArgs, ApplicationStatusOperationStateOperationRetryPtr and ApplicationStatusOperationStateOperationRetryPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationRetryPtrInput` via:
//
//          ApplicationStatusOperationStateOperationRetryArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationRetryPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationRetryPtrOutput() ApplicationStatusOperationStateOperationRetryPtrOutput
	ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationRetryPtrOutput
}

type applicationStatusOperationStateOperationRetryPtrType ApplicationStatusOperationStateOperationRetryArgs

func ApplicationStatusOperationStateOperationRetryPtr(v *ApplicationStatusOperationStateOperationRetryArgs) ApplicationStatusOperationStateOperationRetryPtrInput {
	return (*applicationStatusOperationStateOperationRetryPtrType)(v)
}

func (*applicationStatusOperationStateOperationRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationRetry)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationRetryPtrType) ToApplicationStatusOperationStateOperationRetryPtrOutput() ApplicationStatusOperationStateOperationRetryPtrOutput {
	return i.ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationRetryPtrType) ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationRetryPtrOutput)
}

// Retry controls the strategy to apply if a sync fails
type ApplicationStatusOperationStateOperationRetryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationRetry)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationRetryOutput) ToApplicationStatusOperationStateOperationRetryOutput() ApplicationStatusOperationStateOperationRetryOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryOutput) ToApplicationStatusOperationStateOperationRetryOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryOutput) ToApplicationStatusOperationStateOperationRetryPtrOutput() ApplicationStatusOperationStateOperationRetryPtrOutput {
	return o.ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationRetryOutput) ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetry) *ApplicationStatusOperationStateOperationRetry {
		return &v
	}).(ApplicationStatusOperationStateOperationRetryPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
func (o ApplicationStatusOperationStateOperationRetryOutput) Backoff() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetry) *ApplicationStatusOperationStateOperationRetryBackoff {
		return v.Backoff
	}).(ApplicationStatusOperationStateOperationRetryBackoffPtrOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o ApplicationStatusOperationStateOperationRetryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetry) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type ApplicationStatusOperationStateOperationRetryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationRetry)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationRetryPtrOutput) ToApplicationStatusOperationStateOperationRetryPtrOutput() ApplicationStatusOperationStateOperationRetryPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryPtrOutput) ToApplicationStatusOperationStateOperationRetryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryPtrOutput) Elem() ApplicationStatusOperationStateOperationRetryOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetry) ApplicationStatusOperationStateOperationRetry {
		return *v
	}).(ApplicationStatusOperationStateOperationRetryOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
func (o ApplicationStatusOperationStateOperationRetryPtrOutput) Backoff() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetry) *ApplicationStatusOperationStateOperationRetryBackoff {
		if v == nil {
			return nil
		}
		return v.Backoff
	}).(ApplicationStatusOperationStateOperationRetryBackoffPtrOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o ApplicationStatusOperationStateOperationRetryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetry) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationStatusOperationStateOperationRetryBackoff struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration *string `pulumi:"duration"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor *int `pulumi:"factor"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration *string `pulumi:"maxDuration"`
}

// ApplicationStatusOperationStateOperationRetryBackoffInput is an input type that accepts ApplicationStatusOperationStateOperationRetryBackoffArgs and ApplicationStatusOperationStateOperationRetryBackoffOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationRetryBackoffInput` via:
//
//          ApplicationStatusOperationStateOperationRetryBackoffArgs{...}
type ApplicationStatusOperationStateOperationRetryBackoffInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationRetryBackoffOutput() ApplicationStatusOperationStateOperationRetryBackoffOutput
	ToApplicationStatusOperationStateOperationRetryBackoffOutputWithContext(context.Context) ApplicationStatusOperationStateOperationRetryBackoffOutput
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationStatusOperationStateOperationRetryBackoffArgs struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor pulumi.IntPtrInput `pulumi:"factor"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration pulumi.StringPtrInput `pulumi:"maxDuration"`
}

func (ApplicationStatusOperationStateOperationRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationRetryBackoff)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationRetryBackoffArgs) ToApplicationStatusOperationStateOperationRetryBackoffOutput() ApplicationStatusOperationStateOperationRetryBackoffOutput {
	return i.ToApplicationStatusOperationStateOperationRetryBackoffOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationRetryBackoffArgs) ToApplicationStatusOperationStateOperationRetryBackoffOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationRetryBackoffOutput)
}

func (i ApplicationStatusOperationStateOperationRetryBackoffArgs) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutput() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return i.ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationRetryBackoffArgs) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationRetryBackoffOutput).ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationRetryBackoffPtrInput is an input type that accepts ApplicationStatusOperationStateOperationRetryBackoffArgs, ApplicationStatusOperationStateOperationRetryBackoffPtr and ApplicationStatusOperationStateOperationRetryBackoffPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationRetryBackoffPtrInput` via:
//
//          ApplicationStatusOperationStateOperationRetryBackoffArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationRetryBackoffPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationRetryBackoffPtrOutput() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput
	ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationRetryBackoffPtrOutput
}

type applicationStatusOperationStateOperationRetryBackoffPtrType ApplicationStatusOperationStateOperationRetryBackoffArgs

func ApplicationStatusOperationStateOperationRetryBackoffPtr(v *ApplicationStatusOperationStateOperationRetryBackoffArgs) ApplicationStatusOperationStateOperationRetryBackoffPtrInput {
	return (*applicationStatusOperationStateOperationRetryBackoffPtrType)(v)
}

func (*applicationStatusOperationStateOperationRetryBackoffPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationRetryBackoff)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationRetryBackoffPtrType) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutput() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return i.ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationRetryBackoffPtrType) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationRetryBackoffPtrOutput)
}

// Backoff controls how to backoff on subsequent retries of failed syncs
type ApplicationStatusOperationStateOperationRetryBackoffOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationRetryBackoff)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) ToApplicationStatusOperationStateOperationRetryBackoffOutput() ApplicationStatusOperationStateOperationRetryBackoffOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) ToApplicationStatusOperationStateOperationRetryBackoffOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryBackoffOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutput() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return o.ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetryBackoff) *ApplicationStatusOperationStateOperationRetryBackoff {
		return &v
	}).(ApplicationStatusOperationStateOperationRetryBackoffPtrOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetryBackoff) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Factor is a factor to multiply the base duration after each failed retry
func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) Factor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetryBackoff) *int { return v.Factor }).(pulumi.IntPtrOutput)
}

// MaxDuration is the maximum amount of time allowed for the backoff strategy
func (o ApplicationStatusOperationStateOperationRetryBackoffOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationRetryBackoff) *string { return v.MaxDuration }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationRetryBackoffPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationRetryBackoff)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutput() ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) ToApplicationStatusOperationStateOperationRetryBackoffPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationRetryBackoffPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) Elem() ApplicationStatusOperationStateOperationRetryBackoffOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetryBackoff) ApplicationStatusOperationStateOperationRetryBackoff {
		return *v
	}).(ApplicationStatusOperationStateOperationRetryBackoffOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
func (o ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Factor is a factor to multiply the base duration after each failed retry
func (o ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) Factor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetryBackoff) *int {
		if v == nil {
			return nil
		}
		return v.Factor
	}).(pulumi.IntPtrOutput)
}

// MaxDuration is the maximum amount of time allowed for the backoff strategy
func (o ApplicationStatusOperationStateOperationRetryBackoffPtrOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.MaxDuration
	}).(pulumi.StringPtrOutput)
}

// Sync contains parameters for the operation
type ApplicationStatusOperationStateOperationSync struct {
	// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
	DryRun *bool `pulumi:"dryRun"`
	// Manifests is an optional field that overrides sync source with a local directory for development
	Manifests []string `pulumi:"manifests"`
	// Prune specifies to delete resources from the cluster that are no longer tracked in git
	Prune *bool `pulumi:"prune"`
	// Resources describes which resources shall be part of the sync
	Resources []ApplicationStatusOperationStateOperationSyncResources `pulumi:"resources"`
	// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
	Revision *string `pulumi:"revision"`
	// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
	Source *ApplicationStatusOperationStateOperationSyncSource `pulumi:"source"`
	// SyncOptions provide per-sync sync-options, e.g. Validate=false
	SyncOptions []string `pulumi:"syncOptions"`
	// SyncStrategy describes how to perform the sync
	SyncStrategy *ApplicationStatusOperationStateOperationSyncSyncStrategy `pulumi:"syncStrategy"`
}

// ApplicationStatusOperationStateOperationSyncInput is an input type that accepts ApplicationStatusOperationStateOperationSyncArgs and ApplicationStatusOperationStateOperationSyncOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncInput` via:
//
//          ApplicationStatusOperationStateOperationSyncArgs{...}
type ApplicationStatusOperationStateOperationSyncInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncOutput() ApplicationStatusOperationStateOperationSyncOutput
	ToApplicationStatusOperationStateOperationSyncOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncOutput
}

// Sync contains parameters for the operation
type ApplicationStatusOperationStateOperationSyncArgs struct {
	// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
	DryRun pulumi.BoolPtrInput `pulumi:"dryRun"`
	// Manifests is an optional field that overrides sync source with a local directory for development
	Manifests pulumi.StringArrayInput `pulumi:"manifests"`
	// Prune specifies to delete resources from the cluster that are no longer tracked in git
	Prune pulumi.BoolPtrInput `pulumi:"prune"`
	// Resources describes which resources shall be part of the sync
	Resources ApplicationStatusOperationStateOperationSyncResourcesArrayInput `pulumi:"resources"`
	// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
	Source ApplicationStatusOperationStateOperationSyncSourcePtrInput `pulumi:"source"`
	// SyncOptions provide per-sync sync-options, e.g. Validate=false
	SyncOptions pulumi.StringArrayInput `pulumi:"syncOptions"`
	// SyncStrategy describes how to perform the sync
	SyncStrategy ApplicationStatusOperationStateOperationSyncSyncStrategyPtrInput `pulumi:"syncStrategy"`
}

func (ApplicationStatusOperationStateOperationSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSync)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncArgs) ToApplicationStatusOperationStateOperationSyncOutput() ApplicationStatusOperationStateOperationSyncOutput {
	return i.ToApplicationStatusOperationStateOperationSyncOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncArgs) ToApplicationStatusOperationStateOperationSyncOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncOutput)
}

func (i ApplicationStatusOperationStateOperationSyncArgs) ToApplicationStatusOperationStateOperationSyncPtrOutput() ApplicationStatusOperationStateOperationSyncPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncArgs) ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncOutput).ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncArgs, ApplicationStatusOperationStateOperationSyncPtr and ApplicationStatusOperationStateOperationSyncPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncPtrOutput() ApplicationStatusOperationStateOperationSyncPtrOutput
	ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncPtrOutput
}

type applicationStatusOperationStateOperationSyncPtrType ApplicationStatusOperationStateOperationSyncArgs

func ApplicationStatusOperationStateOperationSyncPtr(v *ApplicationStatusOperationStateOperationSyncArgs) ApplicationStatusOperationStateOperationSyncPtrInput {
	return (*applicationStatusOperationStateOperationSyncPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSync)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncPtrType) ToApplicationStatusOperationStateOperationSyncPtrOutput() ApplicationStatusOperationStateOperationSyncPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncPtrType) ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncPtrOutput)
}

// Sync contains parameters for the operation
type ApplicationStatusOperationStateOperationSyncOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSync)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncOutput) ToApplicationStatusOperationStateOperationSyncOutput() ApplicationStatusOperationStateOperationSyncOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncOutput) ToApplicationStatusOperationStateOperationSyncOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncOutput) ToApplicationStatusOperationStateOperationSyncPtrOutput() ApplicationStatusOperationStateOperationSyncPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncOutput) ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) *ApplicationStatusOperationStateOperationSync {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncPtrOutput)
}

// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
func (o ApplicationStatusOperationStateOperationSyncOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) *bool { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// Manifests is an optional field that overrides sync source with a local directory for development
func (o ApplicationStatusOperationStateOperationSyncOutput) Manifests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) []string { return v.Manifests }).(pulumi.StringArrayOutput)
}

// Prune specifies to delete resources from the cluster that are no longer tracked in git
func (o ApplicationStatusOperationStateOperationSyncOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

// Resources describes which resources shall be part of the sync
func (o ApplicationStatusOperationStateOperationSyncOutput) Resources() ApplicationStatusOperationStateOperationSyncResourcesArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) []ApplicationStatusOperationStateOperationSyncResources {
		return v.Resources
	}).(ApplicationStatusOperationStateOperationSyncResourcesArrayOutput)
}

// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
func (o ApplicationStatusOperationStateOperationSyncOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
func (o ApplicationStatusOperationStateOperationSyncOutput) Source() ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) *ApplicationStatusOperationStateOperationSyncSource {
		return v.Source
	}).(ApplicationStatusOperationStateOperationSyncSourcePtrOutput)
}

// SyncOptions provide per-sync sync-options, e.g. Validate=false
func (o ApplicationStatusOperationStateOperationSyncOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

// SyncStrategy describes how to perform the sync
func (o ApplicationStatusOperationStateOperationSyncOutput) SyncStrategy() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSync) *ApplicationStatusOperationStateOperationSyncSyncStrategy {
		return v.SyncStrategy
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSync)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncPtrOutput) ToApplicationStatusOperationStateOperationSyncPtrOutput() ApplicationStatusOperationStateOperationSyncPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncPtrOutput) ToApplicationStatusOperationStateOperationSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) ApplicationStatusOperationStateOperationSync {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncOutput)
}

// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) *bool {
		if v == nil {
			return nil
		}
		return v.DryRun
	}).(pulumi.BoolPtrOutput)
}

// Manifests is an optional field that overrides sync source with a local directory for development
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) Manifests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) []string {
		if v == nil {
			return nil
		}
		return v.Manifests
	}).(pulumi.StringArrayOutput)
}

// Prune specifies to delete resources from the cluster that are no longer tracked in git
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) *bool {
		if v == nil {
			return nil
		}
		return v.Prune
	}).(pulumi.BoolPtrOutput)
}

// Resources describes which resources shall be part of the sync
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) Resources() ApplicationStatusOperationStateOperationSyncResourcesArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) []ApplicationStatusOperationStateOperationSyncResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ApplicationStatusOperationStateOperationSyncResourcesArrayOutput)
}

// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) Source() ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) *ApplicationStatusOperationStateOperationSyncSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(ApplicationStatusOperationStateOperationSyncSourcePtrOutput)
}

// SyncOptions provide per-sync sync-options, e.g. Validate=false
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) []string {
		if v == nil {
			return nil
		}
		return v.SyncOptions
	}).(pulumi.StringArrayOutput)
}

// SyncStrategy describes how to perform the sync
func (o ApplicationStatusOperationStateOperationSyncPtrOutput) SyncStrategy() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSync) *ApplicationStatusOperationStateOperationSyncSyncStrategy {
		if v == nil {
			return nil
		}
		return v.SyncStrategy
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput)
}

// SyncOperationResource contains resources to sync.
type ApplicationStatusOperationStateOperationSyncResources struct {
	Group     *string `pulumi:"group"`
	Kind      string  `pulumi:"kind"`
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
}

// ApplicationStatusOperationStateOperationSyncResourcesInput is an input type that accepts ApplicationStatusOperationStateOperationSyncResourcesArgs and ApplicationStatusOperationStateOperationSyncResourcesOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncResourcesInput` via:
//
//          ApplicationStatusOperationStateOperationSyncResourcesArgs{...}
type ApplicationStatusOperationStateOperationSyncResourcesInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncResourcesOutput() ApplicationStatusOperationStateOperationSyncResourcesOutput
	ToApplicationStatusOperationStateOperationSyncResourcesOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncResourcesOutput
}

// SyncOperationResource contains resources to sync.
type ApplicationStatusOperationStateOperationSyncResourcesArgs struct {
	Group     pulumi.StringPtrInput `pulumi:"group"`
	Kind      pulumi.StringInput    `pulumi:"kind"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ApplicationStatusOperationStateOperationSyncResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncResources)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncResourcesArgs) ToApplicationStatusOperationStateOperationSyncResourcesOutput() ApplicationStatusOperationStateOperationSyncResourcesOutput {
	return i.ToApplicationStatusOperationStateOperationSyncResourcesOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncResourcesArgs) ToApplicationStatusOperationStateOperationSyncResourcesOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncResourcesOutput)
}

// ApplicationStatusOperationStateOperationSyncResourcesArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncResourcesArray and ApplicationStatusOperationStateOperationSyncResourcesArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncResourcesArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncResourcesArray{ ApplicationStatusOperationStateOperationSyncResourcesArgs{...} }
type ApplicationStatusOperationStateOperationSyncResourcesArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncResourcesArrayOutput() ApplicationStatusOperationStateOperationSyncResourcesArrayOutput
	ToApplicationStatusOperationStateOperationSyncResourcesArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncResourcesArrayOutput
}

type ApplicationStatusOperationStateOperationSyncResourcesArray []ApplicationStatusOperationStateOperationSyncResourcesInput

func (ApplicationStatusOperationStateOperationSyncResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncResources)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncResourcesArray) ToApplicationStatusOperationStateOperationSyncResourcesArrayOutput() ApplicationStatusOperationStateOperationSyncResourcesArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncResourcesArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncResourcesArray) ToApplicationStatusOperationStateOperationSyncResourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncResourcesArrayOutput)
}

// SyncOperationResource contains resources to sync.
type ApplicationStatusOperationStateOperationSyncResourcesOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncResources)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncResourcesOutput) ToApplicationStatusOperationStateOperationSyncResourcesOutput() ApplicationStatusOperationStateOperationSyncResourcesOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncResourcesOutput) ToApplicationStatusOperationStateOperationSyncResourcesOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncResourcesOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncResourcesOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncResources) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusOperationStateOperationSyncResourcesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncResources) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateOperationSyncResourcesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncResources) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateOperationSyncResourcesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncResources) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncResourcesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncResources)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncResourcesArrayOutput) ToApplicationStatusOperationStateOperationSyncResourcesArrayOutput() ApplicationStatusOperationStateOperationSyncResourcesArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncResourcesArrayOutput) ToApplicationStatusOperationStateOperationSyncResourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncResourcesArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncResourcesArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncResources {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncResources)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncResourcesOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
type ApplicationStatusOperationStateOperationSyncSource struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory *ApplicationStatusOperationStateOperationSyncSourceDirectory `pulumi:"directory"`
	// Helm holds helm specific options
	Helm *ApplicationStatusOperationStateOperationSyncSourceHelm `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet *ApplicationStatusOperationStateOperationSyncSourceKsonnet `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationStatusOperationStateOperationSyncSourceKustomize `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationStatusOperationStateOperationSyncSourcePlugin `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL string `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// ApplicationStatusOperationStateOperationSyncSourceInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceArgs and ApplicationStatusOperationStateOperationSyncSourceOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceOutput() ApplicationStatusOperationStateOperationSyncSourceOutput
	ToApplicationStatusOperationStateOperationSyncSourceOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceOutput
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
type ApplicationStatusOperationStateOperationSyncSourceArgs struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrInput `pulumi:"directory"`
	// Helm holds helm specific options
	Helm ApplicationStatusOperationStateOperationSyncSourceHelmPtrInput `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrInput `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize ApplicationStatusOperationStateOperationSyncSourceKustomizePtrInput `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin ApplicationStatusOperationStateOperationSyncSourcePluginPtrInput `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL pulumi.StringInput `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (ApplicationStatusOperationStateOperationSyncSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSource)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceArgs) ToApplicationStatusOperationStateOperationSyncSourceOutput() ApplicationStatusOperationStateOperationSyncSourceOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceArgs) ToApplicationStatusOperationStateOperationSyncSourceOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourceArgs) ToApplicationStatusOperationStateOperationSyncSourcePtrOutput() ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceArgs) ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceOutput).ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourcePtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceArgs, ApplicationStatusOperationStateOperationSyncSourcePtr and ApplicationStatusOperationStateOperationSyncSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourcePtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourcePtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourcePtrOutput() ApplicationStatusOperationStateOperationSyncSourcePtrOutput
	ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourcePtrOutput
}

type applicationStatusOperationStateOperationSyncSourcePtrType ApplicationStatusOperationStateOperationSyncSourceArgs

func ApplicationStatusOperationStateOperationSyncSourcePtr(v *ApplicationStatusOperationStateOperationSyncSourceArgs) ApplicationStatusOperationStateOperationSyncSourcePtrInput {
	return (*applicationStatusOperationStateOperationSyncSourcePtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSource)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourcePtrType) ToApplicationStatusOperationStateOperationSyncSourcePtrOutput() ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourcePtrType) ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourcePtrOutput)
}

// Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
type ApplicationStatusOperationStateOperationSyncSourceOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSource)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceOutput) ToApplicationStatusOperationStateOperationSyncSourceOutput() ApplicationStatusOperationStateOperationSyncSourceOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceOutput) ToApplicationStatusOperationStateOperationSyncSourceOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceOutput) ToApplicationStatusOperationStateOperationSyncSourcePtrOutput() ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourceOutput) ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSource {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourcePtrOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Directory() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceDirectory {
		return v.Directory
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Helm() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceHelm {
		return v.Helm
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Ksonnet() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceKsonnet {
		return v.Ksonnet
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Kustomize() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceKustomize {
		return v.Kustomize
	}).(ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) Plugin() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourcePlugin {
		return v.Plugin
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) RepoURL() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) string { return v.RepoURL }).(pulumi.StringOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusOperationStateOperationSyncSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSource)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) ToApplicationStatusOperationStateOperationSyncSourcePtrOutput() ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) ToApplicationStatusOperationStateOperationSyncSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourceOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) ApplicationStatusOperationStateOperationSyncSource {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourceOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return v.Chart
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Directory() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceDirectory {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Helm() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceHelm {
		if v == nil {
			return nil
		}
		return v.Helm
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Ksonnet() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceKsonnet {
		if v == nil {
			return nil
		}
		return v.Ksonnet
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Kustomize() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourceKustomize {
		if v == nil {
			return nil
		}
		return v.Kustomize
	}).(ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) Plugin() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *ApplicationStatusOperationStateOperationSyncSourcePlugin {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusOperationStateOperationSyncSourcePtrOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSource) *string {
		if v == nil {
			return nil
		}
		return v.TargetRevision
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusOperationStateOperationSyncSourceDirectory struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `pulumi:"recurse"`
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs and ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceDirectoryInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput
}

// Directory holds path/directory specific options
type ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectory)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput).ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs, ApplicationStatusOperationStateOperationSyncSourceDirectoryPtr and ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput
}

type applicationStatusOperationStateOperationSyncSourceDirectoryPtrType ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs

func ApplicationStatusOperationStateOperationSyncSourceDirectoryPtr(v *ApplicationStatusOperationStateOperationSyncSourceDirectoryArgs) ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrInput {
	return (*applicationStatusOperationStateOperationSyncSourceDirectoryPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceDirectory)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourceDirectoryPtrType) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourceDirectoryPtrType) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectory) *ApplicationStatusOperationStateOperationSyncSourceDirectory {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) Jsonnet() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectory) *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet {
		return v.Jsonnet
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectory) ApplicationStatusOperationStateOperationSyncSourceDirectory {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) Jsonnet() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectory) *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars `pulumi:"extVars"`
	// Additional library search dirs
	Libs []string `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas `pulumi:"tlas"`
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs and ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayInput `pulumi:"extVars"`
	// Additional library search dirs
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayInput `pulumi:"tlas"`
}

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput).ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs, ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtr and ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput
}

type applicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrType ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs

func ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtr(v *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetArgs) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrInput {
	return (*applicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrType) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrType) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) ExtVars() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars {
		return v.ExtVars
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput) Tlas() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas {
		return v.Tlas
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) ExtVars() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput) Tlas() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet) []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs and ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput)
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArray and ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArray{ ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArgs{...} }
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput
}

type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArray []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsInput

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArray) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArray) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVars)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs and ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput)
}

// ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArray and ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArray{ ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArgs{...} }
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput
	ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput
}

type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArray []ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasInput

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArray) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArray) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlas)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput)
}

// Helm holds helm specific options
type ApplicationStatusOperationStateOperationSyncSourceHelm struct {
	// FileParameters are file parameters to the helm template
	FileParameters []ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []ApplicationStatusOperationStateOperationSyncSourceHelmParameters `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// ApplicationStatusOperationStateOperationSyncSourceHelmInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceHelmArgs and ApplicationStatusOperationStateOperationSyncSourceHelmOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceHelmInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceHelmArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceHelmInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceHelmOutput() ApplicationStatusOperationStateOperationSyncSourceHelmOutput
	ToApplicationStatusOperationStateOperationSyncSourceHelmOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmOutput
}

// Helm holds helm specific options
type ApplicationStatusOperationStateOperationSyncSourceHelmArgs struct {
	// FileParameters are file parameters to the helm template
	FileParameters ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayInput `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayInput `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusOperationStateOperationSyncSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceHelm)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmOutput() ApplicationStatusOperationStateOperationSyncSourceHelmOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmOutput).ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourceHelmPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceHelmArgs, ApplicationStatusOperationStateOperationSyncSourceHelmPtr and ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceHelmPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceHelmArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourceHelmPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput
	ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput
}

type applicationStatusOperationStateOperationSyncSourceHelmPtrType ApplicationStatusOperationStateOperationSyncSourceHelmArgs

func ApplicationStatusOperationStateOperationSyncSourceHelmPtr(v *ApplicationStatusOperationStateOperationSyncSourceHelmArgs) ApplicationStatusOperationStateOperationSyncSourceHelmPtrInput {
	return (*applicationStatusOperationStateOperationSyncSourceHelmPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceHelm)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourceHelmPtrType) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourceHelmPtrType) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput)
}

// Helm holds helm specific options
type ApplicationStatusOperationStateOperationSyncSourceHelmOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceHelm)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmOutput() ApplicationStatusOperationStateOperationSyncSourceHelmOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) *ApplicationStatusOperationStateOperationSyncSourceHelm {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) FileParameters() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) []ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters {
		return v.FileParameters
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) Parameters() ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) []ApplicationStatusOperationStateOperationSyncSourceHelmParameters {
		return v.Parameters
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusOperationStateOperationSyncSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceHelm)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput() ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourceHelmOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) ApplicationStatusOperationStateOperationSyncSourceHelm {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) FileParameters() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) []ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) Parameters() ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) []ApplicationStatusOperationStateOperationSyncSourceHelmParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters struct {
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `pulumi:"path"`
}

// ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs and ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput
	ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs struct {
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput)
}

// ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArray and ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArray{ ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArgs{...} }
type ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput
	ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput
}

type ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArray []ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersInput

func (ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArray) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArray) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput {
	return o
}

// Name is the name of the Helm parameter
func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the file containing the values for the Helm parameter
func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncSourceHelmFileParameters)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceHelmParameters struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value *string `pulumi:"value"`
}

// ApplicationStatusOperationStateOperationSyncSourceHelmParametersInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs and ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceHelmParametersInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceHelmParametersInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput() ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput
	ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput() ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput)
}

// ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceHelmParametersArray and ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceHelmParametersArray{ ApplicationStatusOperationStateOperationSyncSourceHelmParametersArgs{...} }
type ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput
	ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput
}

type ApplicationStatusOperationStateOperationSyncSourceHelmParametersArray []ApplicationStatusOperationStateOperationSyncSourceHelmParametersInput

func (ApplicationStatusOperationStateOperationSyncSourceHelmParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmParametersArray) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceHelmParametersArray) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput() ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput {
	return o
}

// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelmParameters) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name is the name of the Helm parameter
func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelmParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value for the Helm parameter
func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceHelmParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncSourceHelmParameters {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncSourceHelmParameters)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusOperationStateOperationSyncSourceKsonnet struct {
	// Environment is a ksonnet application environment name
	Environment *string `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters []ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters `pulumi:"parameters"`
}

// ApplicationStatusOperationStateOperationSyncSourceKsonnetInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs and ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKsonnetInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceKsonnetInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput
	ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs struct {
	// Environment is a ksonnet application environment name
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayInput `pulumi:"parameters"`
}

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKsonnet)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput).ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs, ApplicationStatusOperationStateOperationSyncSourceKsonnetPtr and ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput
	ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput
}

type applicationStatusOperationStateOperationSyncSourceKsonnetPtrType ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs

func ApplicationStatusOperationStateOperationSyncSourceKsonnetPtr(v *ApplicationStatusOperationStateOperationSyncSourceKsonnetArgs) ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrInput {
	return (*applicationStatusOperationStateOperationSyncSourceKsonnetPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourceKsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceKsonnet)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourceKsonnetPtrType) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourceKsonnetPtrType) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKsonnet) *ApplicationStatusOperationStateOperationSyncSourceKsonnet {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput) Parameters() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKsonnet) []ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters {
		return v.Parameters
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKsonnet) ApplicationStatusOperationStateOperationSyncSourceKsonnet {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKsonnet) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput) Parameters() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKsonnet) []ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters struct {
	Component *string `pulumi:"component"`
	Name      string  `pulumi:"name"`
	Value     string  `pulumi:"value"`
}

// ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs and ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput
	ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Value     pulumi.StringInput    `pulumi:"value"`
}

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput)
}

// ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArray and ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArray{ ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArgs{...} }
type ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput
	ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput
}

type ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArray []ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersInput

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArray) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArray) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters) *string {
		return v.Component
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput() ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput) ToApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncSourceKsonnetParameters)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusOperationStateOperationSyncSourceKustomize struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images []string `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `pulumi:"version"`
}

// ApplicationStatusOperationStateOperationSyncSourceKustomizeInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs and ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKustomizeInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceKustomizeInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput
	ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput
}

// Kustomize holds kustomize specific options
type ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images pulumi.StringArrayInput `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKustomize)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput).ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourceKustomizePtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs, ApplicationStatusOperationStateOperationSyncSourceKustomizePtr and ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKustomizePtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourceKustomizePtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput
	ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput
}

type applicationStatusOperationStateOperationSyncSourceKustomizePtrType ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs

func ApplicationStatusOperationStateOperationSyncSourceKustomizePtr(v *ApplicationStatusOperationStateOperationSyncSourceKustomizeArgs) ApplicationStatusOperationStateOperationSyncSourceKustomizePtrInput {
	return (*applicationStatusOperationStateOperationSyncSourceKustomizePtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceKustomize)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourceKustomizePtrType) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourceKustomizePtrType) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) *ApplicationStatusOperationStateOperationSyncSourceKustomize {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) map[string]string {
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) map[string]string {
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) ApplicationStatusOperationStateOperationSyncSourceKustomize {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotations struct {
}

// ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsArgs and ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput
	ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsArgs struct {
}

func (ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput {
	return o
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabels struct {
}

// ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsArgs and ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsArgs{...}
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput
	ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsArgs struct {
}

func (ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabels)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsArgs) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabels)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput() ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput) ToApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput {
	return o
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusOperationStateOperationSyncSourcePlugin struct {
	// Env is a list of environment variable entries
	Env  []ApplicationStatusOperationStateOperationSyncSourcePluginEnv `pulumi:"env"`
	Name *string                                                       `pulumi:"name"`
}

// ApplicationStatusOperationStateOperationSyncSourcePluginInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourcePluginArgs and ApplicationStatusOperationStateOperationSyncSourcePluginOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourcePluginInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourcePluginArgs{...}
type ApplicationStatusOperationStateOperationSyncSourcePluginInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourcePluginOutput() ApplicationStatusOperationStateOperationSyncSourcePluginOutput
	ToApplicationStatusOperationStateOperationSyncSourcePluginOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginOutput
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusOperationStateOperationSyncSourcePluginArgs struct {
	// Env is a list of environment variable entries
	Env  ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayInput `pulumi:"env"`
	Name pulumi.StringPtrInput                                                 `pulumi:"name"`
}

func (ApplicationStatusOperationStateOperationSyncSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourcePlugin)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginArgs) ToApplicationStatusOperationStateOperationSyncSourcePluginOutput() ApplicationStatusOperationStateOperationSyncSourcePluginOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePluginOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginArgs) ToApplicationStatusOperationStateOperationSyncSourcePluginOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourcePluginOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginArgs) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginArgs) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourcePluginOutput).ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSourcePluginPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourcePluginArgs, ApplicationStatusOperationStateOperationSyncSourcePluginPtr and ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourcePluginPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourcePluginArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSourcePluginPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput
	ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput
}

type applicationStatusOperationStateOperationSyncSourcePluginPtrType ApplicationStatusOperationStateOperationSyncSourcePluginArgs

func ApplicationStatusOperationStateOperationSyncSourcePluginPtr(v *ApplicationStatusOperationStateOperationSyncSourcePluginArgs) ApplicationStatusOperationStateOperationSyncSourcePluginPtrInput {
	return (*applicationStatusOperationStateOperationSyncSourcePluginPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourcePlugin)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSourcePluginPtrType) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSourcePluginPtrType) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusOperationStateOperationSyncSourcePluginOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginOutput() ApplicationStatusOperationStateOperationSyncSourcePluginOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourcePlugin) *ApplicationStatusOperationStateOperationSyncSourcePlugin {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusOperationStateOperationSyncSourcePluginOutput) Env() ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourcePlugin) []ApplicationStatusOperationStateOperationSyncSourcePluginEnv {
		return v.Env
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput() ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSourcePluginOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourcePlugin) ApplicationStatusOperationStateOperationSyncSourcePlugin {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput) Env() ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourcePlugin) []ApplicationStatusOperationStateOperationSyncSourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput)
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusOperationStateOperationSyncSourcePluginEnv struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name string `pulumi:"name"`
	// Value is the value of the variable
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateOperationSyncSourcePluginEnvInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs and ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourcePluginEnvInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs{...}
type ApplicationStatusOperationStateOperationSyncSourcePluginEnvInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput() ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput
	ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name pulumi.StringInput `pulumi:"name"`
	// Value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput() ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput)
}

// ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSourcePluginEnvArray and ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSourcePluginEnvArray{ ApplicationStatusOperationStateOperationSyncSourcePluginEnvArgs{...} }
type ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput() ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput
	ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput
}

type ApplicationStatusOperationStateOperationSyncSourcePluginEnvArray []ApplicationStatusOperationStateOperationSyncSourcePluginEnvInput

func (ApplicationStatusOperationStateOperationSyncSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginEnvArray) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput() ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSourcePluginEnvArray) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput() ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput {
	return o
}

// Name is the name of the variable, usually expressed in uppercase
func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value is the value of the variable
func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateOperationSyncSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput() ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput) ToApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateOperationSyncSourcePluginEnv {
		return vs[0].([]ApplicationStatusOperationStateOperationSyncSourcePluginEnv)[vs[1].(int)]
	}).(ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput)
}

// SyncStrategy describes how to perform the sync
type ApplicationStatusOperationStateOperationSyncSyncStrategy struct {
	// Apply will perform a `kubectl apply` to perform the sync.
	Apply *ApplicationStatusOperationStateOperationSyncSyncStrategyApply `pulumi:"apply"`
	// Hook will submit any referenced resources to perform the sync. This is the default strategy
	Hook *ApplicationStatusOperationStateOperationSyncSyncStrategyHook `pulumi:"hook"`
}

// ApplicationStatusOperationStateOperationSyncSyncStrategyInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSyncStrategyArgs and ApplicationStatusOperationStateOperationSyncSyncStrategyOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSyncStrategyInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSyncStrategyArgs{...}
type ApplicationStatusOperationStateOperationSyncSyncStrategyInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSyncStrategyOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyOutput
	ToApplicationStatusOperationStateOperationSyncSyncStrategyOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyOutput
}

// SyncStrategy describes how to perform the sync
type ApplicationStatusOperationStateOperationSyncSyncStrategyArgs struct {
	// Apply will perform a `kubectl apply` to perform the sync.
	Apply ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrInput `pulumi:"apply"`
	// Hook will submit any referenced resources to perform the sync. This is the default strategy
	Hook ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrInput `pulumi:"hook"`
}

func (ApplicationStatusOperationStateOperationSyncSyncStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSyncStrategy)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyOutput).ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSyncStrategyPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSyncStrategyArgs, ApplicationStatusOperationStateOperationSyncSyncStrategyPtr and ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSyncStrategyPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSyncStrategyArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSyncStrategyPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput
	ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput
}

type applicationStatusOperationStateOperationSyncSyncStrategyPtrType ApplicationStatusOperationStateOperationSyncSyncStrategyArgs

func ApplicationStatusOperationStateOperationSyncSyncStrategyPtr(v *ApplicationStatusOperationStateOperationSyncSyncStrategyArgs) ApplicationStatusOperationStateOperationSyncSyncStrategyPtrInput {
	return (*applicationStatusOperationStateOperationSyncSyncStrategyPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSyncStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSyncStrategy)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSyncStrategyPtrType) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSyncStrategyPtrType) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput)
}

// SyncStrategy describes how to perform the sync
type ApplicationStatusOperationStateOperationSyncSyncStrategyOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSyncStrategy)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategy) *ApplicationStatusOperationStateOperationSyncSyncStrategy {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) Apply() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategy) *ApplicationStatusOperationStateOperationSyncSyncStrategyApply {
		return v.Apply
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyOutput) Hook() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategy) *ApplicationStatusOperationStateOperationSyncSyncStrategyHook {
		return v.Hook
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSyncStrategy)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSyncStrategyOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategy) ApplicationStatusOperationStateOperationSyncSyncStrategy {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput) Apply() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategy) *ApplicationStatusOperationStateOperationSyncSyncStrategyApply {
		if v == nil {
			return nil
		}
		return v.Apply
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput) Hook() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategy) *ApplicationStatusOperationStateOperationSyncSyncStrategyHook {
		if v == nil {
			return nil
		}
		return v.Hook
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
type ApplicationStatusOperationStateOperationSyncSyncStrategyApply struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force *bool `pulumi:"force"`
}

// ApplicationStatusOperationStateOperationSyncSyncStrategyApplyInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs and ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSyncStrategyApplyInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs{...}
type ApplicationStatusOperationStateOperationSyncSyncStrategyApplyInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput
	ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput
}

// Apply will perform a `kubectl apply` to perform the sync.
type ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force pulumi.BoolPtrInput `pulumi:"force"`
}

func (ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput).ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs, ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtr and ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput
	ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput
}

type applicationStatusOperationStateOperationSyncSyncStrategyApplyPtrType ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs

func ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtr(v *ApplicationStatusOperationStateOperationSyncSyncStrategyApplyArgs) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrInput {
	return (*applicationStatusOperationStateOperationSyncSyncStrategyApplyPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSyncStrategyApplyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSyncStrategyApplyPtrType) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSyncStrategyApplyPtrType) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput)
}

// Apply will perform a `kubectl apply` to perform the sync.
type ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategyApply) *ApplicationStatusOperationStateOperationSyncSyncStrategyApply {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategyApply) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSyncStrategyApply)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategyApply) ApplicationStatusOperationStateOperationSyncSyncStrategyApply {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategyApply) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
type ApplicationStatusOperationStateOperationSyncSyncStrategyHook struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force *bool `pulumi:"force"`
}

// ApplicationStatusOperationStateOperationSyncSyncStrategyHookInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs and ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSyncStrategyHookInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs{...}
type ApplicationStatusOperationStateOperationSyncSyncStrategyHookInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput
	ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
type ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs struct {
	// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
	Force pulumi.BoolPtrInput `pulumi:"force"`
}

func (ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput)
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput).ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrInput is an input type that accepts ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs, ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtr and ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrInput` via:
//
//          ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput
	ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput
}

type applicationStatusOperationStateOperationSyncSyncStrategyHookPtrType ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs

func ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtr(v *ApplicationStatusOperationStateOperationSyncSyncStrategyHookArgs) ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrInput {
	return (*applicationStatusOperationStateOperationSyncSyncStrategyHookPtrType)(v)
}

func (*applicationStatusOperationStateOperationSyncSyncStrategyHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (i *applicationStatusOperationStateOperationSyncSyncStrategyHookPtrType) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return i.ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateOperationSyncSyncStrategyHookPtrType) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput)
}

// Hook will submit any referenced resources to perform the sync. This is the default strategy
type ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return o.ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategyHook) *ApplicationStatusOperationStateOperationSyncSyncStrategyHook {
		return &v
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateOperationSyncSyncStrategyHook) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

type ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateOperationSyncSyncStrategyHook)(nil)).Elem()
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput() ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput) ToApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput) Elem() ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategyHook) ApplicationStatusOperationStateOperationSyncSyncStrategyHook {
		return *v
	}).(ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput)
}

// Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
func (o ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateOperationSyncSyncStrategyHook) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// SyncResult is the result of a Sync operation
type ApplicationStatusOperationStateSyncResult struct {
	// Resources contains a list of sync result items for each individual resource in a sync operation
	Resources []ApplicationStatusOperationStateSyncResultResources `pulumi:"resources"`
	// Revision holds the revision this sync operation was performed to
	Revision string `pulumi:"revision"`
	// Source records the application source information of the sync, used for comparing auto-sync
	Source *ApplicationStatusOperationStateSyncResultSource `pulumi:"source"`
}

// ApplicationStatusOperationStateSyncResultInput is an input type that accepts ApplicationStatusOperationStateSyncResultArgs and ApplicationStatusOperationStateSyncResultOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultInput` via:
//
//          ApplicationStatusOperationStateSyncResultArgs{...}
type ApplicationStatusOperationStateSyncResultInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultOutput() ApplicationStatusOperationStateSyncResultOutput
	ToApplicationStatusOperationStateSyncResultOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultOutput
}

// SyncResult is the result of a Sync operation
type ApplicationStatusOperationStateSyncResultArgs struct {
	// Resources contains a list of sync result items for each individual resource in a sync operation
	Resources ApplicationStatusOperationStateSyncResultResourcesArrayInput `pulumi:"resources"`
	// Revision holds the revision this sync operation was performed to
	Revision pulumi.StringInput `pulumi:"revision"`
	// Source records the application source information of the sync, used for comparing auto-sync
	Source ApplicationStatusOperationStateSyncResultSourcePtrInput `pulumi:"source"`
}

func (ApplicationStatusOperationStateSyncResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResult)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultArgs) ToApplicationStatusOperationStateSyncResultOutput() ApplicationStatusOperationStateSyncResultOutput {
	return i.ToApplicationStatusOperationStateSyncResultOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultArgs) ToApplicationStatusOperationStateSyncResultOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultOutput)
}

func (i ApplicationStatusOperationStateSyncResultArgs) ToApplicationStatusOperationStateSyncResultPtrOutput() ApplicationStatusOperationStateSyncResultPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultArgs) ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultOutput).ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultPtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultArgs, ApplicationStatusOperationStateSyncResultPtr and ApplicationStatusOperationStateSyncResultPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultPtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultPtrOutput() ApplicationStatusOperationStateSyncResultPtrOutput
	ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultPtrOutput
}

type applicationStatusOperationStateSyncResultPtrType ApplicationStatusOperationStateSyncResultArgs

func ApplicationStatusOperationStateSyncResultPtr(v *ApplicationStatusOperationStateSyncResultArgs) ApplicationStatusOperationStateSyncResultPtrInput {
	return (*applicationStatusOperationStateSyncResultPtrType)(v)
}

func (*applicationStatusOperationStateSyncResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResult)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultPtrType) ToApplicationStatusOperationStateSyncResultPtrOutput() ApplicationStatusOperationStateSyncResultPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultPtrType) ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultPtrOutput)
}

// SyncResult is the result of a Sync operation
type ApplicationStatusOperationStateSyncResultOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResult)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultOutput) ToApplicationStatusOperationStateSyncResultOutput() ApplicationStatusOperationStateSyncResultOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultOutput) ToApplicationStatusOperationStateSyncResultOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultOutput) ToApplicationStatusOperationStateSyncResultPtrOutput() ApplicationStatusOperationStateSyncResultPtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultOutput) ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResult) *ApplicationStatusOperationStateSyncResult {
		return &v
	}).(ApplicationStatusOperationStateSyncResultPtrOutput)
}

// Resources contains a list of sync result items for each individual resource in a sync operation
func (o ApplicationStatusOperationStateSyncResultOutput) Resources() ApplicationStatusOperationStateSyncResultResourcesArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResult) []ApplicationStatusOperationStateSyncResultResources {
		return v.Resources
	}).(ApplicationStatusOperationStateSyncResultResourcesArrayOutput)
}

// Revision holds the revision this sync operation was performed to
func (o ApplicationStatusOperationStateSyncResultOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResult) string { return v.Revision }).(pulumi.StringOutput)
}

// Source records the application source information of the sync, used for comparing auto-sync
func (o ApplicationStatusOperationStateSyncResultOutput) Source() ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResult) *ApplicationStatusOperationStateSyncResultSource {
		return v.Source
	}).(ApplicationStatusOperationStateSyncResultSourcePtrOutput)
}

type ApplicationStatusOperationStateSyncResultPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResult)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultPtrOutput) ToApplicationStatusOperationStateSyncResultPtrOutput() ApplicationStatusOperationStateSyncResultPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultPtrOutput) ToApplicationStatusOperationStateSyncResultPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultPtrOutput) Elem() ApplicationStatusOperationStateSyncResultOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResult) ApplicationStatusOperationStateSyncResult {
		return *v
	}).(ApplicationStatusOperationStateSyncResultOutput)
}

// Resources contains a list of sync result items for each individual resource in a sync operation
func (o ApplicationStatusOperationStateSyncResultPtrOutput) Resources() ApplicationStatusOperationStateSyncResultResourcesArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResult) []ApplicationStatusOperationStateSyncResultResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ApplicationStatusOperationStateSyncResultResourcesArrayOutput)
}

// Revision holds the revision this sync operation was performed to
func (o ApplicationStatusOperationStateSyncResultPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResult) *string {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.StringPtrOutput)
}

// Source records the application source information of the sync, used for comparing auto-sync
func (o ApplicationStatusOperationStateSyncResultPtrOutput) Source() ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResult) *ApplicationStatusOperationStateSyncResultSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(ApplicationStatusOperationStateSyncResultSourcePtrOutput)
}

// ResourceResult holds the operation result details of a specific resource
type ApplicationStatusOperationStateSyncResultResources struct {
	// Group specifies the API group of the resource
	Group string `pulumi:"group"`
	// HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
	HookPhase *string `pulumi:"hookPhase"`
	// HookType specifies the type of the hook. Empty for non-hook resources
	HookType *string `pulumi:"hookType"`
	// Kind specifies the API kind of the resource
	Kind string `pulumi:"kind"`
	// Message contains an informational or error message for the last sync OR operation
	Message *string `pulumi:"message"`
	// Name specifies the name of the resource
	Name string `pulumi:"name"`
	// Namespace specifies the target namespace of the resource
	Namespace string `pulumi:"namespace"`
	// Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
	Status *string `pulumi:"status"`
	// SyncPhase indicates the particular phase of the sync that this result was acquired in
	SyncPhase *string `pulumi:"syncPhase"`
	// Version specifies the API version of the resource
	Version string `pulumi:"version"`
}

// ApplicationStatusOperationStateSyncResultResourcesInput is an input type that accepts ApplicationStatusOperationStateSyncResultResourcesArgs and ApplicationStatusOperationStateSyncResultResourcesOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultResourcesInput` via:
//
//          ApplicationStatusOperationStateSyncResultResourcesArgs{...}
type ApplicationStatusOperationStateSyncResultResourcesInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultResourcesOutput() ApplicationStatusOperationStateSyncResultResourcesOutput
	ToApplicationStatusOperationStateSyncResultResourcesOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultResourcesOutput
}

// ResourceResult holds the operation result details of a specific resource
type ApplicationStatusOperationStateSyncResultResourcesArgs struct {
	// Group specifies the API group of the resource
	Group pulumi.StringInput `pulumi:"group"`
	// HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
	HookPhase pulumi.StringPtrInput `pulumi:"hookPhase"`
	// HookType specifies the type of the hook. Empty for non-hook resources
	HookType pulumi.StringPtrInput `pulumi:"hookType"`
	// Kind specifies the API kind of the resource
	Kind pulumi.StringInput `pulumi:"kind"`
	// Message contains an informational or error message for the last sync OR operation
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Name specifies the name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace specifies the target namespace of the resource
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
	Status pulumi.StringPtrInput `pulumi:"status"`
	// SyncPhase indicates the particular phase of the sync that this result was acquired in
	SyncPhase pulumi.StringPtrInput `pulumi:"syncPhase"`
	// Version specifies the API version of the resource
	Version pulumi.StringInput `pulumi:"version"`
}

func (ApplicationStatusOperationStateSyncResultResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultResources)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultResourcesArgs) ToApplicationStatusOperationStateSyncResultResourcesOutput() ApplicationStatusOperationStateSyncResultResourcesOutput {
	return i.ToApplicationStatusOperationStateSyncResultResourcesOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultResourcesArgs) ToApplicationStatusOperationStateSyncResultResourcesOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultResourcesOutput)
}

// ApplicationStatusOperationStateSyncResultResourcesArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultResourcesArray and ApplicationStatusOperationStateSyncResultResourcesArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultResourcesArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultResourcesArray{ ApplicationStatusOperationStateSyncResultResourcesArgs{...} }
type ApplicationStatusOperationStateSyncResultResourcesArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultResourcesArrayOutput() ApplicationStatusOperationStateSyncResultResourcesArrayOutput
	ToApplicationStatusOperationStateSyncResultResourcesArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultResourcesArrayOutput
}

type ApplicationStatusOperationStateSyncResultResourcesArray []ApplicationStatusOperationStateSyncResultResourcesInput

func (ApplicationStatusOperationStateSyncResultResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultResources)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultResourcesArray) ToApplicationStatusOperationStateSyncResultResourcesArrayOutput() ApplicationStatusOperationStateSyncResultResourcesArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultResourcesArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultResourcesArray) ToApplicationStatusOperationStateSyncResultResourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultResourcesArrayOutput)
}

// ResourceResult holds the operation result details of a specific resource
type ApplicationStatusOperationStateSyncResultResourcesOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultResources)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultResourcesOutput) ToApplicationStatusOperationStateSyncResultResourcesOutput() ApplicationStatusOperationStateSyncResultResourcesOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultResourcesOutput) ToApplicationStatusOperationStateSyncResultResourcesOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultResourcesOutput {
	return o
}

// Group specifies the API group of the resource
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) string { return v.Group }).(pulumi.StringOutput)
}

// HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) HookPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) *string { return v.HookPhase }).(pulumi.StringPtrOutput)
}

// HookType specifies the type of the hook. Empty for non-hook resources
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) HookType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) *string { return v.HookType }).(pulumi.StringPtrOutput)
}

// Kind specifies the API kind of the resource
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) string { return v.Kind }).(pulumi.StringOutput)
}

// Message contains an informational or error message for the last sync OR operation
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Name specifies the name of the resource
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace specifies the target namespace of the resource
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) string { return v.Namespace }).(pulumi.StringOutput)
}

// Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// SyncPhase indicates the particular phase of the sync that this result was acquired in
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) SyncPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) *string { return v.SyncPhase }).(pulumi.StringPtrOutput)
}

// Version specifies the API version of the resource
func (o ApplicationStatusOperationStateSyncResultResourcesOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultResources) string { return v.Version }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateSyncResultResourcesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultResources)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultResourcesArrayOutput) ToApplicationStatusOperationStateSyncResultResourcesArrayOutput() ApplicationStatusOperationStateSyncResultResourcesArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultResourcesArrayOutput) ToApplicationStatusOperationStateSyncResultResourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultResourcesArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultResourcesArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultResources {
		return vs[0].([]ApplicationStatusOperationStateSyncResultResources)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultResourcesOutput)
}

// Source records the application source information of the sync, used for comparing auto-sync
type ApplicationStatusOperationStateSyncResultSource struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory *ApplicationStatusOperationStateSyncResultSourceDirectory `pulumi:"directory"`
	// Helm holds helm specific options
	Helm *ApplicationStatusOperationStateSyncResultSourceHelm `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet *ApplicationStatusOperationStateSyncResultSourceKsonnet `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationStatusOperationStateSyncResultSourceKustomize `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationStatusOperationStateSyncResultSourcePlugin `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL string `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// ApplicationStatusOperationStateSyncResultSourceInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceArgs and ApplicationStatusOperationStateSyncResultSourceOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceArgs{...}
type ApplicationStatusOperationStateSyncResultSourceInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceOutput() ApplicationStatusOperationStateSyncResultSourceOutput
	ToApplicationStatusOperationStateSyncResultSourceOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceOutput
}

// Source records the application source information of the sync, used for comparing auto-sync
type ApplicationStatusOperationStateSyncResultSourceArgs struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory ApplicationStatusOperationStateSyncResultSourceDirectoryPtrInput `pulumi:"directory"`
	// Helm holds helm specific options
	Helm ApplicationStatusOperationStateSyncResultSourceHelmPtrInput `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet ApplicationStatusOperationStateSyncResultSourceKsonnetPtrInput `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize ApplicationStatusOperationStateSyncResultSourceKustomizePtrInput `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin ApplicationStatusOperationStateSyncResultSourcePluginPtrInput `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL pulumi.StringInput `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (ApplicationStatusOperationStateSyncResultSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSource)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceArgs) ToApplicationStatusOperationStateSyncResultSourceOutput() ApplicationStatusOperationStateSyncResultSourceOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceArgs) ToApplicationStatusOperationStateSyncResultSourceOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourceArgs) ToApplicationStatusOperationStateSyncResultSourcePtrOutput() ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceArgs) ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceOutput).ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourcePtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceArgs, ApplicationStatusOperationStateSyncResultSourcePtr and ApplicationStatusOperationStateSyncResultSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourcePtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourcePtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourcePtrOutput() ApplicationStatusOperationStateSyncResultSourcePtrOutput
	ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourcePtrOutput
}

type applicationStatusOperationStateSyncResultSourcePtrType ApplicationStatusOperationStateSyncResultSourceArgs

func ApplicationStatusOperationStateSyncResultSourcePtr(v *ApplicationStatusOperationStateSyncResultSourceArgs) ApplicationStatusOperationStateSyncResultSourcePtrInput {
	return (*applicationStatusOperationStateSyncResultSourcePtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSource)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourcePtrType) ToApplicationStatusOperationStateSyncResultSourcePtrOutput() ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourcePtrType) ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourcePtrOutput)
}

// Source records the application source information of the sync, used for comparing auto-sync
type ApplicationStatusOperationStateSyncResultSourceOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSource)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceOutput) ToApplicationStatusOperationStateSyncResultSourceOutput() ApplicationStatusOperationStateSyncResultSourceOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceOutput) ToApplicationStatusOperationStateSyncResultSourceOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceOutput) ToApplicationStatusOperationStateSyncResultSourcePtrOutput() ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourceOutput) ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSource {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourcePtrOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Directory() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceDirectory {
		return v.Directory
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Helm() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceHelm {
		return v.Helm
	}).(ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Ksonnet() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceKsonnet {
		return v.Ksonnet
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Kustomize() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceKustomize {
		return v.Kustomize
	}).(ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusOperationStateSyncResultSourceOutput) Plugin() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourcePlugin {
		return v.Plugin
	}).(ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusOperationStateSyncResultSourceOutput) RepoURL() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) string { return v.RepoURL }).(pulumi.StringOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusOperationStateSyncResultSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSource)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) ToApplicationStatusOperationStateSyncResultSourcePtrOutput() ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) ToApplicationStatusOperationStateSyncResultSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourceOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) ApplicationStatusOperationStateSyncResultSource {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourceOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *string {
		if v == nil {
			return nil
		}
		return v.Chart
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Directory() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceDirectory {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Helm() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceHelm {
		if v == nil {
			return nil
		}
		return v.Helm
	}).(ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Ksonnet() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceKsonnet {
		if v == nil {
			return nil
		}
		return v.Ksonnet
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Kustomize() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourceKustomize {
		if v == nil {
			return nil
		}
		return v.Kustomize
	}).(ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) Plugin() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *ApplicationStatusOperationStateSyncResultSourcePlugin {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusOperationStateSyncResultSourcePtrOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSource) *string {
		if v == nil {
			return nil
		}
		return v.TargetRevision
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusOperationStateSyncResultSourceDirectory struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `pulumi:"recurse"`
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryArgs and ApplicationStatusOperationStateSyncResultSourceDirectoryOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryArgs{...}
type ApplicationStatusOperationStateSyncResultSourceDirectoryInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryOutput
}

// Directory holds path/directory specific options
type ApplicationStatusOperationStateSyncResultSourceDirectoryArgs struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (ApplicationStatusOperationStateSyncResultSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectory)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryOutput).ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryPtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryArgs, ApplicationStatusOperationStateSyncResultSourceDirectoryPtr and ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryPtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourceDirectoryPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput
}

type applicationStatusOperationStateSyncResultSourceDirectoryPtrType ApplicationStatusOperationStateSyncResultSourceDirectoryArgs

func ApplicationStatusOperationStateSyncResultSourceDirectoryPtr(v *ApplicationStatusOperationStateSyncResultSourceDirectoryArgs) ApplicationStatusOperationStateSyncResultSourceDirectoryPtrInput {
	return (*applicationStatusOperationStateSyncResultSourceDirectoryPtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceDirectory)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourceDirectoryPtrType) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourceDirectoryPtrType) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusOperationStateSyncResultSourceDirectoryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectory) *ApplicationStatusOperationStateSyncResultSourceDirectory {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) Jsonnet() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectory) *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet {
		return v.Jsonnet
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourceDirectoryOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectory) ApplicationStatusOperationStateSyncResultSourceDirectory {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) Jsonnet() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectory) *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars `pulumi:"extVars"`
	// Additional library search dirs
	Libs []string `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas `pulumi:"tlas"`
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs and ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs{...}
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayInput `pulumi:"extVars"`
	// Additional library search dirs
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayInput `pulumi:"tlas"`
}

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput).ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs, ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtr and ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput
}

type applicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrType ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs

func ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtr(v *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetArgs) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrInput {
	return (*applicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrType) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrType) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) ExtVars() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars {
		return v.ExtVars
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput) Tlas() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas {
		return v.Tlas
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput)
}

type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) ExtVars() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput) Tlas() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet) []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs and ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs{...}
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput)
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArray and ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArray{ ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArgs{...} }
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput
}

type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArray []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsInput

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArray) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArray) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars {
		return vs[0].([]ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVars)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs and ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs{...}
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput)
}

// ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArray and ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArray{ ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArgs{...} }
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput
	ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput
}

type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArray []ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasInput

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArray) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArray) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas {
		return vs[0].([]ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlas)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput)
}

// Helm holds helm specific options
type ApplicationStatusOperationStateSyncResultSourceHelm struct {
	// FileParameters are file parameters to the helm template
	FileParameters []ApplicationStatusOperationStateSyncResultSourceHelmFileParameters `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []ApplicationStatusOperationStateSyncResultSourceHelmParameters `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// ApplicationStatusOperationStateSyncResultSourceHelmInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceHelmArgs and ApplicationStatusOperationStateSyncResultSourceHelmOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceHelmInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceHelmArgs{...}
type ApplicationStatusOperationStateSyncResultSourceHelmInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceHelmOutput() ApplicationStatusOperationStateSyncResultSourceHelmOutput
	ToApplicationStatusOperationStateSyncResultSourceHelmOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceHelmOutput
}

// Helm holds helm specific options
type ApplicationStatusOperationStateSyncResultSourceHelmArgs struct {
	// FileParameters are file parameters to the helm template
	FileParameters ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayInput `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayInput `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusOperationStateSyncResultSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceHelm)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmArgs) ToApplicationStatusOperationStateSyncResultSourceHelmOutput() ApplicationStatusOperationStateSyncResultSourceHelmOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmArgs) ToApplicationStatusOperationStateSyncResultSourceHelmOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmArgs) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutput() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmArgs) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmOutput).ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourceHelmPtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceHelmArgs, ApplicationStatusOperationStateSyncResultSourceHelmPtr and ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceHelmPtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceHelmArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourceHelmPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutput() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput
	ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput
}

type applicationStatusOperationStateSyncResultSourceHelmPtrType ApplicationStatusOperationStateSyncResultSourceHelmArgs

func ApplicationStatusOperationStateSyncResultSourceHelmPtr(v *ApplicationStatusOperationStateSyncResultSourceHelmArgs) ApplicationStatusOperationStateSyncResultSourceHelmPtrInput {
	return (*applicationStatusOperationStateSyncResultSourceHelmPtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceHelm)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourceHelmPtrType) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutput() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourceHelmPtrType) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput)
}

// Helm holds helm specific options
type ApplicationStatusOperationStateSyncResultSourceHelmOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceHelm)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) ToApplicationStatusOperationStateSyncResultSourceHelmOutput() ApplicationStatusOperationStateSyncResultSourceHelmOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) ToApplicationStatusOperationStateSyncResultSourceHelmOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutput() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) *ApplicationStatusOperationStateSyncResultSourceHelm {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) FileParameters() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) []ApplicationStatusOperationStateSyncResultSourceHelmFileParameters {
		return v.FileParameters
	}).(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) Parameters() ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) []ApplicationStatusOperationStateSyncResultSourceHelmParameters {
		return v.Parameters
	}).(ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusOperationStateSyncResultSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceHelm)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutput() ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) ToApplicationStatusOperationStateSyncResultSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourceHelmOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) ApplicationStatusOperationStateSyncResultSourceHelm {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourceHelmOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) FileParameters() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) []ApplicationStatusOperationStateSyncResultSourceHelmFileParameters {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) Parameters() ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) []ApplicationStatusOperationStateSyncResultSourceHelmParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateSyncResultSourceHelmFileParameters struct {
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `pulumi:"path"`
}

// ApplicationStatusOperationStateSyncResultSourceHelmFileParametersInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs and ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceHelmFileParametersInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs{...}
type ApplicationStatusOperationStateSyncResultSourceHelmFileParametersInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput
	ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs struct {
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput)
}

// ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArray and ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArray{ ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArgs{...} }
type ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput
	ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput
}

type ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArray []ApplicationStatusOperationStateSyncResultSourceHelmFileParametersInput

func (ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArray) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArray) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput {
	return o
}

// Name is the name of the Helm parameter
func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelmFileParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the file containing the values for the Helm parameter
func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelmFileParameters) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput) ToApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultSourceHelmFileParameters {
		return vs[0].([]ApplicationStatusOperationStateSyncResultSourceHelmFileParameters)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateSyncResultSourceHelmParameters struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value *string `pulumi:"value"`
}

// ApplicationStatusOperationStateSyncResultSourceHelmParametersInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs and ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceHelmParametersInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs{...}
type ApplicationStatusOperationStateSyncResultSourceHelmParametersInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutput() ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput
	ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs) ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutput() ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs) ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput)
}

// ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceHelmParametersArray and ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceHelmParametersArray{ ApplicationStatusOperationStateSyncResultSourceHelmParametersArgs{...} }
type ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput
	ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput
}

type ApplicationStatusOperationStateSyncResultSourceHelmParametersArray []ApplicationStatusOperationStateSyncResultSourceHelmParametersInput

func (ApplicationStatusOperationStateSyncResultSourceHelmParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmParametersArray) ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceHelmParametersArray) ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput) ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutput() ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput) ToApplicationStatusOperationStateSyncResultSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput {
	return o
}

// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelmParameters) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name is the name of the Helm parameter
func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelmParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value for the Helm parameter
func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceHelmParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput) ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput) ToApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultSourceHelmParameters {
		return vs[0].([]ApplicationStatusOperationStateSyncResultSourceHelmParameters)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusOperationStateSyncResultSourceKsonnet struct {
	// Environment is a ksonnet application environment name
	Environment *string `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters []ApplicationStatusOperationStateSyncResultSourceKsonnetParameters `pulumi:"parameters"`
}

// ApplicationStatusOperationStateSyncResultSourceKsonnetInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKsonnetArgs and ApplicationStatusOperationStateSyncResultSourceKsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKsonnetInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKsonnetArgs{...}
type ApplicationStatusOperationStateSyncResultSourceKsonnetInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKsonnetOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetOutput
	ToApplicationStatusOperationStateSyncResultSourceKsonnetOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetOutput
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusOperationStateSyncResultSourceKsonnetArgs struct {
	// Environment is a ksonnet application environment name
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayInput `pulumi:"parameters"`
}

func (ApplicationStatusOperationStateSyncResultSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKsonnet)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceKsonnetOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKsonnetOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetArgs) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKsonnetOutput).ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourceKsonnetPtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKsonnetArgs, ApplicationStatusOperationStateSyncResultSourceKsonnetPtr and ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKsonnetPtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourceKsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput
	ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput
}

type applicationStatusOperationStateSyncResultSourceKsonnetPtrType ApplicationStatusOperationStateSyncResultSourceKsonnetArgs

func ApplicationStatusOperationStateSyncResultSourceKsonnetPtr(v *ApplicationStatusOperationStateSyncResultSourceKsonnetArgs) ApplicationStatusOperationStateSyncResultSourceKsonnetPtrInput {
	return (*applicationStatusOperationStateSyncResultSourceKsonnetPtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourceKsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceKsonnet)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourceKsonnetPtrType) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourceKsonnetPtrType) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusOperationStateSyncResultSourceKsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKsonnet) *ApplicationStatusOperationStateSyncResultSourceKsonnet {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusOperationStateSyncResultSourceKsonnetOutput) Parameters() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKsonnet) []ApplicationStatusOperationStateSyncResultSourceKsonnetParameters {
		return v.Parameters
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput)
}

type ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourceKsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKsonnet) ApplicationStatusOperationStateSyncResultSourceKsonnet {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKsonnet) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput) Parameters() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKsonnet) []ApplicationStatusOperationStateSyncResultSourceKsonnetParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusOperationStateSyncResultSourceKsonnetParameters struct {
	Component *string `pulumi:"component"`
	Name      string  `pulumi:"name"`
	Value     string  `pulumi:"value"`
}

// ApplicationStatusOperationStateSyncResultSourceKsonnetParametersInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs and ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKsonnetParametersInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs{...}
type ApplicationStatusOperationStateSyncResultSourceKsonnetParametersInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput
	ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Value     pulumi.StringInput    `pulumi:"value"`
}

func (ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput)
}

// ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArray and ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArray{ ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArgs{...} }
type ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput
	ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput
}

type ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArray []ApplicationStatusOperationStateSyncResultSourceKsonnetParametersInput

func (ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArray) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArray) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKsonnetParameters) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKsonnetParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKsonnetParameters) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput() ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput) ToApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultSourceKsonnetParameters {
		return vs[0].([]ApplicationStatusOperationStateSyncResultSourceKsonnetParameters)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusOperationStateSyncResultSourceKustomize struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images []string `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `pulumi:"version"`
}

// ApplicationStatusOperationStateSyncResultSourceKustomizeInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKustomizeArgs and ApplicationStatusOperationStateSyncResultSourceKustomizeOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKustomizeInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKustomizeArgs{...}
type ApplicationStatusOperationStateSyncResultSourceKustomizeInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKustomizeOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeOutput
	ToApplicationStatusOperationStateSyncResultSourceKustomizeOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeOutput
}

// Kustomize holds kustomize specific options
type ApplicationStatusOperationStateSyncResultSourceKustomizeArgs struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images pulumi.StringArrayInput `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusOperationStateSyncResultSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKustomize)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizeOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKustomizeOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKustomizeOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKustomizeOutput).ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourceKustomizePtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKustomizeArgs, ApplicationStatusOperationStateSyncResultSourceKustomizePtr and ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKustomizePtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKustomizeArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourceKustomizePtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput
	ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput
}

type applicationStatusOperationStateSyncResultSourceKustomizePtrType ApplicationStatusOperationStateSyncResultSourceKustomizeArgs

func ApplicationStatusOperationStateSyncResultSourceKustomizePtr(v *ApplicationStatusOperationStateSyncResultSourceKustomizeArgs) ApplicationStatusOperationStateSyncResultSourceKustomizePtrInput {
	return (*applicationStatusOperationStateSyncResultSourceKustomizePtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceKustomize)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourceKustomizePtrType) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourceKustomizePtrType) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusOperationStateSyncResultSourceKustomizeOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizeOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) *ApplicationStatusOperationStateSyncResultSourceKustomize {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) map[string]string {
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) map[string]string {
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusOperationStateSyncResultSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput() ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourceKustomizeOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) ApplicationStatusOperationStateSyncResultSourceKustomize {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourceKustomizeOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotations struct {
}

// ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsArgs and ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsArgs{...}
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput
	ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsArgs struct {
}

func (ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput {
	return o
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabels struct {
}

// ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsArgs and ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsArgs{...}
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput
	ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsArgs struct {
}

func (ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabels)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsArgs) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabels)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput() ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput) ToApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput {
	return o
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusOperationStateSyncResultSourcePlugin struct {
	// Env is a list of environment variable entries
	Env  []ApplicationStatusOperationStateSyncResultSourcePluginEnv `pulumi:"env"`
	Name *string                                                    `pulumi:"name"`
}

// ApplicationStatusOperationStateSyncResultSourcePluginInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourcePluginArgs and ApplicationStatusOperationStateSyncResultSourcePluginOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourcePluginInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourcePluginArgs{...}
type ApplicationStatusOperationStateSyncResultSourcePluginInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourcePluginOutput() ApplicationStatusOperationStateSyncResultSourcePluginOutput
	ToApplicationStatusOperationStateSyncResultSourcePluginOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourcePluginOutput
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusOperationStateSyncResultSourcePluginArgs struct {
	// Env is a list of environment variable entries
	Env  ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayInput `pulumi:"env"`
	Name pulumi.StringPtrInput                                              `pulumi:"name"`
}

func (ApplicationStatusOperationStateSyncResultSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourcePlugin)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginArgs) ToApplicationStatusOperationStateSyncResultSourcePluginOutput() ApplicationStatusOperationStateSyncResultSourcePluginOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePluginOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginArgs) ToApplicationStatusOperationStateSyncResultSourcePluginOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourcePluginOutput)
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginArgs) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutput() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginArgs) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourcePluginOutput).ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(ctx)
}

// ApplicationStatusOperationStateSyncResultSourcePluginPtrInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourcePluginArgs, ApplicationStatusOperationStateSyncResultSourcePluginPtr and ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourcePluginPtrInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourcePluginArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusOperationStateSyncResultSourcePluginPtrInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutput() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput
	ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput
}

type applicationStatusOperationStateSyncResultSourcePluginPtrType ApplicationStatusOperationStateSyncResultSourcePluginArgs

func ApplicationStatusOperationStateSyncResultSourcePluginPtr(v *ApplicationStatusOperationStateSyncResultSourcePluginArgs) ApplicationStatusOperationStateSyncResultSourcePluginPtrInput {
	return (*applicationStatusOperationStateSyncResultSourcePluginPtrType)(v)
}

func (*applicationStatusOperationStateSyncResultSourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourcePlugin)(nil)).Elem()
}

func (i *applicationStatusOperationStateSyncResultSourcePluginPtrType) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutput() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(context.Background())
}

func (i *applicationStatusOperationStateSyncResultSourcePluginPtrType) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusOperationStateSyncResultSourcePluginOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginOutput) ToApplicationStatusOperationStateSyncResultSourcePluginOutput() ApplicationStatusOperationStateSyncResultSourcePluginOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginOutput) ToApplicationStatusOperationStateSyncResultSourcePluginOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginOutput) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutput() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return o.ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginOutput) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourcePlugin) *ApplicationStatusOperationStateSyncResultSourcePlugin {
		return &v
	}).(ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusOperationStateSyncResultSourcePluginOutput) Env() ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourcePlugin) []ApplicationStatusOperationStateSyncResultSourcePluginEnv {
		return v.Env
	}).(ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusOperationStateSyncResultSourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutput() ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput) ToApplicationStatusOperationStateSyncResultSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput) Elem() ApplicationStatusOperationStateSyncResultSourcePluginOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourcePlugin) ApplicationStatusOperationStateSyncResultSourcePlugin {
		return *v
	}).(ApplicationStatusOperationStateSyncResultSourcePluginOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput) Env() ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourcePlugin) []ApplicationStatusOperationStateSyncResultSourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput)
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusOperationStateSyncResultSourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusOperationStateSyncResultSourcePluginEnv struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name string `pulumi:"name"`
	// Value is the value of the variable
	Value string `pulumi:"value"`
}

// ApplicationStatusOperationStateSyncResultSourcePluginEnvInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs and ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourcePluginEnvInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs{...}
type ApplicationStatusOperationStateSyncResultSourcePluginEnvInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutput() ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput
	ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name pulumi.StringInput `pulumi:"name"`
	// Value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs) ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutput() ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs) ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput)
}

// ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayInput is an input type that accepts ApplicationStatusOperationStateSyncResultSourcePluginEnvArray and ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayInput` via:
//
//          ApplicationStatusOperationStateSyncResultSourcePluginEnvArray{ ApplicationStatusOperationStateSyncResultSourcePluginEnvArgs{...} }
type ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput() ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput
	ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutputWithContext(context.Context) ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput
}

type ApplicationStatusOperationStateSyncResultSourcePluginEnvArray []ApplicationStatusOperationStateSyncResultSourcePluginEnvInput

func (ApplicationStatusOperationStateSyncResultSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginEnvArray) ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput() ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput {
	return i.ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusOperationStateSyncResultSourcePluginEnvArray) ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusOperationStateSyncResultSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput) ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutput() ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput) ToApplicationStatusOperationStateSyncResultSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput {
	return o
}

// Name is the name of the variable, usually expressed in uppercase
func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value is the value of the variable
func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusOperationStateSyncResultSourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusOperationStateSyncResultSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput) ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput() ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput) ToApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusOperationStateSyncResultSourcePluginEnv {
		return vs[0].([]ApplicationStatusOperationStateSyncResultSourcePluginEnv)[vs[1].(int)]
	}).(ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput)
}

// ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type
type ApplicationStatusResources struct {
	Group *string `pulumi:"group"`
	// HealthStatus contains information about the currently observed health state of an application or resource
	Health          *ApplicationStatusResourcesHealth `pulumi:"health"`
	Hook            *bool                             `pulumi:"hook"`
	Kind            *string                           `pulumi:"kind"`
	Name            *string                           `pulumi:"name"`
	Namespace       *string                           `pulumi:"namespace"`
	RequiresPruning *bool                             `pulumi:"requiresPruning"`
	// SyncStatusCode is a type which represents possible comparison results
	Status  *string `pulumi:"status"`
	Version *string `pulumi:"version"`
}

// ApplicationStatusResourcesInput is an input type that accepts ApplicationStatusResourcesArgs and ApplicationStatusResourcesOutput values.
// You can construct a concrete instance of `ApplicationStatusResourcesInput` via:
//
//          ApplicationStatusResourcesArgs{...}
type ApplicationStatusResourcesInput interface {
	pulumi.Input

	ToApplicationStatusResourcesOutput() ApplicationStatusResourcesOutput
	ToApplicationStatusResourcesOutputWithContext(context.Context) ApplicationStatusResourcesOutput
}

// ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type
type ApplicationStatusResourcesArgs struct {
	Group pulumi.StringPtrInput `pulumi:"group"`
	// HealthStatus contains information about the currently observed health state of an application or resource
	Health          ApplicationStatusResourcesHealthPtrInput `pulumi:"health"`
	Hook            pulumi.BoolPtrInput                      `pulumi:"hook"`
	Kind            pulumi.StringPtrInput                    `pulumi:"kind"`
	Name            pulumi.StringPtrInput                    `pulumi:"name"`
	Namespace       pulumi.StringPtrInput                    `pulumi:"namespace"`
	RequiresPruning pulumi.BoolPtrInput                      `pulumi:"requiresPruning"`
	// SyncStatusCode is a type which represents possible comparison results
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusResources)(nil)).Elem()
}

func (i ApplicationStatusResourcesArgs) ToApplicationStatusResourcesOutput() ApplicationStatusResourcesOutput {
	return i.ToApplicationStatusResourcesOutputWithContext(context.Background())
}

func (i ApplicationStatusResourcesArgs) ToApplicationStatusResourcesOutputWithContext(ctx context.Context) ApplicationStatusResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusResourcesOutput)
}

// ApplicationStatusResourcesArrayInput is an input type that accepts ApplicationStatusResourcesArray and ApplicationStatusResourcesArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusResourcesArrayInput` via:
//
//          ApplicationStatusResourcesArray{ ApplicationStatusResourcesArgs{...} }
type ApplicationStatusResourcesArrayInput interface {
	pulumi.Input

	ToApplicationStatusResourcesArrayOutput() ApplicationStatusResourcesArrayOutput
	ToApplicationStatusResourcesArrayOutputWithContext(context.Context) ApplicationStatusResourcesArrayOutput
}

type ApplicationStatusResourcesArray []ApplicationStatusResourcesInput

func (ApplicationStatusResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusResources)(nil)).Elem()
}

func (i ApplicationStatusResourcesArray) ToApplicationStatusResourcesArrayOutput() ApplicationStatusResourcesArrayOutput {
	return i.ToApplicationStatusResourcesArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusResourcesArray) ToApplicationStatusResourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusResourcesArrayOutput)
}

// ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type
type ApplicationStatusResourcesOutput struct{ *pulumi.OutputState }

func (ApplicationStatusResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusResources)(nil)).Elem()
}

func (o ApplicationStatusResourcesOutput) ToApplicationStatusResourcesOutput() ApplicationStatusResourcesOutput {
	return o
}

func (o ApplicationStatusResourcesOutput) ToApplicationStatusResourcesOutputWithContext(ctx context.Context) ApplicationStatusResourcesOutput {
	return o
}

func (o ApplicationStatusResourcesOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// HealthStatus contains information about the currently observed health state of an application or resource
func (o ApplicationStatusResourcesOutput) Health() ApplicationStatusResourcesHealthPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *ApplicationStatusResourcesHealth { return v.Health }).(ApplicationStatusResourcesHealthPtrOutput)
}

func (o ApplicationStatusResourcesOutput) Hook() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *bool { return v.Hook }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusResourcesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusResourcesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusResourcesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusResourcesOutput) RequiresPruning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *bool { return v.RequiresPruning }).(pulumi.BoolPtrOutput)
}

// SyncStatusCode is a type which represents possible comparison results
func (o ApplicationStatusResourcesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusResourcesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResources) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusResourcesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusResources)(nil)).Elem()
}

func (o ApplicationStatusResourcesArrayOutput) ToApplicationStatusResourcesArrayOutput() ApplicationStatusResourcesArrayOutput {
	return o
}

func (o ApplicationStatusResourcesArrayOutput) ToApplicationStatusResourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusResourcesArrayOutput {
	return o
}

func (o ApplicationStatusResourcesArrayOutput) Index(i pulumi.IntInput) ApplicationStatusResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusResources {
		return vs[0].([]ApplicationStatusResources)[vs[1].(int)]
	}).(ApplicationStatusResourcesOutput)
}

// HealthStatus contains information about the currently observed health state of an application or resource
type ApplicationStatusResourcesHealth struct {
	// Message is a human-readable informational message describing the health status
	Message *string `pulumi:"message"`
	// Status holds the status code of the application or resource
	Status *string `pulumi:"status"`
}

// ApplicationStatusResourcesHealthInput is an input type that accepts ApplicationStatusResourcesHealthArgs and ApplicationStatusResourcesHealthOutput values.
// You can construct a concrete instance of `ApplicationStatusResourcesHealthInput` via:
//
//          ApplicationStatusResourcesHealthArgs{...}
type ApplicationStatusResourcesHealthInput interface {
	pulumi.Input

	ToApplicationStatusResourcesHealthOutput() ApplicationStatusResourcesHealthOutput
	ToApplicationStatusResourcesHealthOutputWithContext(context.Context) ApplicationStatusResourcesHealthOutput
}

// HealthStatus contains information about the currently observed health state of an application or resource
type ApplicationStatusResourcesHealthArgs struct {
	// Message is a human-readable informational message describing the health status
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Status holds the status code of the application or resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ApplicationStatusResourcesHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusResourcesHealth)(nil)).Elem()
}

func (i ApplicationStatusResourcesHealthArgs) ToApplicationStatusResourcesHealthOutput() ApplicationStatusResourcesHealthOutput {
	return i.ToApplicationStatusResourcesHealthOutputWithContext(context.Background())
}

func (i ApplicationStatusResourcesHealthArgs) ToApplicationStatusResourcesHealthOutputWithContext(ctx context.Context) ApplicationStatusResourcesHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusResourcesHealthOutput)
}

func (i ApplicationStatusResourcesHealthArgs) ToApplicationStatusResourcesHealthPtrOutput() ApplicationStatusResourcesHealthPtrOutput {
	return i.ToApplicationStatusResourcesHealthPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusResourcesHealthArgs) ToApplicationStatusResourcesHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusResourcesHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusResourcesHealthOutput).ToApplicationStatusResourcesHealthPtrOutputWithContext(ctx)
}

// ApplicationStatusResourcesHealthPtrInput is an input type that accepts ApplicationStatusResourcesHealthArgs, ApplicationStatusResourcesHealthPtr and ApplicationStatusResourcesHealthPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusResourcesHealthPtrInput` via:
//
//          ApplicationStatusResourcesHealthArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusResourcesHealthPtrInput interface {
	pulumi.Input

	ToApplicationStatusResourcesHealthPtrOutput() ApplicationStatusResourcesHealthPtrOutput
	ToApplicationStatusResourcesHealthPtrOutputWithContext(context.Context) ApplicationStatusResourcesHealthPtrOutput
}

type applicationStatusResourcesHealthPtrType ApplicationStatusResourcesHealthArgs

func ApplicationStatusResourcesHealthPtr(v *ApplicationStatusResourcesHealthArgs) ApplicationStatusResourcesHealthPtrInput {
	return (*applicationStatusResourcesHealthPtrType)(v)
}

func (*applicationStatusResourcesHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusResourcesHealth)(nil)).Elem()
}

func (i *applicationStatusResourcesHealthPtrType) ToApplicationStatusResourcesHealthPtrOutput() ApplicationStatusResourcesHealthPtrOutput {
	return i.ToApplicationStatusResourcesHealthPtrOutputWithContext(context.Background())
}

func (i *applicationStatusResourcesHealthPtrType) ToApplicationStatusResourcesHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusResourcesHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusResourcesHealthPtrOutput)
}

// HealthStatus contains information about the currently observed health state of an application or resource
type ApplicationStatusResourcesHealthOutput struct{ *pulumi.OutputState }

func (ApplicationStatusResourcesHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusResourcesHealth)(nil)).Elem()
}

func (o ApplicationStatusResourcesHealthOutput) ToApplicationStatusResourcesHealthOutput() ApplicationStatusResourcesHealthOutput {
	return o
}

func (o ApplicationStatusResourcesHealthOutput) ToApplicationStatusResourcesHealthOutputWithContext(ctx context.Context) ApplicationStatusResourcesHealthOutput {
	return o
}

func (o ApplicationStatusResourcesHealthOutput) ToApplicationStatusResourcesHealthPtrOutput() ApplicationStatusResourcesHealthPtrOutput {
	return o.ToApplicationStatusResourcesHealthPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusResourcesHealthOutput) ToApplicationStatusResourcesHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusResourcesHealthPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResourcesHealth) *ApplicationStatusResourcesHealth {
		return &v
	}).(ApplicationStatusResourcesHealthPtrOutput)
}

// Message is a human-readable informational message describing the health status
func (o ApplicationStatusResourcesHealthOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResourcesHealth) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Status holds the status code of the application or resource
func (o ApplicationStatusResourcesHealthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusResourcesHealth) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ApplicationStatusResourcesHealthPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusResourcesHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusResourcesHealth)(nil)).Elem()
}

func (o ApplicationStatusResourcesHealthPtrOutput) ToApplicationStatusResourcesHealthPtrOutput() ApplicationStatusResourcesHealthPtrOutput {
	return o
}

func (o ApplicationStatusResourcesHealthPtrOutput) ToApplicationStatusResourcesHealthPtrOutputWithContext(ctx context.Context) ApplicationStatusResourcesHealthPtrOutput {
	return o
}

func (o ApplicationStatusResourcesHealthPtrOutput) Elem() ApplicationStatusResourcesHealthOutput {
	return o.ApplyT(func(v *ApplicationStatusResourcesHealth) ApplicationStatusResourcesHealth { return *v }).(ApplicationStatusResourcesHealthOutput)
}

// Message is a human-readable informational message describing the health status
func (o ApplicationStatusResourcesHealthPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusResourcesHealth) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Status holds the status code of the application or resource
func (o ApplicationStatusResourcesHealthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusResourcesHealth) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Summary contains a list of URLs and container images used by this application
type ApplicationStatusSummary struct {
	// ExternalURLs holds all external URLs of application child resources.
	ExternalURLs []string `pulumi:"externalURLs"`
	// Images holds all images of application child resources.
	Images []string `pulumi:"images"`
}

// ApplicationStatusSummaryInput is an input type that accepts ApplicationStatusSummaryArgs and ApplicationStatusSummaryOutput values.
// You can construct a concrete instance of `ApplicationStatusSummaryInput` via:
//
//          ApplicationStatusSummaryArgs{...}
type ApplicationStatusSummaryInput interface {
	pulumi.Input

	ToApplicationStatusSummaryOutput() ApplicationStatusSummaryOutput
	ToApplicationStatusSummaryOutputWithContext(context.Context) ApplicationStatusSummaryOutput
}

// Summary contains a list of URLs and container images used by this application
type ApplicationStatusSummaryArgs struct {
	// ExternalURLs holds all external URLs of application child resources.
	ExternalURLs pulumi.StringArrayInput `pulumi:"externalURLs"`
	// Images holds all images of application child resources.
	Images pulumi.StringArrayInput `pulumi:"images"`
}

func (ApplicationStatusSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSummary)(nil)).Elem()
}

func (i ApplicationStatusSummaryArgs) ToApplicationStatusSummaryOutput() ApplicationStatusSummaryOutput {
	return i.ToApplicationStatusSummaryOutputWithContext(context.Background())
}

func (i ApplicationStatusSummaryArgs) ToApplicationStatusSummaryOutputWithContext(ctx context.Context) ApplicationStatusSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSummaryOutput)
}

func (i ApplicationStatusSummaryArgs) ToApplicationStatusSummaryPtrOutput() ApplicationStatusSummaryPtrOutput {
	return i.ToApplicationStatusSummaryPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSummaryArgs) ToApplicationStatusSummaryPtrOutputWithContext(ctx context.Context) ApplicationStatusSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSummaryOutput).ToApplicationStatusSummaryPtrOutputWithContext(ctx)
}

// ApplicationStatusSummaryPtrInput is an input type that accepts ApplicationStatusSummaryArgs, ApplicationStatusSummaryPtr and ApplicationStatusSummaryPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSummaryPtrInput` via:
//
//          ApplicationStatusSummaryArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSummaryPtrInput interface {
	pulumi.Input

	ToApplicationStatusSummaryPtrOutput() ApplicationStatusSummaryPtrOutput
	ToApplicationStatusSummaryPtrOutputWithContext(context.Context) ApplicationStatusSummaryPtrOutput
}

type applicationStatusSummaryPtrType ApplicationStatusSummaryArgs

func ApplicationStatusSummaryPtr(v *ApplicationStatusSummaryArgs) ApplicationStatusSummaryPtrInput {
	return (*applicationStatusSummaryPtrType)(v)
}

func (*applicationStatusSummaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSummary)(nil)).Elem()
}

func (i *applicationStatusSummaryPtrType) ToApplicationStatusSummaryPtrOutput() ApplicationStatusSummaryPtrOutput {
	return i.ToApplicationStatusSummaryPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSummaryPtrType) ToApplicationStatusSummaryPtrOutputWithContext(ctx context.Context) ApplicationStatusSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSummaryPtrOutput)
}

// Summary contains a list of URLs and container images used by this application
type ApplicationStatusSummaryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSummary)(nil)).Elem()
}

func (o ApplicationStatusSummaryOutput) ToApplicationStatusSummaryOutput() ApplicationStatusSummaryOutput {
	return o
}

func (o ApplicationStatusSummaryOutput) ToApplicationStatusSummaryOutputWithContext(ctx context.Context) ApplicationStatusSummaryOutput {
	return o
}

func (o ApplicationStatusSummaryOutput) ToApplicationStatusSummaryPtrOutput() ApplicationStatusSummaryPtrOutput {
	return o.ToApplicationStatusSummaryPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSummaryOutput) ToApplicationStatusSummaryPtrOutputWithContext(ctx context.Context) ApplicationStatusSummaryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSummary) *ApplicationStatusSummary {
		return &v
	}).(ApplicationStatusSummaryPtrOutput)
}

// ExternalURLs holds all external URLs of application child resources.
func (o ApplicationStatusSummaryOutput) ExternalURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSummary) []string { return v.ExternalURLs }).(pulumi.StringArrayOutput)
}

// Images holds all images of application child resources.
func (o ApplicationStatusSummaryOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSummary) []string { return v.Images }).(pulumi.StringArrayOutput)
}

type ApplicationStatusSummaryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSummary)(nil)).Elem()
}

func (o ApplicationStatusSummaryPtrOutput) ToApplicationStatusSummaryPtrOutput() ApplicationStatusSummaryPtrOutput {
	return o
}

func (o ApplicationStatusSummaryPtrOutput) ToApplicationStatusSummaryPtrOutputWithContext(ctx context.Context) ApplicationStatusSummaryPtrOutput {
	return o
}

func (o ApplicationStatusSummaryPtrOutput) Elem() ApplicationStatusSummaryOutput {
	return o.ApplyT(func(v *ApplicationStatusSummary) ApplicationStatusSummary { return *v }).(ApplicationStatusSummaryOutput)
}

// ExternalURLs holds all external URLs of application child resources.
func (o ApplicationStatusSummaryPtrOutput) ExternalURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSummary) []string {
		if v == nil {
			return nil
		}
		return v.ExternalURLs
	}).(pulumi.StringArrayOutput)
}

// Images holds all images of application child resources.
func (o ApplicationStatusSummaryPtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSummary) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// Sync contains information about the application's current sync status
type ApplicationStatusSync struct {
	// ComparedTo contains information about what has been compared
	ComparedTo *ApplicationStatusSyncComparedTo `pulumi:"comparedTo"`
	// Revision contains information about the revision the comparison has been performed to
	Revision *string `pulumi:"revision"`
	// Status is the sync state of the comparison
	Status string `pulumi:"status"`
}

// ApplicationStatusSyncInput is an input type that accepts ApplicationStatusSyncArgs and ApplicationStatusSyncOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncInput` via:
//
//          ApplicationStatusSyncArgs{...}
type ApplicationStatusSyncInput interface {
	pulumi.Input

	ToApplicationStatusSyncOutput() ApplicationStatusSyncOutput
	ToApplicationStatusSyncOutputWithContext(context.Context) ApplicationStatusSyncOutput
}

// Sync contains information about the application's current sync status
type ApplicationStatusSyncArgs struct {
	// ComparedTo contains information about what has been compared
	ComparedTo ApplicationStatusSyncComparedToPtrInput `pulumi:"comparedTo"`
	// Revision contains information about the revision the comparison has been performed to
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// Status is the sync state of the comparison
	Status pulumi.StringInput `pulumi:"status"`
}

func (ApplicationStatusSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSync)(nil)).Elem()
}

func (i ApplicationStatusSyncArgs) ToApplicationStatusSyncOutput() ApplicationStatusSyncOutput {
	return i.ToApplicationStatusSyncOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncArgs) ToApplicationStatusSyncOutputWithContext(ctx context.Context) ApplicationStatusSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncOutput)
}

func (i ApplicationStatusSyncArgs) ToApplicationStatusSyncPtrOutput() ApplicationStatusSyncPtrOutput {
	return i.ToApplicationStatusSyncPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncArgs) ToApplicationStatusSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncOutput).ToApplicationStatusSyncPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncPtrInput is an input type that accepts ApplicationStatusSyncArgs, ApplicationStatusSyncPtr and ApplicationStatusSyncPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncPtrInput` via:
//
//          ApplicationStatusSyncArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncPtrOutput() ApplicationStatusSyncPtrOutput
	ToApplicationStatusSyncPtrOutputWithContext(context.Context) ApplicationStatusSyncPtrOutput
}

type applicationStatusSyncPtrType ApplicationStatusSyncArgs

func ApplicationStatusSyncPtr(v *ApplicationStatusSyncArgs) ApplicationStatusSyncPtrInput {
	return (*applicationStatusSyncPtrType)(v)
}

func (*applicationStatusSyncPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSync)(nil)).Elem()
}

func (i *applicationStatusSyncPtrType) ToApplicationStatusSyncPtrOutput() ApplicationStatusSyncPtrOutput {
	return i.ToApplicationStatusSyncPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncPtrType) ToApplicationStatusSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncPtrOutput)
}

// Sync contains information about the application's current sync status
type ApplicationStatusSyncOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSync)(nil)).Elem()
}

func (o ApplicationStatusSyncOutput) ToApplicationStatusSyncOutput() ApplicationStatusSyncOutput {
	return o
}

func (o ApplicationStatusSyncOutput) ToApplicationStatusSyncOutputWithContext(ctx context.Context) ApplicationStatusSyncOutput {
	return o
}

func (o ApplicationStatusSyncOutput) ToApplicationStatusSyncPtrOutput() ApplicationStatusSyncPtrOutput {
	return o.ToApplicationStatusSyncPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncOutput) ToApplicationStatusSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSync) *ApplicationStatusSync {
		return &v
	}).(ApplicationStatusSyncPtrOutput)
}

// ComparedTo contains information about what has been compared
func (o ApplicationStatusSyncOutput) ComparedTo() ApplicationStatusSyncComparedToPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSync) *ApplicationStatusSyncComparedTo { return v.ComparedTo }).(ApplicationStatusSyncComparedToPtrOutput)
}

// Revision contains information about the revision the comparison has been performed to
func (o ApplicationStatusSyncOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSync) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// Status is the sync state of the comparison
func (o ApplicationStatusSyncOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSync) string { return v.Status }).(pulumi.StringOutput)
}

type ApplicationStatusSyncPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSync)(nil)).Elem()
}

func (o ApplicationStatusSyncPtrOutput) ToApplicationStatusSyncPtrOutput() ApplicationStatusSyncPtrOutput {
	return o
}

func (o ApplicationStatusSyncPtrOutput) ToApplicationStatusSyncPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncPtrOutput {
	return o
}

func (o ApplicationStatusSyncPtrOutput) Elem() ApplicationStatusSyncOutput {
	return o.ApplyT(func(v *ApplicationStatusSync) ApplicationStatusSync { return *v }).(ApplicationStatusSyncOutput)
}

// ComparedTo contains information about what has been compared
func (o ApplicationStatusSyncPtrOutput) ComparedTo() ApplicationStatusSyncComparedToPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSync) *ApplicationStatusSyncComparedTo {
		if v == nil {
			return nil
		}
		return v.ComparedTo
	}).(ApplicationStatusSyncComparedToPtrOutput)
}

// Revision contains information about the revision the comparison has been performed to
func (o ApplicationStatusSyncPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSync) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Status is the sync state of the comparison
func (o ApplicationStatusSyncPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSync) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// ComparedTo contains information about what has been compared
type ApplicationStatusSyncComparedTo struct {
	// Destination is a reference to the application's destination used for comparison
	Destination ApplicationStatusSyncComparedToDestination `pulumi:"destination"`
	// Source is a reference to the application's source used for comparison
	Source ApplicationStatusSyncComparedToSource `pulumi:"source"`
}

// ApplicationStatusSyncComparedToInput is an input type that accepts ApplicationStatusSyncComparedToArgs and ApplicationStatusSyncComparedToOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToInput` via:
//
//          ApplicationStatusSyncComparedToArgs{...}
type ApplicationStatusSyncComparedToInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToOutput() ApplicationStatusSyncComparedToOutput
	ToApplicationStatusSyncComparedToOutputWithContext(context.Context) ApplicationStatusSyncComparedToOutput
}

// ComparedTo contains information about what has been compared
type ApplicationStatusSyncComparedToArgs struct {
	// Destination is a reference to the application's destination used for comparison
	Destination ApplicationStatusSyncComparedToDestinationInput `pulumi:"destination"`
	// Source is a reference to the application's source used for comparison
	Source ApplicationStatusSyncComparedToSourceInput `pulumi:"source"`
}

func (ApplicationStatusSyncComparedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedTo)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToArgs) ToApplicationStatusSyncComparedToOutput() ApplicationStatusSyncComparedToOutput {
	return i.ToApplicationStatusSyncComparedToOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToArgs) ToApplicationStatusSyncComparedToOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToOutput)
}

func (i ApplicationStatusSyncComparedToArgs) ToApplicationStatusSyncComparedToPtrOutput() ApplicationStatusSyncComparedToPtrOutput {
	return i.ToApplicationStatusSyncComparedToPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToArgs) ToApplicationStatusSyncComparedToPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToOutput).ToApplicationStatusSyncComparedToPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToPtrInput is an input type that accepts ApplicationStatusSyncComparedToArgs, ApplicationStatusSyncComparedToPtr and ApplicationStatusSyncComparedToPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToPtrInput` via:
//
//          ApplicationStatusSyncComparedToArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToPtrOutput() ApplicationStatusSyncComparedToPtrOutput
	ToApplicationStatusSyncComparedToPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToPtrOutput
}

type applicationStatusSyncComparedToPtrType ApplicationStatusSyncComparedToArgs

func ApplicationStatusSyncComparedToPtr(v *ApplicationStatusSyncComparedToArgs) ApplicationStatusSyncComparedToPtrInput {
	return (*applicationStatusSyncComparedToPtrType)(v)
}

func (*applicationStatusSyncComparedToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedTo)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToPtrType) ToApplicationStatusSyncComparedToPtrOutput() ApplicationStatusSyncComparedToPtrOutput {
	return i.ToApplicationStatusSyncComparedToPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToPtrType) ToApplicationStatusSyncComparedToPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToPtrOutput)
}

// ComparedTo contains information about what has been compared
type ApplicationStatusSyncComparedToOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedTo)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToOutput) ToApplicationStatusSyncComparedToOutput() ApplicationStatusSyncComparedToOutput {
	return o
}

func (o ApplicationStatusSyncComparedToOutput) ToApplicationStatusSyncComparedToOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToOutput {
	return o
}

func (o ApplicationStatusSyncComparedToOutput) ToApplicationStatusSyncComparedToPtrOutput() ApplicationStatusSyncComparedToPtrOutput {
	return o.ToApplicationStatusSyncComparedToPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToOutput) ToApplicationStatusSyncComparedToPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedTo) *ApplicationStatusSyncComparedTo {
		return &v
	}).(ApplicationStatusSyncComparedToPtrOutput)
}

// Destination is a reference to the application's destination used for comparison
func (o ApplicationStatusSyncComparedToOutput) Destination() ApplicationStatusSyncComparedToDestinationOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedTo) ApplicationStatusSyncComparedToDestination {
		return v.Destination
	}).(ApplicationStatusSyncComparedToDestinationOutput)
}

// Source is a reference to the application's source used for comparison
func (o ApplicationStatusSyncComparedToOutput) Source() ApplicationStatusSyncComparedToSourceOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedTo) ApplicationStatusSyncComparedToSource { return v.Source }).(ApplicationStatusSyncComparedToSourceOutput)
}

type ApplicationStatusSyncComparedToPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedTo)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToPtrOutput) ToApplicationStatusSyncComparedToPtrOutput() ApplicationStatusSyncComparedToPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToPtrOutput) ToApplicationStatusSyncComparedToPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToPtrOutput) Elem() ApplicationStatusSyncComparedToOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedTo) ApplicationStatusSyncComparedTo { return *v }).(ApplicationStatusSyncComparedToOutput)
}

// Destination is a reference to the application's destination used for comparison
func (o ApplicationStatusSyncComparedToPtrOutput) Destination() ApplicationStatusSyncComparedToDestinationPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedTo) *ApplicationStatusSyncComparedToDestination {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(ApplicationStatusSyncComparedToDestinationPtrOutput)
}

// Source is a reference to the application's source used for comparison
func (o ApplicationStatusSyncComparedToPtrOutput) Source() ApplicationStatusSyncComparedToSourcePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedTo) *ApplicationStatusSyncComparedToSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(ApplicationStatusSyncComparedToSourcePtrOutput)
}

// Destination is a reference to the application's destination used for comparison
type ApplicationStatusSyncComparedToDestination struct {
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name *string `pulumi:"name"`
	// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace *string `pulumi:"namespace"`
	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server *string `pulumi:"server"`
}

// ApplicationStatusSyncComparedToDestinationInput is an input type that accepts ApplicationStatusSyncComparedToDestinationArgs and ApplicationStatusSyncComparedToDestinationOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToDestinationInput` via:
//
//          ApplicationStatusSyncComparedToDestinationArgs{...}
type ApplicationStatusSyncComparedToDestinationInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToDestinationOutput() ApplicationStatusSyncComparedToDestinationOutput
	ToApplicationStatusSyncComparedToDestinationOutputWithContext(context.Context) ApplicationStatusSyncComparedToDestinationOutput
}

// Destination is a reference to the application's destination used for comparison
type ApplicationStatusSyncComparedToDestinationArgs struct {
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (ApplicationStatusSyncComparedToDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToDestination)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToDestinationArgs) ToApplicationStatusSyncComparedToDestinationOutput() ApplicationStatusSyncComparedToDestinationOutput {
	return i.ToApplicationStatusSyncComparedToDestinationOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToDestinationArgs) ToApplicationStatusSyncComparedToDestinationOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToDestinationOutput)
}

func (i ApplicationStatusSyncComparedToDestinationArgs) ToApplicationStatusSyncComparedToDestinationPtrOutput() ApplicationStatusSyncComparedToDestinationPtrOutput {
	return i.ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToDestinationArgs) ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToDestinationOutput).ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToDestinationPtrInput is an input type that accepts ApplicationStatusSyncComparedToDestinationArgs, ApplicationStatusSyncComparedToDestinationPtr and ApplicationStatusSyncComparedToDestinationPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToDestinationPtrInput` via:
//
//          ApplicationStatusSyncComparedToDestinationArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToDestinationPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToDestinationPtrOutput() ApplicationStatusSyncComparedToDestinationPtrOutput
	ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToDestinationPtrOutput
}

type applicationStatusSyncComparedToDestinationPtrType ApplicationStatusSyncComparedToDestinationArgs

func ApplicationStatusSyncComparedToDestinationPtr(v *ApplicationStatusSyncComparedToDestinationArgs) ApplicationStatusSyncComparedToDestinationPtrInput {
	return (*applicationStatusSyncComparedToDestinationPtrType)(v)
}

func (*applicationStatusSyncComparedToDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToDestination)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToDestinationPtrType) ToApplicationStatusSyncComparedToDestinationPtrOutput() ApplicationStatusSyncComparedToDestinationPtrOutput {
	return i.ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToDestinationPtrType) ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToDestinationPtrOutput)
}

// Destination is a reference to the application's destination used for comparison
type ApplicationStatusSyncComparedToDestinationOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToDestination)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToDestinationOutput) ToApplicationStatusSyncComparedToDestinationOutput() ApplicationStatusSyncComparedToDestinationOutput {
	return o
}

func (o ApplicationStatusSyncComparedToDestinationOutput) ToApplicationStatusSyncComparedToDestinationOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToDestinationOutput {
	return o
}

func (o ApplicationStatusSyncComparedToDestinationOutput) ToApplicationStatusSyncComparedToDestinationPtrOutput() ApplicationStatusSyncComparedToDestinationPtrOutput {
	return o.ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToDestinationOutput) ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToDestinationPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToDestination) *ApplicationStatusSyncComparedToDestination {
		return &v
	}).(ApplicationStatusSyncComparedToDestinationPtrOutput)
}

// Name is an alternate way of specifying the target cluster by its symbolic name
func (o ApplicationStatusSyncComparedToDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
func (o ApplicationStatusSyncComparedToDestinationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToDestination) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
func (o ApplicationStatusSyncComparedToDestinationOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToDestination) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToDestinationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToDestination)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToDestinationPtrOutput) ToApplicationStatusSyncComparedToDestinationPtrOutput() ApplicationStatusSyncComparedToDestinationPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToDestinationPtrOutput) ToApplicationStatusSyncComparedToDestinationPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToDestinationPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToDestinationPtrOutput) Elem() ApplicationStatusSyncComparedToDestinationOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToDestination) ApplicationStatusSyncComparedToDestination {
		return *v
	}).(ApplicationStatusSyncComparedToDestinationOutput)
}

// Name is an alternate way of specifying the target cluster by its symbolic name
func (o ApplicationStatusSyncComparedToDestinationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToDestination) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
func (o ApplicationStatusSyncComparedToDestinationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToDestination) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
func (o ApplicationStatusSyncComparedToDestinationPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToDestination) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// Source is a reference to the application's source used for comparison
type ApplicationStatusSyncComparedToSource struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory *ApplicationStatusSyncComparedToSourceDirectory `pulumi:"directory"`
	// Helm holds helm specific options
	Helm *ApplicationStatusSyncComparedToSourceHelm `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet *ApplicationStatusSyncComparedToSourceKsonnet `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationStatusSyncComparedToSourceKustomize `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationStatusSyncComparedToSourcePlugin `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL string `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// ApplicationStatusSyncComparedToSourceInput is an input type that accepts ApplicationStatusSyncComparedToSourceArgs and ApplicationStatusSyncComparedToSourceOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceInput` via:
//
//          ApplicationStatusSyncComparedToSourceArgs{...}
type ApplicationStatusSyncComparedToSourceInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceOutput() ApplicationStatusSyncComparedToSourceOutput
	ToApplicationStatusSyncComparedToSourceOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceOutput
}

// Source is a reference to the application's source used for comparison
type ApplicationStatusSyncComparedToSourceArgs struct {
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Directory holds path/directory specific options
	Directory ApplicationStatusSyncComparedToSourceDirectoryPtrInput `pulumi:"directory"`
	// Helm holds helm specific options
	Helm ApplicationStatusSyncComparedToSourceHelmPtrInput `pulumi:"helm"`
	// Ksonnet holds ksonnet specific options
	Ksonnet ApplicationStatusSyncComparedToSourceKsonnetPtrInput `pulumi:"ksonnet"`
	// Kustomize holds kustomize specific options
	Kustomize ApplicationStatusSyncComparedToSourceKustomizePtrInput `pulumi:"kustomize"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin ApplicationStatusSyncComparedToSourcePluginPtrInput `pulumi:"plugin"`
	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL pulumi.StringInput `pulumi:"repoURL"`
	// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (ApplicationStatusSyncComparedToSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSource)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceArgs) ToApplicationStatusSyncComparedToSourceOutput() ApplicationStatusSyncComparedToSourceOutput {
	return i.ToApplicationStatusSyncComparedToSourceOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceArgs) ToApplicationStatusSyncComparedToSourceOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceOutput)
}

func (i ApplicationStatusSyncComparedToSourceArgs) ToApplicationStatusSyncComparedToSourcePtrOutput() ApplicationStatusSyncComparedToSourcePtrOutput {
	return i.ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceArgs) ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceOutput).ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourcePtrInput is an input type that accepts ApplicationStatusSyncComparedToSourceArgs, ApplicationStatusSyncComparedToSourcePtr and ApplicationStatusSyncComparedToSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourcePtrInput` via:
//
//          ApplicationStatusSyncComparedToSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourcePtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourcePtrOutput() ApplicationStatusSyncComparedToSourcePtrOutput
	ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourcePtrOutput
}

type applicationStatusSyncComparedToSourcePtrType ApplicationStatusSyncComparedToSourceArgs

func ApplicationStatusSyncComparedToSourcePtr(v *ApplicationStatusSyncComparedToSourceArgs) ApplicationStatusSyncComparedToSourcePtrInput {
	return (*applicationStatusSyncComparedToSourcePtrType)(v)
}

func (*applicationStatusSyncComparedToSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSource)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourcePtrType) ToApplicationStatusSyncComparedToSourcePtrOutput() ApplicationStatusSyncComparedToSourcePtrOutput {
	return i.ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourcePtrType) ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourcePtrOutput)
}

// Source is a reference to the application's source used for comparison
type ApplicationStatusSyncComparedToSourceOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSource)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceOutput) ToApplicationStatusSyncComparedToSourceOutput() ApplicationStatusSyncComparedToSourceOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceOutput) ToApplicationStatusSyncComparedToSourceOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceOutput) ToApplicationStatusSyncComparedToSourcePtrOutput() ApplicationStatusSyncComparedToSourcePtrOutput {
	return o.ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourceOutput) ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSource {
		return &v
	}).(ApplicationStatusSyncComparedToSourcePtrOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusSyncComparedToSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusSyncComparedToSourceOutput) Directory() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceDirectory {
		return v.Directory
	}).(ApplicationStatusSyncComparedToSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusSyncComparedToSourceOutput) Helm() ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceHelm {
		return v.Helm
	}).(ApplicationStatusSyncComparedToSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusSyncComparedToSourceOutput) Ksonnet() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceKsonnet {
		return v.Ksonnet
	}).(ApplicationStatusSyncComparedToSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusSyncComparedToSourceOutput) Kustomize() ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceKustomize {
		return v.Kustomize
	}).(ApplicationStatusSyncComparedToSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusSyncComparedToSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusSyncComparedToSourceOutput) Plugin() ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourcePlugin {
		return v.Plugin
	}).(ApplicationStatusSyncComparedToSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusSyncComparedToSourceOutput) RepoURL() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) string { return v.RepoURL }).(pulumi.StringOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusSyncComparedToSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSource)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourcePtrOutput) ToApplicationStatusSyncComparedToSourcePtrOutput() ApplicationStatusSyncComparedToSourcePtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePtrOutput) ToApplicationStatusSyncComparedToSourcePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePtrOutput) Elem() ApplicationStatusSyncComparedToSourceOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) ApplicationStatusSyncComparedToSource { return *v }).(ApplicationStatusSyncComparedToSourceOutput)
}

// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *string {
		if v == nil {
			return nil
		}
		return v.Chart
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Directory() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceDirectory {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(ApplicationStatusSyncComparedToSourceDirectoryPtrOutput)
}

// Helm holds helm specific options
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Helm() ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceHelm {
		if v == nil {
			return nil
		}
		return v.Helm
	}).(ApplicationStatusSyncComparedToSourceHelmPtrOutput)
}

// Ksonnet holds ksonnet specific options
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Ksonnet() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceKsonnet {
		if v == nil {
			return nil
		}
		return v.Ksonnet
	}).(ApplicationStatusSyncComparedToSourceKsonnetPtrOutput)
}

// Kustomize holds kustomize specific options
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Kustomize() ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourceKustomize {
		if v == nil {
			return nil
		}
		return v.Kustomize
	}).(ApplicationStatusSyncComparedToSourceKustomizePtrOutput)
}

// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
func (o ApplicationStatusSyncComparedToSourcePtrOutput) Plugin() ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *ApplicationStatusSyncComparedToSourcePlugin {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(ApplicationStatusSyncComparedToSourcePluginPtrOutput)
}

// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
func (o ApplicationStatusSyncComparedToSourcePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o ApplicationStatusSyncComparedToSourcePtrOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSource) *string {
		if v == nil {
			return nil
		}
		return v.TargetRevision
	}).(pulumi.StringPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusSyncComparedToSourceDirectory struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationStatusSyncComparedToSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `pulumi:"recurse"`
}

// ApplicationStatusSyncComparedToSourceDirectoryInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryArgs and ApplicationStatusSyncComparedToSourceDirectoryOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryArgs{...}
type ApplicationStatusSyncComparedToSourceDirectoryInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryOutput() ApplicationStatusSyncComparedToSourceDirectoryOutput
	ToApplicationStatusSyncComparedToSourceDirectoryOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryOutput
}

// Directory holds path/directory specific options
type ApplicationStatusSyncComparedToSourceDirectoryArgs struct {
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (ApplicationStatusSyncComparedToSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectory)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceDirectoryArgs) ToApplicationStatusSyncComparedToSourceDirectoryOutput() ApplicationStatusSyncComparedToSourceDirectoryOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryArgs) ToApplicationStatusSyncComparedToSourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryOutput)
}

func (i ApplicationStatusSyncComparedToSourceDirectoryArgs) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryArgs) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryOutput).ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourceDirectoryPtrInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryArgs, ApplicationStatusSyncComparedToSourceDirectoryPtr and ApplicationStatusSyncComparedToSourceDirectoryPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryPtrInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourceDirectoryPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput
	ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryPtrOutput
}

type applicationStatusSyncComparedToSourceDirectoryPtrType ApplicationStatusSyncComparedToSourceDirectoryArgs

func ApplicationStatusSyncComparedToSourceDirectoryPtr(v *ApplicationStatusSyncComparedToSourceDirectoryArgs) ApplicationStatusSyncComparedToSourceDirectoryPtrInput {
	return (*applicationStatusSyncComparedToSourceDirectoryPtrType)(v)
}

func (*applicationStatusSyncComparedToSourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceDirectory)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourceDirectoryPtrType) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourceDirectoryPtrType) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryPtrOutput)
}

// Directory holds path/directory specific options
type ApplicationStatusSyncComparedToSourceDirectoryOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) ToApplicationStatusSyncComparedToSourceDirectoryOutput() ApplicationStatusSyncComparedToSourceDirectoryOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) ToApplicationStatusSyncComparedToSourceDirectoryOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return o.ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectory) *ApplicationStatusSyncComparedToSourceDirectory {
		return &v
	}).(ApplicationStatusSyncComparedToSourceDirectoryPtrOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) Jsonnet() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectory) *ApplicationStatusSyncComparedToSourceDirectoryJsonnet {
		return v.Jsonnet
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusSyncComparedToSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type ApplicationStatusSyncComparedToSourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceDirectory)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) ToApplicationStatusSyncComparedToSourceDirectoryPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) Elem() ApplicationStatusSyncComparedToSourceDirectoryOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectory) ApplicationStatusSyncComparedToSourceDirectory {
		return *v
	}).(ApplicationStatusSyncComparedToSourceDirectoryOutput)
}

// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) Jsonnet() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectory) *ApplicationStatusSyncComparedToSourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput)
}

// Recurse specifies whether to scan a directory recursively for manifests
func (o ApplicationStatusSyncComparedToSourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusSyncComparedToSourceDirectoryJsonnet struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars []ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars `pulumi:"extVars"`
	// Additional library search dirs
	Libs []string `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas `pulumi:"tlas"`
}

// ApplicationStatusSyncComparedToSourceDirectoryJsonnetInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs and ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryJsonnetInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs{...}
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput
	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs struct {
	// ExtVars is a list of Jsonnet External Variables
	ExtVars ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayInput `pulumi:"extVars"`
	// Additional library search dirs
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayInput `pulumi:"tlas"`
}

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectoryJsonnet)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput)
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput).ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs, ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtr and ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput
	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput
}

type applicationStatusSyncComparedToSourceDirectoryJsonnetPtrType ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs

func ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtr(v *ApplicationStatusSyncComparedToSourceDirectoryJsonnetArgs) ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrInput {
	return (*applicationStatusSyncComparedToSourceDirectoryJsonnetPtrType)(v)
}

func (*applicationStatusSyncComparedToSourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceDirectoryJsonnet)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourceDirectoryJsonnetPtrType) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourceDirectoryJsonnetPtrType) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput)
}

// Jsonnet holds options specific to Jsonnet
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return o.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnet) *ApplicationStatusSyncComparedToSourceDirectoryJsonnet {
		return &v
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) ExtVars() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnet) []ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars {
		return v.ExtVars
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput) Tlas() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnet) []ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas {
		return v.Tlas
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput)
}

type ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceDirectoryJsonnet)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) Elem() ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectoryJsonnet) ApplicationStatusSyncComparedToSourceDirectoryJsonnet {
		return *v
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput)
}

// ExtVars is a list of Jsonnet External Variables
func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) ExtVars() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectoryJsonnet) []ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput)
}

// Additional library search dirs
func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// TLAS is a list of Jsonnet Top-level Arguments
func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput) Tlas() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceDirectoryJsonnet) []ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs and ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs{...}
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput
	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput)
}

// ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArray and ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArray{ ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArgs{...} }
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput
	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput
}

type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArray []ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsInput

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArray) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArray) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars {
		return vs[0].([]ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVars)[vs[1].(int)]
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas struct {
	Code  *bool  `pulumi:"code"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs and ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs{...}
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput
	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs struct {
	Code  pulumi.BoolPtrInput `pulumi:"code"`
	Name  pulumi.StringInput  `pulumi:"name"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput)
}

// ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayInput is an input type that accepts ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArray and ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayInput` via:
//
//          ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArray{ ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArgs{...} }
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput
	ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput
}

type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArray []ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasInput

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArray) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput {
	return i.ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArray) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput)
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput() ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput) ToApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput) Index(i pulumi.IntInput) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas {
		return vs[0].([]ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlas)[vs[1].(int)]
	}).(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput)
}

// Helm holds helm specific options
type ApplicationStatusSyncComparedToSourceHelm struct {
	// FileParameters are file parameters to the helm template
	FileParameters []ApplicationStatusSyncComparedToSourceHelmFileParameters `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []ApplicationStatusSyncComparedToSourceHelmParameters `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// ApplicationStatusSyncComparedToSourceHelmInput is an input type that accepts ApplicationStatusSyncComparedToSourceHelmArgs and ApplicationStatusSyncComparedToSourceHelmOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceHelmInput` via:
//
//          ApplicationStatusSyncComparedToSourceHelmArgs{...}
type ApplicationStatusSyncComparedToSourceHelmInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceHelmOutput() ApplicationStatusSyncComparedToSourceHelmOutput
	ToApplicationStatusSyncComparedToSourceHelmOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceHelmOutput
}

// Helm holds helm specific options
type ApplicationStatusSyncComparedToSourceHelmArgs struct {
	// FileParameters are file parameters to the helm template
	FileParameters ApplicationStatusSyncComparedToSourceHelmFileParametersArrayInput `pulumi:"fileParameters"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters ApplicationStatusSyncComparedToSourceHelmParametersArrayInput `pulumi:"parameters"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Version is the Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusSyncComparedToSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceHelm)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceHelmArgs) ToApplicationStatusSyncComparedToSourceHelmOutput() ApplicationStatusSyncComparedToSourceHelmOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceHelmArgs) ToApplicationStatusSyncComparedToSourceHelmOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmOutput)
}

func (i ApplicationStatusSyncComparedToSourceHelmArgs) ToApplicationStatusSyncComparedToSourceHelmPtrOutput() ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceHelmArgs) ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmOutput).ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourceHelmPtrInput is an input type that accepts ApplicationStatusSyncComparedToSourceHelmArgs, ApplicationStatusSyncComparedToSourceHelmPtr and ApplicationStatusSyncComparedToSourceHelmPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceHelmPtrInput` via:
//
//          ApplicationStatusSyncComparedToSourceHelmArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourceHelmPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceHelmPtrOutput() ApplicationStatusSyncComparedToSourceHelmPtrOutput
	ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceHelmPtrOutput
}

type applicationStatusSyncComparedToSourceHelmPtrType ApplicationStatusSyncComparedToSourceHelmArgs

func ApplicationStatusSyncComparedToSourceHelmPtr(v *ApplicationStatusSyncComparedToSourceHelmArgs) ApplicationStatusSyncComparedToSourceHelmPtrInput {
	return (*applicationStatusSyncComparedToSourceHelmPtrType)(v)
}

func (*applicationStatusSyncComparedToSourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceHelm)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourceHelmPtrType) ToApplicationStatusSyncComparedToSourceHelmPtrOutput() ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourceHelmPtrType) ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmPtrOutput)
}

// Helm holds helm specific options
type ApplicationStatusSyncComparedToSourceHelmOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceHelm)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceHelmOutput) ToApplicationStatusSyncComparedToSourceHelmOutput() ApplicationStatusSyncComparedToSourceHelmOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmOutput) ToApplicationStatusSyncComparedToSourceHelmOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmOutput) ToApplicationStatusSyncComparedToSourceHelmPtrOutput() ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return o.ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourceHelmOutput) ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) *ApplicationStatusSyncComparedToSourceHelm {
		return &v
	}).(ApplicationStatusSyncComparedToSourceHelmPtrOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusSyncComparedToSourceHelmOutput) FileParameters() ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) []ApplicationStatusSyncComparedToSourceHelmFileParameters {
		return v.FileParameters
	}).(ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusSyncComparedToSourceHelmOutput) Parameters() ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) []ApplicationStatusSyncComparedToSourceHelmParameters {
		return v.Parameters
	}).(ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusSyncComparedToSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusSyncComparedToSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusSyncComparedToSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusSyncComparedToSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToSourceHelmPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceHelm)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) ToApplicationStatusSyncComparedToSourceHelmPtrOutput() ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) ToApplicationStatusSyncComparedToSourceHelmPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) Elem() ApplicationStatusSyncComparedToSourceHelmOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) ApplicationStatusSyncComparedToSourceHelm {
		return *v
	}).(ApplicationStatusSyncComparedToSourceHelmOutput)
}

// FileParameters are file parameters to the helm template
func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) FileParameters() ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) []ApplicationStatusSyncComparedToSourceHelmFileParameters {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput)
}

// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) Parameters() ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) []ApplicationStatusSyncComparedToSourceHelmParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput)
}

// ReleaseName is the Helm release name to use. If omitted it will use the application name
func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// ValuesFiles is a list of Helm value files to use when generating a template
func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Values specifies Helm values to be passed to helm template, typically defined as a block
func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

// Version is the Helm version to use for templating (either "2" or "3")
func (o ApplicationStatusSyncComparedToSourceHelmPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusSyncComparedToSourceHelmFileParameters struct {
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `pulumi:"path"`
}

// ApplicationStatusSyncComparedToSourceHelmFileParametersInput is an input type that accepts ApplicationStatusSyncComparedToSourceHelmFileParametersArgs and ApplicationStatusSyncComparedToSourceHelmFileParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceHelmFileParametersInput` via:
//
//          ApplicationStatusSyncComparedToSourceHelmFileParametersArgs{...}
type ApplicationStatusSyncComparedToSourceHelmFileParametersInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceHelmFileParametersOutput() ApplicationStatusSyncComparedToSourceHelmFileParametersOutput
	ToApplicationStatusSyncComparedToSourceHelmFileParametersOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceHelmFileParametersOutput
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusSyncComparedToSourceHelmFileParametersArgs struct {
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the file containing the values for the Helm parameter
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApplicationStatusSyncComparedToSourceHelmFileParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceHelmFileParametersArgs) ToApplicationStatusSyncComparedToSourceHelmFileParametersOutput() ApplicationStatusSyncComparedToSourceHelmFileParametersOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmFileParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceHelmFileParametersArgs) ToApplicationStatusSyncComparedToSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmFileParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmFileParametersOutput)
}

// ApplicationStatusSyncComparedToSourceHelmFileParametersArrayInput is an input type that accepts ApplicationStatusSyncComparedToSourceHelmFileParametersArray and ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceHelmFileParametersArrayInput` via:
//
//          ApplicationStatusSyncComparedToSourceHelmFileParametersArray{ ApplicationStatusSyncComparedToSourceHelmFileParametersArgs{...} }
type ApplicationStatusSyncComparedToSourceHelmFileParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput() ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput
	ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput
}

type ApplicationStatusSyncComparedToSourceHelmFileParametersArray []ApplicationStatusSyncComparedToSourceHelmFileParametersInput

func (ApplicationStatusSyncComparedToSourceHelmFileParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceHelmFileParameters)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceHelmFileParametersArray) ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput() ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceHelmFileParametersArray) ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput)
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type ApplicationStatusSyncComparedToSourceHelmFileParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceHelmFileParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceHelmFileParametersOutput) ToApplicationStatusSyncComparedToSourceHelmFileParametersOutput() ApplicationStatusSyncComparedToSourceHelmFileParametersOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmFileParametersOutput) ToApplicationStatusSyncComparedToSourceHelmFileParametersOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmFileParametersOutput {
	return o
}

// Name is the name of the Helm parameter
func (o ApplicationStatusSyncComparedToSourceHelmFileParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelmFileParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the file containing the values for the Helm parameter
func (o ApplicationStatusSyncComparedToSourceHelmFileParametersOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelmFileParameters) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceHelmFileParameters)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput) ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput() ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput) ToApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusSyncComparedToSourceHelmFileParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusSyncComparedToSourceHelmFileParameters {
		return vs[0].([]ApplicationStatusSyncComparedToSourceHelmFileParameters)[vs[1].(int)]
	}).(ApplicationStatusSyncComparedToSourceHelmFileParametersOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusSyncComparedToSourceHelmParameters struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name *string `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value *string `pulumi:"value"`
}

// ApplicationStatusSyncComparedToSourceHelmParametersInput is an input type that accepts ApplicationStatusSyncComparedToSourceHelmParametersArgs and ApplicationStatusSyncComparedToSourceHelmParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceHelmParametersInput` via:
//
//          ApplicationStatusSyncComparedToSourceHelmParametersArgs{...}
type ApplicationStatusSyncComparedToSourceHelmParametersInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceHelmParametersOutput() ApplicationStatusSyncComparedToSourceHelmParametersOutput
	ToApplicationStatusSyncComparedToSourceHelmParametersOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceHelmParametersOutput
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusSyncComparedToSourceHelmParametersArgs struct {
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name is the name of the Helm parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value for the Helm parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationStatusSyncComparedToSourceHelmParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceHelmParametersArgs) ToApplicationStatusSyncComparedToSourceHelmParametersOutput() ApplicationStatusSyncComparedToSourceHelmParametersOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceHelmParametersArgs) ToApplicationStatusSyncComparedToSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmParametersOutput)
}

// ApplicationStatusSyncComparedToSourceHelmParametersArrayInput is an input type that accepts ApplicationStatusSyncComparedToSourceHelmParametersArray and ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceHelmParametersArrayInput` via:
//
//          ApplicationStatusSyncComparedToSourceHelmParametersArray{ ApplicationStatusSyncComparedToSourceHelmParametersArgs{...} }
type ApplicationStatusSyncComparedToSourceHelmParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutput() ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput
	ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput
}

type ApplicationStatusSyncComparedToSourceHelmParametersArray []ApplicationStatusSyncComparedToSourceHelmParametersInput

func (ApplicationStatusSyncComparedToSourceHelmParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceHelmParameters)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceHelmParametersArray) ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutput() ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput {
	return i.ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceHelmParametersArray) ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput)
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type ApplicationStatusSyncComparedToSourceHelmParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceHelmParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceHelmParametersOutput) ToApplicationStatusSyncComparedToSourceHelmParametersOutput() ApplicationStatusSyncComparedToSourceHelmParametersOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmParametersOutput) ToApplicationStatusSyncComparedToSourceHelmParametersOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmParametersOutput {
	return o
}

// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
func (o ApplicationStatusSyncComparedToSourceHelmParametersOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelmParameters) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name is the name of the Helm parameter
func (o ApplicationStatusSyncComparedToSourceHelmParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelmParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value for the Helm parameter
func (o ApplicationStatusSyncComparedToSourceHelmParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceHelmParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceHelmParameters)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput) ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutput() ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput) ToApplicationStatusSyncComparedToSourceHelmParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusSyncComparedToSourceHelmParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusSyncComparedToSourceHelmParameters {
		return vs[0].([]ApplicationStatusSyncComparedToSourceHelmParameters)[vs[1].(int)]
	}).(ApplicationStatusSyncComparedToSourceHelmParametersOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusSyncComparedToSourceKsonnet struct {
	// Environment is a ksonnet application environment name
	Environment *string `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters []ApplicationStatusSyncComparedToSourceKsonnetParameters `pulumi:"parameters"`
}

// ApplicationStatusSyncComparedToSourceKsonnetInput is an input type that accepts ApplicationStatusSyncComparedToSourceKsonnetArgs and ApplicationStatusSyncComparedToSourceKsonnetOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKsonnetInput` via:
//
//          ApplicationStatusSyncComparedToSourceKsonnetArgs{...}
type ApplicationStatusSyncComparedToSourceKsonnetInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKsonnetOutput() ApplicationStatusSyncComparedToSourceKsonnetOutput
	ToApplicationStatusSyncComparedToSourceKsonnetOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKsonnetOutput
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusSyncComparedToSourceKsonnetArgs struct {
	// Environment is a ksonnet application environment name
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Parameters are a list of ksonnet component parameter override values
	Parameters ApplicationStatusSyncComparedToSourceKsonnetParametersArrayInput `pulumi:"parameters"`
}

func (ApplicationStatusSyncComparedToSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKsonnet)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceKsonnetArgs) ToApplicationStatusSyncComparedToSourceKsonnetOutput() ApplicationStatusSyncComparedToSourceKsonnetOutput {
	return i.ToApplicationStatusSyncComparedToSourceKsonnetOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKsonnetArgs) ToApplicationStatusSyncComparedToSourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKsonnetOutput)
}

func (i ApplicationStatusSyncComparedToSourceKsonnetArgs) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutput() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKsonnetArgs) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKsonnetOutput).ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourceKsonnetPtrInput is an input type that accepts ApplicationStatusSyncComparedToSourceKsonnetArgs, ApplicationStatusSyncComparedToSourceKsonnetPtr and ApplicationStatusSyncComparedToSourceKsonnetPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKsonnetPtrInput` via:
//
//          ApplicationStatusSyncComparedToSourceKsonnetArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourceKsonnetPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKsonnetPtrOutput() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput
	ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKsonnetPtrOutput
}

type applicationStatusSyncComparedToSourceKsonnetPtrType ApplicationStatusSyncComparedToSourceKsonnetArgs

func ApplicationStatusSyncComparedToSourceKsonnetPtr(v *ApplicationStatusSyncComparedToSourceKsonnetArgs) ApplicationStatusSyncComparedToSourceKsonnetPtrInput {
	return (*applicationStatusSyncComparedToSourceKsonnetPtrType)(v)
}

func (*applicationStatusSyncComparedToSourceKsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceKsonnet)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourceKsonnetPtrType) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutput() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourceKsonnetPtrType) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKsonnetPtrOutput)
}

// Ksonnet holds ksonnet specific options
type ApplicationStatusSyncComparedToSourceKsonnetOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKsonnetOutput) ToApplicationStatusSyncComparedToSourceKsonnetOutput() ApplicationStatusSyncComparedToSourceKsonnetOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetOutput) ToApplicationStatusSyncComparedToSourceKsonnetOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetOutput) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutput() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return o.ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourceKsonnetOutput) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKsonnet) *ApplicationStatusSyncComparedToSourceKsonnet {
		return &v
	}).(ApplicationStatusSyncComparedToSourceKsonnetPtrOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusSyncComparedToSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusSyncComparedToSourceKsonnetOutput) Parameters() ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKsonnet) []ApplicationStatusSyncComparedToSourceKsonnetParameters {
		return v.Parameters
	}).(ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput)
}

type ApplicationStatusSyncComparedToSourceKsonnetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceKsonnet)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKsonnetPtrOutput) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutput() ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetPtrOutput) ToApplicationStatusSyncComparedToSourceKsonnetPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetPtrOutput) Elem() ApplicationStatusSyncComparedToSourceKsonnetOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKsonnet) ApplicationStatusSyncComparedToSourceKsonnet {
		return *v
	}).(ApplicationStatusSyncComparedToSourceKsonnetOutput)
}

// Environment is a ksonnet application environment name
func (o ApplicationStatusSyncComparedToSourceKsonnetPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKsonnet) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Parameters are a list of ksonnet component parameter override values
func (o ApplicationStatusSyncComparedToSourceKsonnetPtrOutput) Parameters() ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKsonnet) []ApplicationStatusSyncComparedToSourceKsonnetParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusSyncComparedToSourceKsonnetParameters struct {
	Component *string `pulumi:"component"`
	Name      string  `pulumi:"name"`
	Value     string  `pulumi:"value"`
}

// ApplicationStatusSyncComparedToSourceKsonnetParametersInput is an input type that accepts ApplicationStatusSyncComparedToSourceKsonnetParametersArgs and ApplicationStatusSyncComparedToSourceKsonnetParametersOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKsonnetParametersInput` via:
//
//          ApplicationStatusSyncComparedToSourceKsonnetParametersArgs{...}
type ApplicationStatusSyncComparedToSourceKsonnetParametersInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKsonnetParametersOutput() ApplicationStatusSyncComparedToSourceKsonnetParametersOutput
	ToApplicationStatusSyncComparedToSourceKsonnetParametersOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKsonnetParametersOutput
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusSyncComparedToSourceKsonnetParametersArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Value     pulumi.StringInput    `pulumi:"value"`
}

func (ApplicationStatusSyncComparedToSourceKsonnetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceKsonnetParametersArgs) ToApplicationStatusSyncComparedToSourceKsonnetParametersOutput() ApplicationStatusSyncComparedToSourceKsonnetParametersOutput {
	return i.ToApplicationStatusSyncComparedToSourceKsonnetParametersOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKsonnetParametersArgs) ToApplicationStatusSyncComparedToSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKsonnetParametersOutput)
}

// ApplicationStatusSyncComparedToSourceKsonnetParametersArrayInput is an input type that accepts ApplicationStatusSyncComparedToSourceKsonnetParametersArray and ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKsonnetParametersArrayInput` via:
//
//          ApplicationStatusSyncComparedToSourceKsonnetParametersArray{ ApplicationStatusSyncComparedToSourceKsonnetParametersArgs{...} }
type ApplicationStatusSyncComparedToSourceKsonnetParametersArrayInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput() ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput
	ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput
}

type ApplicationStatusSyncComparedToSourceKsonnetParametersArray []ApplicationStatusSyncComparedToSourceKsonnetParametersInput

func (ApplicationStatusSyncComparedToSourceKsonnetParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceKsonnetParameters)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceKsonnetParametersArray) ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput() ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput {
	return i.ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKsonnetParametersArray) ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput)
}

// KsonnetParameter is a ksonnet component parameter
type ApplicationStatusSyncComparedToSourceKsonnetParametersOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKsonnetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersOutput) ToApplicationStatusSyncComparedToSourceKsonnetParametersOutput() ApplicationStatusSyncComparedToSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersOutput) ToApplicationStatusSyncComparedToSourceKsonnetParametersOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetParametersOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKsonnetParameters) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKsonnetParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKsonnetParameters) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourceKsonnetParameters)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput) ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput() ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput) ToApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput) Index(i pulumi.IntInput) ApplicationStatusSyncComparedToSourceKsonnetParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusSyncComparedToSourceKsonnetParameters {
		return vs[0].([]ApplicationStatusSyncComparedToSourceKsonnetParameters)[vs[1].(int)]
	}).(ApplicationStatusSyncComparedToSourceKsonnetParametersOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusSyncComparedToSourceKustomize struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images []string `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `pulumi:"version"`
}

// ApplicationStatusSyncComparedToSourceKustomizeInput is an input type that accepts ApplicationStatusSyncComparedToSourceKustomizeArgs and ApplicationStatusSyncComparedToSourceKustomizeOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKustomizeInput` via:
//
//          ApplicationStatusSyncComparedToSourceKustomizeArgs{...}
type ApplicationStatusSyncComparedToSourceKustomizeInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKustomizeOutput() ApplicationStatusSyncComparedToSourceKustomizeOutput
	ToApplicationStatusSyncComparedToSourceKustomizeOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKustomizeOutput
}

// Kustomize holds kustomize specific options
type ApplicationStatusSyncComparedToSourceKustomizeArgs struct {
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Images is a list of Kustomize image override specifications
	Images pulumi.StringArrayInput `pulumi:"images"`
	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationStatusSyncComparedToSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKustomize)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceKustomizeArgs) ToApplicationStatusSyncComparedToSourceKustomizeOutput() ApplicationStatusSyncComparedToSourceKustomizeOutput {
	return i.ToApplicationStatusSyncComparedToSourceKustomizeOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKustomizeArgs) ToApplicationStatusSyncComparedToSourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKustomizeOutput)
}

func (i ApplicationStatusSyncComparedToSourceKustomizeArgs) ToApplicationStatusSyncComparedToSourceKustomizePtrOutput() ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKustomizeArgs) ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKustomizeOutput).ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourceKustomizePtrInput is an input type that accepts ApplicationStatusSyncComparedToSourceKustomizeArgs, ApplicationStatusSyncComparedToSourceKustomizePtr and ApplicationStatusSyncComparedToSourceKustomizePtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKustomizePtrInput` via:
//
//          ApplicationStatusSyncComparedToSourceKustomizeArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourceKustomizePtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKustomizePtrOutput() ApplicationStatusSyncComparedToSourceKustomizePtrOutput
	ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKustomizePtrOutput
}

type applicationStatusSyncComparedToSourceKustomizePtrType ApplicationStatusSyncComparedToSourceKustomizeArgs

func ApplicationStatusSyncComparedToSourceKustomizePtr(v *ApplicationStatusSyncComparedToSourceKustomizeArgs) ApplicationStatusSyncComparedToSourceKustomizePtrInput {
	return (*applicationStatusSyncComparedToSourceKustomizePtrType)(v)
}

func (*applicationStatusSyncComparedToSourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceKustomize)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourceKustomizePtrType) ToApplicationStatusSyncComparedToSourceKustomizePtrOutput() ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return i.ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourceKustomizePtrType) ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKustomizePtrOutput)
}

// Kustomize holds kustomize specific options
type ApplicationStatusSyncComparedToSourceKustomizeOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) ToApplicationStatusSyncComparedToSourceKustomizeOutput() ApplicationStatusSyncComparedToSourceKustomizeOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) ToApplicationStatusSyncComparedToSourceKustomizeOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizeOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) ToApplicationStatusSyncComparedToSourceKustomizePtrOutput() ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return o.ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) *ApplicationStatusSyncComparedToSourceKustomize {
		return &v
	}).(ApplicationStatusSyncComparedToSourceKustomizePtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) map[string]string { return v.CommonAnnotations }).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusSyncComparedToSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToSourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourceKustomize)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) ToApplicationStatusSyncComparedToSourceKustomizePtrOutput() ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) ToApplicationStatusSyncComparedToSourceKustomizePtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizePtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) Elem() ApplicationStatusSyncComparedToSourceKustomizeOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) ApplicationStatusSyncComparedToSourceKustomize {
		return *v
	}).(ApplicationStatusSyncComparedToSourceKustomizeOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Images is a list of Kustomize image override specifications
func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// NamePrefix is a prefix appended to resources for Kustomize apps
func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// NameSuffix is a suffix appended to resources for Kustomize apps
func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version controls which version of Kustomize to use for rendering manifests
func (o ApplicationStatusSyncComparedToSourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotations struct {
}

// ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsInput is an input type that accepts ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsArgs and ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsInput` via:
//
//          ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsArgs{...}
type ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput() ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput
	ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsArgs struct {
}

func (ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsArgs) ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput() ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput {
	return i.ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsArgs) ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput)
}

// CommonAnnotations is a list of additional annotations to add to rendered manifests
type ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotations)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput) ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput() ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput) ToApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput {
	return o
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusSyncComparedToSourceKustomizeCommonLabels struct {
}

// ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsInput is an input type that accepts ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsArgs and ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsInput` via:
//
//          ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsArgs{...}
type ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput() ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput
	ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsArgs struct {
}

func (ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKustomizeCommonLabels)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsArgs) ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput() ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput {
	return i.ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsArgs) ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput)
}

// CommonLabels is a list of additional labels to add to rendered manifests
type ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourceKustomizeCommonLabels)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput) ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput() ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput) ToApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput {
	return o
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusSyncComparedToSourcePlugin struct {
	// Env is a list of environment variable entries
	Env  []ApplicationStatusSyncComparedToSourcePluginEnv `pulumi:"env"`
	Name *string                                          `pulumi:"name"`
}

// ApplicationStatusSyncComparedToSourcePluginInput is an input type that accepts ApplicationStatusSyncComparedToSourcePluginArgs and ApplicationStatusSyncComparedToSourcePluginOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourcePluginInput` via:
//
//          ApplicationStatusSyncComparedToSourcePluginArgs{...}
type ApplicationStatusSyncComparedToSourcePluginInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourcePluginOutput() ApplicationStatusSyncComparedToSourcePluginOutput
	ToApplicationStatusSyncComparedToSourcePluginOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourcePluginOutput
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusSyncComparedToSourcePluginArgs struct {
	// Env is a list of environment variable entries
	Env  ApplicationStatusSyncComparedToSourcePluginEnvArrayInput `pulumi:"env"`
	Name pulumi.StringPtrInput                                    `pulumi:"name"`
}

func (ApplicationStatusSyncComparedToSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourcePlugin)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourcePluginArgs) ToApplicationStatusSyncComparedToSourcePluginOutput() ApplicationStatusSyncComparedToSourcePluginOutput {
	return i.ToApplicationStatusSyncComparedToSourcePluginOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourcePluginArgs) ToApplicationStatusSyncComparedToSourcePluginOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourcePluginOutput)
}

func (i ApplicationStatusSyncComparedToSourcePluginArgs) ToApplicationStatusSyncComparedToSourcePluginPtrOutput() ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourcePluginArgs) ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourcePluginOutput).ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(ctx)
}

// ApplicationStatusSyncComparedToSourcePluginPtrInput is an input type that accepts ApplicationStatusSyncComparedToSourcePluginArgs, ApplicationStatusSyncComparedToSourcePluginPtr and ApplicationStatusSyncComparedToSourcePluginPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourcePluginPtrInput` via:
//
//          ApplicationStatusSyncComparedToSourcePluginArgs{...}
//
//  or:
//
//          nil
type ApplicationStatusSyncComparedToSourcePluginPtrInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourcePluginPtrOutput() ApplicationStatusSyncComparedToSourcePluginPtrOutput
	ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourcePluginPtrOutput
}

type applicationStatusSyncComparedToSourcePluginPtrType ApplicationStatusSyncComparedToSourcePluginArgs

func ApplicationStatusSyncComparedToSourcePluginPtr(v *ApplicationStatusSyncComparedToSourcePluginArgs) ApplicationStatusSyncComparedToSourcePluginPtrInput {
	return (*applicationStatusSyncComparedToSourcePluginPtrType)(v)
}

func (*applicationStatusSyncComparedToSourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourcePlugin)(nil)).Elem()
}

func (i *applicationStatusSyncComparedToSourcePluginPtrType) ToApplicationStatusSyncComparedToSourcePluginPtrOutput() ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return i.ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(context.Background())
}

func (i *applicationStatusSyncComparedToSourcePluginPtrType) ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourcePluginPtrOutput)
}

// ConfigManagementPlugin holds config management plugin specific options
type ApplicationStatusSyncComparedToSourcePluginOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourcePluginOutput) ToApplicationStatusSyncComparedToSourcePluginOutput() ApplicationStatusSyncComparedToSourcePluginOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginOutput) ToApplicationStatusSyncComparedToSourcePluginOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginOutput) ToApplicationStatusSyncComparedToSourcePluginPtrOutput() ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return o.ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusSyncComparedToSourcePluginOutput) ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourcePlugin) *ApplicationStatusSyncComparedToSourcePlugin {
		return &v
	}).(ApplicationStatusSyncComparedToSourcePluginPtrOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusSyncComparedToSourcePluginOutput) Env() ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourcePlugin) []ApplicationStatusSyncComparedToSourcePluginEnv {
		return v.Env
	}).(ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput)
}

func (o ApplicationStatusSyncComparedToSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationStatusSyncComparedToSourcePluginPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusSyncComparedToSourcePlugin)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourcePluginPtrOutput) ToApplicationStatusSyncComparedToSourcePluginPtrOutput() ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginPtrOutput) ToApplicationStatusSyncComparedToSourcePluginPtrOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginPtrOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginPtrOutput) Elem() ApplicationStatusSyncComparedToSourcePluginOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourcePlugin) ApplicationStatusSyncComparedToSourcePlugin {
		return *v
	}).(ApplicationStatusSyncComparedToSourcePluginOutput)
}

// Env is a list of environment variable entries
func (o ApplicationStatusSyncComparedToSourcePluginPtrOutput) Env() ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourcePlugin) []ApplicationStatusSyncComparedToSourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput)
}

func (o ApplicationStatusSyncComparedToSourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusSyncComparedToSourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusSyncComparedToSourcePluginEnv struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name string `pulumi:"name"`
	// Value is the value of the variable
	Value string `pulumi:"value"`
}

// ApplicationStatusSyncComparedToSourcePluginEnvInput is an input type that accepts ApplicationStatusSyncComparedToSourcePluginEnvArgs and ApplicationStatusSyncComparedToSourcePluginEnvOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourcePluginEnvInput` via:
//
//          ApplicationStatusSyncComparedToSourcePluginEnvArgs{...}
type ApplicationStatusSyncComparedToSourcePluginEnvInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourcePluginEnvOutput() ApplicationStatusSyncComparedToSourcePluginEnvOutput
	ToApplicationStatusSyncComparedToSourcePluginEnvOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourcePluginEnvOutput
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusSyncComparedToSourcePluginEnvArgs struct {
	// Name is the name of the variable, usually expressed in uppercase
	Name pulumi.StringInput `pulumi:"name"`
	// Value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationStatusSyncComparedToSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourcePluginEnvArgs) ToApplicationStatusSyncComparedToSourcePluginEnvOutput() ApplicationStatusSyncComparedToSourcePluginEnvOutput {
	return i.ToApplicationStatusSyncComparedToSourcePluginEnvOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourcePluginEnvArgs) ToApplicationStatusSyncComparedToSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourcePluginEnvOutput)
}

// ApplicationStatusSyncComparedToSourcePluginEnvArrayInput is an input type that accepts ApplicationStatusSyncComparedToSourcePluginEnvArray and ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusSyncComparedToSourcePluginEnvArrayInput` via:
//
//          ApplicationStatusSyncComparedToSourcePluginEnvArray{ ApplicationStatusSyncComparedToSourcePluginEnvArgs{...} }
type ApplicationStatusSyncComparedToSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutput() ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput
	ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutputWithContext(context.Context) ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput
}

type ApplicationStatusSyncComparedToSourcePluginEnvArray []ApplicationStatusSyncComparedToSourcePluginEnvInput

func (ApplicationStatusSyncComparedToSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourcePluginEnv)(nil)).Elem()
}

func (i ApplicationStatusSyncComparedToSourcePluginEnvArray) ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutput() ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput {
	return i.ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusSyncComparedToSourcePluginEnvArray) ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput)
}

// EnvEntry represents an entry in the application's environment
type ApplicationStatusSyncComparedToSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusSyncComparedToSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourcePluginEnvOutput) ToApplicationStatusSyncComparedToSourcePluginEnvOutput() ApplicationStatusSyncComparedToSourcePluginEnvOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginEnvOutput) ToApplicationStatusSyncComparedToSourcePluginEnvOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginEnvOutput {
	return o
}

// Name is the name of the variable, usually expressed in uppercase
func (o ApplicationStatusSyncComparedToSourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value is the value of the variable
func (o ApplicationStatusSyncComparedToSourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusSyncComparedToSourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusSyncComparedToSourcePluginEnv)(nil)).Elem()
}

func (o ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput) ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutput() ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput) ToApplicationStatusSyncComparedToSourcePluginEnvArrayOutputWithContext(ctx context.Context) ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput {
	return o
}

func (o ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) ApplicationStatusSyncComparedToSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusSyncComparedToSourcePluginEnv {
		return vs[0].([]ApplicationStatusSyncComparedToSourcePluginEnv)[vs[1].(int)]
	}).(ApplicationStatusSyncComparedToSourcePluginEnvOutput)
}

func init() {
	pulumi.RegisterOutputType(AppProjectTypeOutput{})
	pulumi.RegisterOutputType(AppProjectMetadataOutput{})
	pulumi.RegisterOutputType(AppProjectSpecOutput{})
	pulumi.RegisterOutputType(AppProjectSpecPtrOutput{})
	pulumi.RegisterOutputType(AppProjectSpecClusterResourceBlacklistOutput{})
	pulumi.RegisterOutputType(AppProjectSpecClusterResourceBlacklistArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecClusterResourceWhitelistOutput{})
	pulumi.RegisterOutputType(AppProjectSpecClusterResourceWhitelistArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecDestinationsOutput{})
	pulumi.RegisterOutputType(AppProjectSpecDestinationsArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecNamespaceResourceBlacklistOutput{})
	pulumi.RegisterOutputType(AppProjectSpecNamespaceResourceBlacklistArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecNamespaceResourceWhitelistOutput{})
	pulumi.RegisterOutputType(AppProjectSpecNamespaceResourceWhitelistArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecOrphanedResourcesOutput{})
	pulumi.RegisterOutputType(AppProjectSpecOrphanedResourcesPtrOutput{})
	pulumi.RegisterOutputType(AppProjectSpecOrphanedResourcesIgnoreOutput{})
	pulumi.RegisterOutputType(AppProjectSpecOrphanedResourcesIgnoreArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecRolesOutput{})
	pulumi.RegisterOutputType(AppProjectSpecRolesArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecRolesJwtTokensOutput{})
	pulumi.RegisterOutputType(AppProjectSpecRolesJwtTokensArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecSignatureKeysOutput{})
	pulumi.RegisterOutputType(AppProjectSpecSignatureKeysArrayOutput{})
	pulumi.RegisterOutputType(AppProjectSpecSyncWindowsOutput{})
	pulumi.RegisterOutputType(AppProjectSpecSyncWindowsArrayOutput{})
	pulumi.RegisterOutputType(AppProjectStatusOutput{})
	pulumi.RegisterOutputType(AppProjectStatusPtrOutput{})
	pulumi.RegisterOutputType(AppProjectStatusJwtTokensByRoleOutput{})
	pulumi.RegisterOutputType(AppProjectStatusJwtTokensByRoleMapOutput{})
	pulumi.RegisterOutputType(AppProjectStatusJwtTokensByRoleItemsOutput{})
	pulumi.RegisterOutputType(AppProjectStatusJwtTokensByRoleItemsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationMetadataOutput{})
	pulumi.RegisterOutputType(ApplicationOperationOutput{})
	pulumi.RegisterOutputType(ApplicationOperationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationInfoOutput{})
	pulumi.RegisterOutputType(ApplicationOperationInfoArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationInitiatedByOutput{})
	pulumi.RegisterOutputType(ApplicationOperationInitiatedByPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationRetryOutput{})
	pulumi.RegisterOutputType(ApplicationOperationRetryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationRetryBackoffOutput{})
	pulumi.RegisterOutputType(ApplicationOperationRetryBackoffPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncResourcesOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncResourcesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryJsonnetTlasOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceDirectoryJsonnetTlasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceHelmOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceHelmPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceHelmFileParametersOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceHelmFileParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceHelmParametersOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceHelmParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKsonnetParametersOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKsonnetParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKustomizeOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKustomizeCommonAnnotationsOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourceKustomizeCommonLabelsOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourcePluginOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourcePluginPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSyncStrategyOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSyncStrategyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSyncStrategyApplyOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSyncStrategyApplyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSyncStrategyHookOutput{})
	pulumi.RegisterOutputType(ApplicationOperationSyncSyncStrategyHookPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecOutput{})
	pulumi.RegisterOutputType(ApplicationSpecPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecDestinationOutput{})
	pulumi.RegisterOutputType(ApplicationSpecDestinationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecIgnoreDifferencesOutput{})
	pulumi.RegisterOutputType(ApplicationSpecIgnoreDifferencesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecInfoOutput{})
	pulumi.RegisterOutputType(ApplicationSpecInfoArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryJsonnetExtVarsOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryJsonnetExtVarsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryJsonnetTlasOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceDirectoryJsonnetTlasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceHelmOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceHelmPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceHelmFileParametersOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceHelmFileParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceHelmParametersOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceHelmParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKsonnetParametersOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKsonnetParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKustomizeOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKustomizeCommonAnnotationsOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourceKustomizeCommonLabelsOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourcePluginOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourcePluginPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyAutomatedOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyAutomatedPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyRetryOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyRetryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyRetryBackoffOutput{})
	pulumi.RegisterOutputType(ApplicationSpecSyncPolicyRetryBackoffPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOutput{})
	pulumi.RegisterOutputType(ApplicationStatusPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusConditionsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHealthOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHealthPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistoryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistoryArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryJsonnetExtVarsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryJsonnetTlasOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceDirectoryJsonnetTlasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceHelmOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceHelmPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceHelmFileParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceHelmFileParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceHelmParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceHelmParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKsonnetParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKsonnetParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKustomizeOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKustomizeCommonAnnotationsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourceKustomizeCommonLabelsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourcePluginOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourcePluginPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourcePluginEnvOutput{})
	pulumi.RegisterOutputType(ApplicationStatusHistorySourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStatePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationInfoOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationInfoArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationInitiatedByOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationInitiatedByPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationRetryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationRetryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationRetryBackoffOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationRetryBackoffPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncResourcesOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncResourcesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceHelmOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceHelmPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceHelmParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceHelmParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKsonnetParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKustomizeOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonAnnotationsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourceKustomizeCommonLabelsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourcePluginOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourcePluginPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSyncStrategyOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSyncStrategyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSyncStrategyApplyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSyncStrategyHookOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateOperationSyncSyncStrategyHookPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultResourcesOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultResourcesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceHelmOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceHelmPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceHelmFileParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceHelmParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceHelmParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKsonnetParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKustomizeOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKustomizeCommonAnnotationsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourceKustomizeCommonLabelsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourcePluginOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourcePluginPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOperationStateSyncResultSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusResourcesOutput{})
	pulumi.RegisterOutputType(ApplicationStatusResourcesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusResourcesHealthOutput{})
	pulumi.RegisterOutputType(ApplicationStatusResourcesHealthPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSummaryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSummaryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToDestinationOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToDestinationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceHelmOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceHelmPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceHelmFileParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceHelmFileParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceHelmParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceHelmParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKsonnetOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKsonnetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKsonnetParametersOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKsonnetParametersArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKustomizeOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKustomizeCommonAnnotationsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourceKustomizeCommonLabelsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourcePluginOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourcePluginPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(ApplicationStatusSyncComparedToSourcePluginEnvArrayOutput{})
}
