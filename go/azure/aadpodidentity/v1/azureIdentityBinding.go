// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AzureIdentityBinding brings together the spec of matching pods and the identity which they can use.
type AzureIdentityBinding struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// AzureIdentityBindingSpec matches the pod with the Identity. Used to indicate the potential matches to look for between the pod/deployment and the identities present.
	Spec AzureIdentityBindingSpecPtrOutput `pulumi:"spec"`
	// AzureIdentityBindingStatus contains the status of an AzureIdentityBinding.
	Status AzureIdentityBindingStatusPtrOutput `pulumi:"status"`
}

// NewAzureIdentityBinding registers a new resource with the given unique name, arguments, and options.
func NewAzureIdentityBinding(ctx *pulumi.Context,
	name string, args *AzureIdentityBindingArgs, opts ...pulumi.ResourceOption) (*AzureIdentityBinding, error) {
	if args == nil {
		args = &AzureIdentityBindingArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("aadpodidentity.k8s.io/v1")
	args.Kind = pulumi.StringPtr("AzureIdentityBinding")
	var resource AzureIdentityBinding
	err := ctx.RegisterResource("kubernetes:aadpodidentity.k8s.io/v1:AzureIdentityBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureIdentityBinding gets an existing AzureIdentityBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureIdentityBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureIdentityBindingState, opts ...pulumi.ResourceOption) (*AzureIdentityBinding, error) {
	var resource AzureIdentityBinding
	err := ctx.ReadResource("kubernetes:aadpodidentity.k8s.io/v1:AzureIdentityBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureIdentityBinding resources.
type azureIdentityBindingState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureIdentityBindingSpec matches the pod with the Identity. Used to indicate the potential matches to look for between the pod/deployment and the identities present.
	Spec *AzureIdentityBindingSpec `pulumi:"spec"`
	// AzureIdentityBindingStatus contains the status of an AzureIdentityBinding.
	Status *AzureIdentityBindingStatus `pulumi:"status"`
}

type AzureIdentityBindingState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AzureIdentityBindingSpec matches the pod with the Identity. Used to indicate the potential matches to look for between the pod/deployment and the identities present.
	Spec AzureIdentityBindingSpecPtrInput
	// AzureIdentityBindingStatus contains the status of an AzureIdentityBinding.
	Status AzureIdentityBindingStatusPtrInput
}

func (AzureIdentityBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureIdentityBindingState)(nil)).Elem()
}

type azureIdentityBindingArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureIdentityBindingSpec matches the pod with the Identity. Used to indicate the potential matches to look for between the pod/deployment and the identities present.
	Spec *AzureIdentityBindingSpec `pulumi:"spec"`
	// AzureIdentityBindingStatus contains the status of an AzureIdentityBinding.
	Status *AzureIdentityBindingStatus `pulumi:"status"`
}

// The set of arguments for constructing a AzureIdentityBinding resource.
type AzureIdentityBindingArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AzureIdentityBindingSpec matches the pod with the Identity. Used to indicate the potential matches to look for between the pod/deployment and the identities present.
	Spec AzureIdentityBindingSpecPtrInput
	// AzureIdentityBindingStatus contains the status of an AzureIdentityBinding.
	Status AzureIdentityBindingStatusPtrInput
}

func (AzureIdentityBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureIdentityBindingArgs)(nil)).Elem()
}

type AzureIdentityBindingInput interface {
	pulumi.Input

	ToAzureIdentityBindingOutput() AzureIdentityBindingOutput
	ToAzureIdentityBindingOutputWithContext(ctx context.Context) AzureIdentityBindingOutput
}

func (*AzureIdentityBinding) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIdentityBinding)(nil))
}

func (i *AzureIdentityBinding) ToAzureIdentityBindingOutput() AzureIdentityBindingOutput {
	return i.ToAzureIdentityBindingOutputWithContext(context.Background())
}

func (i *AzureIdentityBinding) ToAzureIdentityBindingOutputWithContext(ctx context.Context) AzureIdentityBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIdentityBindingOutput)
}

type AzureIdentityBindingOutput struct {
	*pulumi.OutputState
}

func (AzureIdentityBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIdentityBinding)(nil))
}

func (o AzureIdentityBindingOutput) ToAzureIdentityBindingOutput() AzureIdentityBindingOutput {
	return o
}

func (o AzureIdentityBindingOutput) ToAzureIdentityBindingOutputWithContext(ctx context.Context) AzureIdentityBindingOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AzureIdentityBindingOutput{})
}
